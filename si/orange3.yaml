__init__.py:
    orange.addons: null
    classification: null
    clustering: null
    distance: null
    ensembles: null
    evaluation: null
    misc: null
    modelling: null
    preprocess: null
    projection: null
    regression: null
    statistics: null
    version: null
    widgets: null
    pyqt5: null
    pyqt4: null
    libGL.so.1: null
base.py:
    Learner: null
    Model: null
    SklLearner: null
    SklModel: null
    ReprableWithPreprocessors: null
    class `ReprableWithPreprocessors`:
        def `_reprable_omit_param`:
            preprocessors: null
    class `Learner`:
        def `fit`:
            Descendants of Learner must overload method fit or fit_storage: null
        def `__call__`:
            incompatibility_reason: null
            check_learner_adequacy: null
            'check_learner_adequacy is deprecated and will be removed ': null
            'in upcoming releases. Learners should instead implement ': null
            the incompatibility_reason method.: null
            Preprocessing...: null
            'A keyword argument ''progress_callback'' has been ': null
            'added to the preprocess() signature. Implementing ': null
            'the method without the argument is deprecated and ': null
            will result in an error in the future.: null
            '%s doesn''t support multiple class variables': null
            Fitting...: null
            domain: null
        def `name`:
            Learner: null
            Fitter: null
            Skl: null
            learner: null
            ([a-z0-9])([A-Z]): null
            \1 \2: null
            (.)([A-Z][a-z]+): null
    class `Model`:
        def `predict`:
            Descendants of Model must overload method predict: null
        def `predict_storage`:
            Unrecognized argument (instance of '{}'): null
        def `get_backmappers`:
            Mismatching number of model's classes and data classes: null
            'Model for ''{modelclass.name}'' ': null
            cannot predict '{dataclass.name}': null
            'Variables ''{modelclass.name}'' in the model is ': null
            'incompatible with the variable of the same name ': null
            in the data.: null
        def `data_to_model_domain`:
            domain transformation produced no defined values: null
        def `__call__`:
            invalid value of argument 'ret': null
            cannot predict continuous distributions: null
            Unrecognized argument (instance of '{}'): null
            model returned a %i-dimensional array: null
        def `__getstate__`:
            original_data: null
    class `SklModel`:
        def `predict`:
            probability: null
            predict_proba: null
        def `__repr__`:
            '  # params=': null
    class `SklLearner`:
        def `_get_sklparams`:
            self: null
            Wrapper does not define '__wraps__': null
        def `preprocess`:
            'Wrapped scikit-learn methods do not support ': null
            multinomial variables.: null
        def `supports_weights`:
            sample_weight: null
    class `KNNBase`:
        def `__init__`:
            euclidean: null
            uniform: null
            auto: null
        def `fit`:
            metric_params: null
            metric: null
            mahalanobis: null
            V: null
    class `NNBase`:
        def `__init__`:
            relu: null
            adam: null
            auto: null
            constant: null
    class `CatGBModel`:
        def `predict`:
            predict_proba: null
        def `__repr__`:
            '  # params=': null
tree.py:
    class `MappedDiscreteNode`:
        def `branches_from_mapping`:
            '{:>0{}b}': null
        def `_set_child_descriptions`:
            (unreachable): null
            '{} or {}': null
            ', ': null
    class `NumericNode`:
        def `_set_child_descriptions`:
            '{} {}': null
            ≤>: null
    class `TreeModel`:
        def `rule`:
            '{} > {}': null
            '{} ≤ {}': null
            '{} < {} ≤ {}': null
            '{}: {}': null
        def `print_tree`:
            '{:>20} {}{} {}\n': null
            '    ': null
util.py:
    default: null
    ORANGE_DEPRECATIONS_ERROR: null
    error: null
    def `log_warnings`:
        nested log_warnings: null
    def `resource_filename`:
        Orange: null
    def `deprecated`:
        '; Instead, use ': null
        def `decorator`:
            def `wrapper`:
                '{}.{}': null
                __self__: null
                Call to deprecated {}{}: null
    def `literal_eval`:
        set(): null
    ==: null
    '>=': null
    <=: null
    '>': null
    <: null
    _Requirement: null
    name: null
    op: null
    value: null
    'True': null
    'true': null
    'False': null
    'false': null
    def `requirementsSatisfied`:
        'Invalid requirement specification: %s': null
    class `Registry`:
        def `__new__`:
            registry: null
        def `__str__`:
            '{}({{{}}})': null
            ', ': null
    def `namegen`:
        _: null
    def `export_globals`:
        __name__: null
        _: null
    def `color_to_hex`:
        '#{:02X}{:02X}{:02X}': null
    def `Reprable_repr_pretty`:
        '{0}(...)': null
        name: null
        def `printitem`:
            '=': null
        def `printsep`:
            ',': null
        '{0}(': null
        ): null
    class `_Undef`:
        def `__repr__`:
            <?>: null
    class `Reprable`:
        def `_reprable_fields`:
            self: null
        def `_reprable_items`:
            error: null
        def `_repr_pretty_`:
            .: null
        def `__repr__`:
            .: null
            '{}({})': null
            ', ': null
            '{}={!r}': null
    def `frompyfunc`:
        DTypeLike: null
        def `funcv`:
            unsafe: null
version.py:
    3.33.0: null
    3.33.0.dev0+6d95493: null
    6d954935bb7dea0aa400fcc37e9dfaa441f85000: null
    .dev: null
canvas/__main__.py:
    ORANGE_STATISTICS_API_URL: null
    https://orange.biolab.si/usage-statistics: null
    def `ua_string`:
        Continuum: null
        conda: null
        Orange{orange_version}:Python{py_version}:{platform}:{conda}: null
        .: null
        Anaconda: null
    def `make_sql_logger`:
        sql_log: null
        sql.log: null
    def `check_for_updates`:
        startup/check-updates: null
        startup/last-update-check-time: null
        class `GetLatestVersion`:
            def `run`:
                https://orange.biolab.si/version/: null
                Accept: null
                text/plain: null
                Accept-Encoding: null
                gzip, deflate: null
                Connection: null
                close: null
                User-Agent: null
                Failed to check for updates: null
        def `compare_versions`:
            startup/latest-skipped-version: null
            Orange Update Available: null
            'Current version: <b>{}</b><br>': null
            'Latest version: <b>{}</b>': null
            Download: null
            Skip this Version: null
            canvas/icons/update.png: null
            def `handle_click`:
                startup/latest-skipped-version: null
                https://orange.biolab.si/download/: null
    def `open_link`:
        orange: null
        enable-statistics: null
        reporting/send-statistics: null
        reporting/machine-id: null
    '!Notification': null
    def `pull_notifications`:
        notifications/check-notifications: null
        '-1': null
        notifications/displayed: null
        set(): null
        class `GetNotifFeed`:
            def `run`:
                https://orange.biolab.si/notification-feed: null
                Accept: null
                text/plain: null
                Connection: null
                close: null
                User-Agent: null
                Cache-Control: null
                no-cache: null
                Pragma: null
                Failed to pull notification feed: null
        def `parse_yaml_notification`:
            notifications/announcements: null
            notifications/blog: null
            notifications/new-features: null
            announcement: null
            blog: null
            new-features: null
            installed: null
            local_config: null
            canvas/icons/: null
            .png: null
            def `remember_notification`:
                notifications/displayed: null
    def `send_usage_statistics`:
        def `send_statistics`:
            reporting/send-statistics: null
            Not sending usage statistics (preferences setting).: null
            Not sending usage statistics (disabled).: null
            reporting/machine-id: null
            Continuum: null
            conda: null
            Orange Version: null
            Application Version: null
            Anaconda: null
            UUID: null
            file: null
            'Error communicating with server while attempting to send ': null
            usage statistics. Status code %d: null
            Usage statistics sent.: null
            w: null
            utf-8: null
            Connection error while attempting to send usage statistics.: null
            Failed to send usage statistics.: null
        class `SendUsageStatistics`:
            def `run`:
                Failed to send usage statistics.: null
    class `OMain`:
        Orange.canvas.config.Config: null
        def `run`:
            exitCleanup: null
        def `argument_parser`:
            --clear-widget-settings: null
            store_true: null
            Clear stored widget setting/defaults: null
            --clear-all: null
            Clear all settings and caches: null
        def `_rm_tree`:
            rmtree '%s': null
        def `clear_widget_settings`:
            Clearing widget settings: null
        def `clear_caches`:
            Clearing caches: null
            Clearing data: null
        def `clear_application_settings`:
            Clearing application settings: null
            clear '%s': null
        def `setup_application`:
            DELETE_ON_START: null
            startup/launch-count: null
            reporting/send-statistics: null
            def `onPaletteChange`:
                Setting pyqtgraph background to %s: null
                background: null
                Setting pyqtgraph foreground to %s: null
                foreground: null
                darkMode: null
        def `show_splash_message`:
            '#FFFFFF': null
    __main__: null
canvas/config.py:
    https://orange.biolab.si/addons/list: null
    orange.widgets: null
    startup/check-updates: null
    Check for updates: null
    startup/launch-count: null
    reporting/machine-id: null
    reporting/send-statistics: null
    reporting/permission-requested: null
    notifications/check-notifications: null
    Check for notifications: null
    notifications/announcements: null
    Show notifications about Biolab announcements: null
    notifications/blog: null
    Show notifications about blog posts: null
    notifications/new-features: null
    Show notifications about new features: null
    notifications/displayed: null
    set(): null
    Serialized set of notification IDs which have already been displayed: null
    class `Config`:
        biolab.si: null
        Orange: null
        Biolab.Orange: null
        def `init`:
            widget_settings_dir: null
            canvas_settings_dir: null
        def `application_icon`:
            icons/orange-256.png: null
        def `splash_screen`:
            icons/orange-splash-screen-{splash_n:02}.png: null
            .: null
            Helvetica: null
            '#000000': null
        def `widgets_entry_points`:
            orange3: null
        def `core_packages`:
            Orange3 >=3.20,<4.0a: null
        def `examples_entry_points`:
            000-Orange3: null
            Orange.canvas.workflows: null
            Orange3: null
            orange.widgets.tutorials: null
        Bug Report: null
        https://github.com/biolab/orange3/issues: null
        Quick Start: null
        https://orange.biolab.si/getting-started/: null
        Documentation: null
        https://orange.biolab.si/widget-catalog/: null
        Screencasts: null
        https://www.youtube.com/watch: null
        ?v=HXjnDIgGDuI&list=PLmNPvQr9Tf-ZSDLwOzxpvY-HrE0yv-8Fy&index=1: null
        Feedback: null
        https://orange.biolab.si/survey/long.html: null
    def `init`:
        This is not the init you are looking for.: null
    def `data_dir`:
        canvas: null
    def `cache_dir`:
        canvas: null
    def `log_dir`:
        darwin: null
        ~/Library/Logs: null
        log_dir: null
    def `widget_settings_dir`:
        '''{__name__}.widget_settings_dir'' is deprecated.': null
canvas/mainwindow.py:
    class `OUserSettingsDialog`:
        def `__init__`:
            Automatically check for updates: null
            Updates: null
            checked: null
            startup/check-updates: null
            Reporting: null
            Settings related to reporting: null
            text: null
            reporting/machine-id: null
            'Machine ID:': null
            Share: null
            Share anonymous usage statistics to improve Orange: null
            reporting/send-statistics: null
            Anonymous Statistics: null
            '<a ': null
            href=\"https://orange.biolab.si/statistics-more-info\">: null
            More info...: null
            </a>: null
            Notifications: null
            Settings related to notifications: null
            Enable notifications: null
            Pull and display a notification feed.: null
            notifications/check-notifications: null
            On startup: null
            notifications-group: null
            Announcements: null
            Show notifications about Biolab announcements.\n: null
            'This entails events and courses hosted by the developers of ': null
            Orange.: null
            Blog posts: null
            Show notifications about blog posts.\n: null
            We'll only send you the highlights.: null
            New features: null
            'Show notifications about new features in Orange when a new ': null
            version is downloaded and installed,\n: null
            should the new version entail notable updates.: null
            notifications/announcements: null
            notifications/blog: null
            notifications/new-features: null
            Show notifications about: null
    class `MainWindow`:
        def `__init__`:
            orange.canvas.drophandler: null
        def `open_canvas_settings`:
            Preferences: null
canvas/report.py:
    '''{__name__}'' is deprecated and will be removed in the future.\n': null
    'The contents of this package were moved to ''Orange.widgets.report''. ': null
    Please update the imports accordingly.: null
canvas/run.py:
    def `main`:
        'Run an orange workflow without showing a GUI and exit ': null
        when it completes.\n\n: null
        'WARNING: This is experimental as Orange is not designed to run ': null
        non-interactive.: null
        --log-level: null
        -l: null
        LEVEL: null
        log_level: null
        --config: null
        Orange.canvas.config.Config: null
        file: null
        basedir: null
        rb: null
    __main__: null
canvas/utils/environ.py:
    '''{__name__}'' is deprecated and will be removed on the future. ': null
    Use 'Orange.misc.environ' instead: null
classification/base_classification.py:
    LearnerClassification: null
    ModelClassification: null
    SklModelClassification: null
    SklLearnerClassification: null
    class `LearnerClassification`:
        def `incompatibility_reason`:
            Too many target variables.: null
            Categorical class variable expected.: null
classification/calibration.py:
    ThresholdClassifier: null
    ThresholdLearner: null
    CalibratedLearner: null
    CalibratedClassifier: null
    class `ThresholdClassifier`:
        def `__init__`:
            ThresholdClassifier requires a binary class: null
            '{base_model.name}, thresh={threshold:.2f}': null
        def `__call__`:
            ignore: null
    class `ThresholdLearner`:
        def `fit_storage`:
            ThresholdLearner requires a binary class: null
    class `CalibratedClassifier`:
        def `__init__`:
            CalibratedClassifier requires a discrete target: null
            '{base_model.name}, calibrated': null
        def `calibrated_probs`:
            ignore: null
    class `CalibratedLearner`:
        def `get_model`:
            clip: null
classification/catgb.py:
    CatGBClassifier: null
classification/gb.py:
    GBClassifier: null
    class `GBClassifier`:
        def `__init__`:
            deviance: null
            friedman_mse: null
            deprecated: null
classification/knn.py:
    KNNLearner: null
classification/logistic_regression.py:
    LogisticRegressionLearner: null
    class `LogisticRegressionLearner`:
        def `__init__`:
            l2: null
            auto: null
        def `_initialize_wrapped`:
            solver: null
            penalty: null
            auto: null
            l1: null
            liblinear: null
            lbfgs: null
classification/majority.py:
    MajorityLearner: null
    class `MajorityLearner`:
        def `fit_storage`:
            'classification.MajorityLearner expects a domain ': null
            with a (single) categorical variable: null
    class `ConstantModel`:
        def `__str__`:
            ConstantModel {}: null
classification/naive_bayes.py:
    NaiveBayesLearner: null
    class `NaiveBayesLearner`:
        naive bayes: null
        def `fit_storage`:
            Data is not a subclass of Orange.data.Storage.: null
            'Only categorical variables are ': null
            supported.: null
            Data has no defined target values.: null
classification/neural_network.py:
    NNClassificationLearner: null
    class `NNClassificationLearner`:
        def `_initialize_wrapped`:
            callback: null
classification/outlier_detection.py:
    LocalOutlierFactorLearner: null
    IsolationForestLearner: null
    EllipticEnvelopeLearner: null
    OneClassSVMLearner: null
    class `_OutlierModel`:
        def `__call__`:
            Predicting...: null
    class `_OutlierLearner`:
        def `_fit_model`:
            Outlier: null
            'Yes': null
            'No': null
    class `OneClassSVMLearner`:
        One class SVM: null
        def `__init__`:
            rbf: null
            auto: null
    class `LocalOutlierFactorLearner`:
        Local Outlier Factor: null
        def `__init__`:
            auto: null
            minkowski: null
    class `IsolationForestLearner`:
        Isolation Forest: null
        def `__init__`:
            auto: null
            deprecated: null
    class `EllipticEnvelopeLearner`:
        Covariance Estimator: null
        def `_fit_model`:
            Mahalanobis: null
classification/random_forest.py:
    RandomForestLearner: null
    class `RandomForestClassifier`:
        def `trees`:
            def `wrap`:
                '{} - tree {}': null
                instances: null
    class `RandomForestLearner`:
        def `__init__`:
            gini: null
            auto: null
classification/rules.py:
    CN2Learner: null
    CN2UnorderedLearner: null
    CN2SDLearner: null
    CN2SDUnorderedLearner: null
    def `argmaxrnd`:
        argmaxrnd only accepts arrays of up to 2 dim: null
    class `TopDownSearchStrategy`:
        def `find_new_selectors`:
            ==: null
            '!=': null
            <=: null
            '>=': null
    class `Selector`:
        Selector: null
        column, op, value: null
        ==: null
        '!=': null
        <=: null
        '>=': null
    class `Rule`:
        def `__str__`:
            ' AND ': null
            'TRUE': null
            '=': null
            _: null
            'IF {} THEN {} ': null
    class `CN2UnorderedLearner`:
        CN2 unordered inducer: null
    class `CN2SDLearner`:
        CN2-SD inducer: null
    class `CN2SDUnorderedLearner`:
        CN2-SD unordered inducer: null
    def `main`:
        titanic: null
        iris.tab: null
    __main__: null
classification/sgd.py:
    SGDClassificationLearner: null
    class `SGDClassificationLearner`:
        sgd: null
        def `__init__`:
            hinge: null
            l2: null
            invscaling: null
classification/simple_random_forest.py:
    SimpleRandomForestLearner: null
    class `SimpleRandomForestLearner`:
        simple rf class: null
        def `__init__`:
            sqrt: null
classification/simple_tree.py:
    SimpleTreeLearner: null
    type: null
    children_size: null
    split_attr: null
    split: null
    children: null
    dist: null
    n: null
    sum: null
    class `SimpleTreeLearner`:
        simple tree: null
    class `SimpleTreeModel`:
        def `__init__`:
            'Number of classes should be 1: {}': null
            'Only Continuous and Discrete ': null
            variables are supported: null
            sqrt: null
            log2: null
            'skip_prob not valid: {}': null
        def `predict_storage`:
            Invalid prediction type: null
        def `__del__`:
            node: null
        def `__getstate__`:
            node: null
        def `dumps_tree`:
            '{': null
            '{:.5f}': null
            '{:.2f}': null
            '{:.5f} {:.5f}': null
            '}': null
            ' ': null
        def `to_string`:
            (null node): null
            '({self.domain.class_var.format_str}: %s)': null
            ' --> ': null
            '%s ': null
            ' --> %s (%s)': null
            \n: null
            '   ': null
            '%s (%s)': null
            <=: null
            '>': null
            ': %s': null
classification/softmax_regression.py:
    SoftmaxRegressionLearner: null
    class `SoftmaxRegressionLearner`:
        softmax: null
        def `fit`:
            'Softmax regression does not support ': null
            multi-label classification: null
            unknown values: null
    __main__: null
    iris: null
classification/svm.py:
    SVMLearner: null
    LinearSVMLearner: null
    NuSVMLearner: null
    class `SVMLearner`:
        def `__init__`:
            rbf: null
            auto: null
    class `LinearSVMLearner`:
        def `__init__`:
            l2: null
            squared_hinge: null
            ovr: null
    class `NuSVMLearner`:
        def `__init__`:
            rbf: null
            auto: null
    __main__: null
    iris: null
    'learner: {}\nCA: {}\n': null
classification/tree.py:
    SklTreeLearner: null
    TreeLearner: null
    class `TreeLearner`:
        def `__init__`:
            binarize: null
            min_samples_leaf: null
            min_samples_split: null
            sufficient_majority: null
            max_depth: null
        def `fit_storage`:
            'Exhaustive binarization does not handle ': null
            attributes with more than {} values: null
    class `SklTreeLearner`:
        tree: null
        def `__init__`:
            gini: null
            best: null
classification/xgb.py:
    XGBClassifier: null
    XGBRFClassifier: null
    class `XGBClassifier`:
        def `__init__`:
            binary:logistic: null
            gain: null
    class `XGBRFClassifier`:
        def `__init__`:
            binary:logistic: null
            gain: null
clustering/clustering.py:
    class `ClusteringModel`:
        def `__call__`:
            domain transformation produced no defined values: null
            Unrecognized argument (instance of '{}'): null
        def `predict`:
            This clustering algorithm does not support predicting.: null
    class `Clustering`:
        def `__init__`:
            self: null
            preprocessors: null
            __class__: null
clustering/dbscan.py:
    DBSCAN: null
    class `DBSCAN`:
        def `__init__`:
            euclidean: null
            auto: null
    __main__: null
    iris: null
clustering/hierarchical.py:
    HierarchicalClustering: null
    single: null
    average: null
    complete: null
    weighted: null
    ward: null
    def `condensedform`:
        upper: null
        lower: null
        invalid mode: null
    def `squareform`:
        upper: null
        lower: null
    def `sample_clustering`:
        euclidean: null
    class `Tree`:
        __value: null
        __branches: null
        __hash: null
        def `__repr__`:
            '{0.__name__}(value={1!r}, branches={2!r})': null
        _Tree__value: null
        _Tree__branches: null
    Cluster: null
    range: null
    height: null
    Singleton: null
    index: null
    def `tree_from_linkage`:
        linkage: null
    def `postorder`:
        branches: null
    def `preorder`:
        branches: null
    def `leaves`:
        branches: null
    def `prune`:
        At least one pruning argument must be supplied: null
    def `optimal_leaf_ordering`:
        '''progress_callback'' parameter is deprecated and ignored. ': null
        Passing it will raise an error in the future.: null
clustering/kmeans.py:
    KMeans: null
    class `KMeansModel`:
        def `__init__`:
            n_clusters: null
    class `KMeans`:
        def `__init__`:
            k-means++: null
            'compute_silhouette_score is deprecated. Please use ': null
            sklearn.metrics.silhouette_score to compute silhouettes.: null
            compute_silhouette_score: null
    __main__: null
    iris: null
clustering/louvain.py:
    Louvain: null
    matrix_to_knn_graph: null
    def `matrix_to_knn_graph`:
        cosine: null
        euclidean: null
    class `LouvainMethod`:
        def `__init__`:
            l2: null
    class `Louvain`:
        def `__init__`:
            l2: null
    __main__: null
    iris: null
data/aggregate.py:
    class `OrangeTableGroupBy`:
        def `_compute_aggregation`:
            '{col.name} - {name}': null
data/domain.py:
    DomainConversion: null
    Domain: null
    def `filter_visible`:
        hidden: null
    class `Domain`:
        def `__init__`:
            'descriptors must be instances of Variable, ': null
            not '%s': null
            All variables in the domain should have: null
            ' unique names.': null
            variables must be primitive: null
        def `from_numpy`:
            def `get_name`:
                '{} {:0{}}': null
            X must be a 2-dimensional array: null
            Feature: null
            Y has invalid shape: null
            Class: null
            v1: null
            v2: null
            Target: null
            Meta: null
        def `__bool__`:
            Domain.__bool__ is ambiguous; use 'is None' or 'empty' instead: null
        def `__str__`:
            '[': null
            ', ': null
            ' | ': null
            ']': null
            ' {': null
            '}': null
        def `index`:
            '''%s'' is not in domain': null
        def `convert`:
            invalid data length for domain: null
data/filter.py:
    IsDefined: null
    HasClass: null
    Random: null
    SameValue: null
    Values: null
    FilterDiscrete: null
    FilterContinuous: null
    FilterString: null
    FilterStringList: null
    FilterRegex: null
    class `Values`:
        def `__init__`:
            Filter with no conditions.: null
    class `FilterContinuous`:
        FilterContinuous: null
        Equal, NotEqual, Less, LessEqual, Greater,: null
        GreaterEqual, Between, Outside, IsDefined: null
        def `__call__`:
            invalid operator: null
        def `__str__`:
            feature({}): null
            '=': null
            ≠: null
            <: null
            ≤: null
            '>': null
            ≥: null
            '{} {} {}': null
            '{} ≤ {} ≤ {}': null
            not {} ≤ {} ≤ {}: null
            '{} is defined': null
            invalid operator: null
    class `FilterString`:
        FilterString: null
        Equal, NotEqual, Less, LessEqual, Greater,: null
        GreaterEqual, Between, Outside, Contains,: null
        StartsWith, EndsWith, IsDefined: null
        def `__init__`:
            min: null
            FilterContinuous got unexpected keyword arguments: null
        def `__call__`:
            invalid operator: null
data/instance.py:
    Instance: null
    class `Instance`:
        def `__setitem__`:
            Expected primitive value, got '%s': null
        def `str_values`:
            ', ': null
            ', ...': null
        def `_str`:
            '[': null
            ' | ': null
            ']': null
            ' {': null
            '}': null
        def `__hash__`:
            'unhashable type: ''{type(cls.__name__)}''': null
        def `_check_single_class`:
            Domain has no class variable: null
            Domain has multiple class variables: null
data/io.py:
    Flags: null
    FileFormat: null
    def `class_from_qualified_name`:
        .: null
    class `CSVReader`:
        .csv: null
        Comma-separated values: null
        ',;:\t$ ': null
        def `read`:
            us-ascii: null
            utf-8: null
            ignore: null
            rt: null
            'Skipped invalid byte(s) in position ': null
            '{}{}': null
            '-': null
            'Cannot parse dataset {}: {}': null
        def `write_file`:
            wt: null
            utf-8: null
    class `TabReader`:
        .tab: null
        .tsv: null
        Tab-separated values: null
        \t: null
    class `PickleReader`:
        .pkl: null
        .pickle: null
        Pickled Orange data: null
        def `read`:
            rb: null
            file does not contain a data table: null
        def `write_file`:
            wb: null
    class `BasketReader`:
        .basket: null
        .bsk: null
        Basket file: null
        def `read`:
            def `constr_vars`:
                utf-8: null
    class `_BaseExcelReader`:
        def `read`:
            '-': null
            'Couldn''t load spreadsheet from ': null
    class `ExcelReader`:
        .xlsx: null
        Microsoft Excel spreadsheet: null
        '#VALUE!': null
        '#DIV/0!': null
        '#REF!': null
        '#NUM!': null
        '#NULL!': null
        '#NAME?': null
        def `workbook`:
            ignore: null
            .*extension is not supported and will be removed.*: null
        def `write_file`:
            _w: null
    class `XlsReader`:
        .xls: null
        Microsoft Excel 97-2004 spreadsheet: null
    class `DotReader`:
        .dot: null
        .gv: null
        Dot graph description: null
        def `write_graph`:
            wt: null
        def `write`:
            tree: null
    class `UrlReader`:
        def `__init__`:
            http://: null
            def `quote_byte`:
                '%{:02X}': null
            utf-8: null
        def `urlopen`:
            User-Agent: null
            Mozilla/5.0 (X11; Linux) Gecko/20100101 Firefox/: null
        def `read`:
            content-disposition: null
        def `_trim_googlesheet`:
            (?:https?://)?(?:www\.)?: null
            docs\.google\.com/spreadsheets/d/: null
            (?P<workbook_id>[-\w_]+): null
            (?:/.*?gid=(?P<sheet_id>\d+).*|.*)?: null
            workbook_id: null
            sheet_id: null
            https://docs.google.com/spreadsheets/d/{}/export?format=tsv: null
            '&gid=': null
        def `_trim_dropbox`:
            dropbox.com: null
            dl=1: null
        def `_suggest_filename`:
            '[\\:/]': null
            _: null
            filename\*?=(?:\"|.{0,10}?'[^']*')([^\"]+): null
data/io_base.py:
    FileFormatBase: null
    Flags: null
    DataTableMixin: null
    PICKLE_PROTOCOL: null
    class `Flags`:
        ' ': null
        (?<!\\): null
        ^[a-zA-Z_]: null
        class: null
        c: null
        ignore: null
        i: null
        meta: null
        m: null
        weight: null
        w: null
        .+?=.*?: null
        ^({})$: null
        '|': null
        def `__init__`:
            '=': null
            'True': null
            'False': null
            Invalid attribute flag \'{}\': null
        def `join`:
            \\: null
        def `split`:
            \\: null
    ^\s*[^\s]+(\s[^\s]+)+\s*$: null
    ^\s*({}|{}|)\s*$: null
    '|': null
    TYPE_HEADERS: null
    ^\s*( |{}|)*\s*$: null
    class `_TableHeader`:
        '#': null
    class `_TableBuilder`:
        def `__init__`:
            'Feature ': null
        def `_cont_column`:
            unsafe: null
            'Non-continuous value in (1-based) ': null
            line {row + offset + 1}, column {col + 1}: null
    class `DataTableMixin`:
        def `adjust_data_width`:
            F: null
            Columns with no headers were removed.: null
    class `_FileReader`:
        def `get_reader`:
            '*': null
            No readers for file "{}": null
        def `set_table_metadata`:
            .metadata: null
            rb: null
            utf-8: null
            ':': null
    class `_FileWriter`:
        def `write_table_metadata`:
            def `write_file`:
                w: null
                utf-8: null
                \n: null
                '{}: {}': null
                wb: null
            .metadata: null
            attributes: null
        def `header_names`:
            weights: null
        def `header_types`:
            continuous: null
        def `header_flags`:
            weight: null
            '{}={}': null
            class: null
            meta: null
        def `write_data`:
            _w: null
    class `_FileFormatMeta`:
        def `__new__`:
            SUPPORT_COMPRESSED: null
            EXTENSIONS: null
            darwin: null
            win32: null
        def `_ext_to_attr_if_attr2`:
            EXTENSIONS: null
        def `names`:
            DESCRIPTION: null
            __class__: null
        def `writers`:
            write_file: null
        def `readers`:
            read: null
        def `img_writers`:
            '''{__name__}.FileFormat.img_writers'' is no longer used and ': null
            'will be removed. Please use ': null
            '''Orange.widgets.io.FileFormat.img_writers'' instead.': null
            write_image: null
        def `graph_writers`:
            write_graph: null
    class `FileFormatBase`:
        def `locate`:
            .: null
            '*': null
            File "{}" was not found.: null
        def `qualified_name`:
            .: null
data/io_util.py:
    Compression: null
    open_compressed: null
    detect_encoding: null
    isnastr: null
    guess_data_type: null
    sanitize_variable: null
    class `Compression`:
        .gz: null
        .bz2: null
        .xz: null
    def `detect_encoding`:
        file: null
        --brief: null
        --mime-encoding: null
        utf-8: null
        us-ascii: null
        iso-8859-1: null
        utf-7: null
        utf-16le: null
        utf-16be: null
        ebcdic: null
        def `_from_file`:
            encoding: null
            confidence: null
            utf-8: null
        rb: null
        encoding: null
    def `isnastr`:
        unsafe: null
    def `guess_data_type`:
        unsafe: null
        _: null
    def `sanitize_variable`:
        def `get_number_of_decimals`:
            .: null
        def `mapvalues`:
            unsafe: null
        _: null
data/pandas_compat.py:
    table_from_frame: null
    table_to_frame: null
    class `OrangeDataFrame`:
        orange_variables: null
        orange_weights: null
        orange_attributes: null
        orange_role: null
        def `__init__`:
            orange_role: null
            _o: null
            csc: null
        def `__patch_constructor`:
            def `new_method`:
                pandas.DataFrame: null
        def `__finalize__`:
            concat: null
            merge: null
            orange_role: null
            orange_variables: null
            orange_weights: null
            orange_attributes: null
    def `_reset_index`:
        _o: null
    def `_convert_datetime`:
        def `col_type`:
            d: null
            now: null
        UTC: null
        now: null
        1s: null
        '1970-01-01': null
    def `to_categorical`:
        category: null
    def `vars_from_df`:
        orange_role: null
        orange_variables: null
        category: null
        String variable must be in metas.: null
    def `table_from_frame`:
        orange_weights: null
        orange_attributes: null
        _o: null
    def `table_from_frames`:
        Indexes not equal. Make sure that all three dataframes have equal index: null
        'Leading dimension mismatch ': null
        (not {xdf.shape[0]} == {ydf.shape[0]} == {mdf.shape[0]}): null
        _o: null
    def `table_to_frame`:
        def `_column_to_series`:
            s: null
    def `amend_table_with_frame`:
        'Leading dimension mismatch ': null
        (not {arr.shape[0]} == {df.shape[0]}): null
data/table.py:
    dataset_dirs: null
    get_sample_datasets_dir: null
    RowInstance: null
    Table: null
    def `get_sample_datasets_dir`:
        ..: null
        datasets: null
    class `RowInstance`:
        def `__setitem__`:
            Expected primitive value, got '%s': null
        def `_str`:
            def `sp_values`:
                '%s=%s': null
                ', ': null
                ', ...': null
            '[': null
            ' | ': null
            ']': null
            ' {': null
            '}': null
    class `Columns`:
        def `__init__`:
            ' ': null
            _: null
    class `_ArrayConversion`:
        def `_can_copy_all`:
            X: null
            metas: null
            Y: null
        def `get_subarray`:
            X: null
            metas: null
            Y: null
    class `_FromTableConversion`:
        def `__init__`:
            X: null
            Y: null
            metas: null
    class `Table`:
        untitled: null
        def `_check_unlocked`:
            Table is read-only unless unlocked: null
        def `__setstate__`:
            X: null
            W: null
            metas: null
            _Y: null
            Y: null
        def `__getstate__`:
            X: null
            metas: null
            W: null
            _: null
            _Y: null
            _unlocked: null
        def `_lock_parts_val`:
            X: null
            Y: null
            metas: null
            weights: null
        def `_lock_parts_ref`:
            X: null
            Y: null
            metas: null
            weights: null
        def `_update_locks`:
            Unsupported sparse data type: null
        def `unlocked`:
            '''{name}'' is a view into another table ': null
            and cannot be unlocked: null
        def `__new__`:
            def `warn_deprecated`:
                'Direct calls to Table''s constructor are deprecated ': null
                'and will be removed. Replace this call with ': null
                Table.{method}: null
            Table() must not be called directly: null
            'Table(name: str) expects just one argument': null
            https://: null
            http://: null
            'Table(table: Table) expects just one argument': null
            from_domain: null
            from_table: null
            from_list: null
            'Omitting domain in a call to Table(X, Y, metas), is ': null
            'deprecated and will be removed. ': null
            Call Table.from_numpy(None, X, Y, metas) instead.: null
        def `from_table`:
            F: null
            name: null
            ids: null
            attributes: null
        def `from_table_rows`:
            name: null
            attributes: null
        def `from_numpy`:
            float64: null
            Invalid number of variable columns ({} != {}): null
            'Invalid number of class columns ': null
            (1 != {len(domain.class_vars)}): null
            Invalid number of class columns ({} != {}): null
            Invalid number of meta attribute columns ({} != {}): null
            Parts of data contain different numbers of rows.: null
        def `from_list`:
            mismatching number of instances and weights: null
        def `save`:
            Writing of {}s is not supported: null
            Unknown file name extension.: null
        def `_set_row`:
            invalid length: null
        def `__getitem__`:
            Table indices must be one- or two-dimensional: null
        def `__setitem__`:
            Table indices must be one- or two-dimensional: null
            'Setting multiple values requires a ': null
            sequence or numpy array: null
            Invalid number of values: null
            Ordinary attributes can only have primitive values: null
        def `__str__`:
            '[': null
            ',\n ': null
            ']': null
        def `__repr__`:
            '[': null
            ',\n ': null
            ',\n ...': null
            \n]: null
        def `concatenate`:
            invalid axis: null
            need at least one table to concatenate: null
            attributes: null
            untitled: null
        def `_concatenate_vertical`:
            concatenated tables must have the same domain: null
            X: null
            Y: null
            metas: null
            W: null
        def `_concatenate_horizontal`:
            domain: null
            W: null
            X: null
            Y: null
            metas: null
            attributes: null
            class_vars: null
        def `is_view`:
            array.base is not None for each subarray of Orange.data.Table (i.e. X, Y, W, metas): null
        def `is_copy`:
            array.base is None for each subarray of Orange.data.Table (i.e. X, Y, W, metas): null
        def `X_density`:
            _X_density: null
        def `Y_density`:
            _Y_density: null
        def `metas_density`:
            _metas_density: null
        def `shuffle`:
            Rows of sparse data cannot be shuffled: null
        def `_filter_to_indicator`:
            def `get_col_indices`:
                Discrete filter can't be applied across rows: null
                Invalid filter: null
            def `col_filter`:
                Invalid filter: null
        def `_range_filter_to_indicator`:
            ignore: null
            Invalid operator: null
        def `_compute_basic_stats`:
            'computation of variance is ': null
            not implemented yet: null
        def `_compute_contingency`:
            No row variable: null
            Row variable must be discrete: null
            'Contingency can be computed only for categorical ': null
            and numeric values.: null
            f: null
        def `transpose`:
            Feature name: null
            Feature: null
            Transposing...: null
            old_domain: null
            '{feature_name} {i:0{places}}': null
        def `groupby`:
            OrangeTableGroupBy: null
    def `_check_arrays`:
        def `ninstances`:
            shape: null
        Leading dimension mismatch (%d != %d): null
        Array contains infinity.: null
    def `_check_inf`:
        AllFloat: null
data/util.py:
    (^{})( \((\d{{1,}})\))?$: null
    def `one_hot`:
        dim must be greater than max(values): null
    class `SharedComputeValue`:
        def `__init__`:
            '{type(compute_shared).__name__} should define ': null
            __eq__ and __hash__ to be used for compute_shared: null
    def `get_unique_names`:
        '{name} ({indices[name]})': null
        '{name} ({max_index})': null
    def `get_unique_names_duplicates`:
        '{name} ({next(indices[name])})': null
    def `sanitized_name`:
        \W: null
        _: null
    def `redefines_eq_and_hash`:
        __hash__: null
        __eq__: null
data/variable.py:
    Unknown: null
    MISSING_VALUES: null
    make_variable: null
    is_discrete_values: null
    Value: null
    Variable: null
    ContinuousVariable: null
    DiscreteVariable: null
    StringVariable: null
    TimeVariable: null
    nan: null
    '?': null
    .: null
    NA: null
    '~': null
    class `Value`:
        variable: null
        _value: null
        def `_as_values_primitive`:
            Value: null
        def `_as_values_non_primitive`:
            Value: null
        def `__repr__`:
            Value('%s', %s): null
        def `__contains__`:
            invalid operation on Value(): null
        def `__hash__`:
            unhashable type - cannot hash values of discrete variables!: null
        def `__getstate__`:
            _value: null
        def `__setstate__`:
            value: null
    class `Variable`:
        def `__init__`:
            Variable must have a name: null
            '{type(compute_value).__name__} should define ': null
            __eq__ and __hash__ to be used for compute_value: null
        def `_clear_cache`:
            _clear_cache is no longer needed and thus deprecated: null
        def `_clear_all_caches`:
            _clear_all_caches is no longer needed and thus deprecated: null
        def `repr_val`:
            variable descriptors must overload repr_val(): null
        def `to_val`:
            primitive variable descriptors must overload to_val(): null
        def `__reduce__`:
            Variables without names cannot be pickled: null
    class `ContinuousVariable`:
        continuous: null
        c: null
        numeric: null
        n: null
        def `number_of_decimals`:
            '%g': null
            '%.{}f': null
        def `repr_val`:
            '?': null
            '%g': null
            '{val:.{self._number_of_decimals + 2}f}': null
        def `copy`:
            number_of_decimals: null
    class `DiscreteVariable`:
        discrete: null
        d: null
        categorical: null
        def `__init__`:
            values of DiscreteVariables must be strings: null
        def `get_mapper_from`:
            def `mapper`:
                In-place mapping of sparse matrices must map 0 to 0: null
                In-place column mapping requires a 2d array or: null
                a csc or csr matrix.: null
                Column mapping can't map {value.ndim}-d objects: null
                'Column mapping can''t map ': null
                '{value.ndim}-dimensional objects': null
                'invalid type for value(s): {type(value).__name__}': null
        def `to_val`:
            Cannot convert {} to value of "{}": null
            Value {s} does not exist: null
        def `add_value`:
            values of DiscreteVariables must be strings: null
        def `repr_val`:
            '?': null
            '{}': null
        def `__reduce__`:
            Variables without names cannot be pickled: null
            _values: null
        def `copy`:
            number of values must match the number of original values: null
    class `StringVariable`:
        string: null
        s: null
        text: null
        def `str_val`:
            '?': null
        def `repr_val`:
            '"{}"': null
    class `TimeVariable`:
        time: null
        t: null
        '%Y-%m-%d %H:%M:%S%z': null
        '%Y-%m-%d %H:%M:%S': null
        '%Y-%m-%d %H:%M': null
        '%Y-%m-%dT%H:%M:%S%z': null
        '%Y-%m-%dT%H:%M:%S': null
        '%Y-%m-%d': null
        '%Y-%m-%d %H:%M:%S.%f': null
        '%Y-%m-%dT%H:%M:%S.%f': null
        '%Y-%m-%d %H:%M:%S.%f%z': null
        '%Y-%m-%dT%H:%M:%S.%f%z': null
        '%Y%m%dT%H%M%S%z': null
        '%Y%m%d%H%M%S%z': null
        '%H:%M:%S.%f': null
        '%H:%M:%S': null
        '%H:%M': null
        '%Y%m%dT%H%M%S': null
        '%Y%m%d%H%M%S': null
        '%Y%m%d': null
        '%Y%j': null
        '%Y': null
        '%H%M%S.%f': null
        '%Y-%m': null
        '%Y-%j': null
        ^(: null
        \d{1,4}-\d{2}-\d{2}([ T]\d{2}:\d{2}(:\d{2}(\.\d+)?([+-]\d{4})?)?)?|: null
        \d{1,4}\d{2}\d{2}(T?\d{2}\d{2}\d{2}([+-]\d{4})?)?|: null
        \d{2}:\d{2}(:\d{2}(\.\d+)?)?|: null
        \d{2}\d{2}\d{2}\.\d+|: null
        \d{1,4}(-?\d{2,3})?: null
        )$: null
        '2021-11-25': null
        25.11.2021: null
        '%d.%m.%Y': null
        '%d. %m. %Y': null
        25.11.21: null
        '%d.%m.%y': null
        '%d. %m. %y': null
        11/25/2021: null
        '%m/%d/%Y': null
        11/25/21: null
        '%m/%d/%y': null
        '20211125': null
        '2021-11-25 00:00:00': null
        25.11.2021 00:00:00: null
        '%d.%m.%Y %H:%M': null
        '%d. %m. %Y %H:%M': null
        '%d.%m.%Y %H:%M:%S': null
        '%d. %m. %Y %H:%M:%S': null
        '%d.%m.%Y %H:%M:%S.%f': null
        '%d. %m. %Y %H:%M:%S.%f': null
        25.11.21 00:00:00: null
        '%d.%m.%y %H:%M': null
        '%d. %m. %y %H:%M': null
        '%d.%m.%y %H:%M:%S': null
        '%d. %m. %y %H:%M:%S': null
        '%d.%m.%y %H:%M:%S.%f': null
        '%d. %m. %y %H:%M:%S.%f': null
        11/25/2021 00:00:00: null
        '%m/%d/%Y %H:%M': null
        '%m/%d/%Y %H:%M:%S': null
        '%m/%d/%Y %H:%M:%S.%f': null
        11/25/21 00:00:00: null
        '%m/%d/%y %H:%M': null
        '%m/%d/%y %H:%M:%S': null
        '%m/%d/%y %H:%M:%S.%f': null
        '20211125000000': null
        '%Y%m%d%H%M': null
        '%Y%m%d%H%M%S.%f': null
        00:00:00: null
        '000000': null
        '%H%M': null
        '%H%M%S': null
        '2021': null
        11-25: null
        '%m-%d': null
        25.11.: null
        '%d.%m.': null
        '%d. %m.': null
        11/25: null
        '%m/%d': null
        '1125': null
        '%m%d': null
        class `InvalidDateTimeFormatError`:
            def `__init__`:
                Invalid datetime format '{date_string}'. Only ISO 8601 supported.: null
        def `timezone`:
            different timezones: null
        def `_tzre_sub`:
            ([+-])(\d\d):(\d\d)$: null
            +00:00: null
            -00:00: null
            \1\2\3: null
        def `repr_val`:
            '?': null
        def `parse`:
            Z: null
data/sql/filter.py:
    class `IsDefinedSql`:
        def `to_sql`:
            ' AND ': null
            '%s IS NOT NULL': null
            NOT (%s): null
    class `SameValueSql`:
        def `to_sql`:
            '%s IS NULL': null
            '%s = %s': null
            NOT (%s): null
            (NOT (%s) OR %s is NULL): null
    class `ValuesSql`:
        def `to_sql`:
            ' AND ': null
            ' OR ': null
            NOT (%s): null
            ({}): null
    class `FilterDiscreteSql`:
        def `to_sql`:
            '%s IN (%s)': null
            ',': null
            '%s IS NOT NULL': null
    class `FilterContinuousSql`:
        def `to_sql`:
            '%s = %s': null
            '%s <> %s OR %s IS NULL': null
            '%s < %s': null
            '%s <= %s': null
            '%s > %s': null
            '%s >= %s': null
            '%s >= %s AND %s <= %s': null
            (%s < %s OR %s > %s): null
            '%s IS NOT NULL': null
            Invalid operator: null
    class `FilterString`:
        def `to_sql`:
            '%s IS NOT NULL': null
            LOWER(%s): null
            '%s = %s': null
            '%s <> %s OR %s IS NULL': null
            '%s < %s': null
            '%s <= %s': null
            '%s > %s': null
            '%s >= %s': null
            '%s >= %s AND %s <= %s': null
            (%s < %s OR %s > %s): null
            '%s LIKE ''%%%s%%''': null
            '%s LIKE ''%s%%''': null
            '%s LIKE ''%%%s''': null
            Invalid operator: null
    class `FilterStringList`:
        def `to_sql`:
            LOWER(%s) in (%s): null
            '%s in (%s)': null
            ', ': null
    def `quote`:
        '''%s''': null
    class `CustomFilterSql`:
        def `to_sql`:
            (: null
            ): null
            NOT (: null
data/sql/table.py:
    sql_log: null
    'Logging started: {}': null
    '%Y-%m-%d %H:%M:%S': null
    class `SqlTable`:
        def `__init__`:
            No backend could connect to server: null
            select: null
            (%s) as my_table: null
            '; ': null
        def `connection_params`:
            Use backend.connection_params: null
        def `__getitem__`:
            Table indices must be one- or two-dimensional: null
            Row indices must be integers.: null
        def `_fetch_row`:
            Could not retrieve row {} from table {}: null
        def `_query`:
            to_sql: null
            Cannot use ordinary attributes with sql backend: null
            (%s) AS "%s": null
            No fields selected.: null
            '*': null
        def `__bool__`:
            '1': null
        def `_count_rows`:
            COUNT(*): null
        def `approx_len`:
            '*': null
        def `download_data`:
            Too many rows to download the data into memory.: null
        def `_get_distributions`:
            COUNT(%s): null
            '%s IS NOT NULL': null
        def `_compute_contingency`:
            'Contingency for multiple columns ': null
            has not yet been implemented.: null
            Defaults have not been implemented yet: null
            Row variable must be discrete: null
            'contingency can be computed only for discrete ': null
            and continuous values: null
            COUNT(%s): null
            '%s IS NOT NULL': null
        def `_filter_same_value`:
            '''%s''': null
        def `_filter_values`:
            '''%s''': null
            Invalid condition %s: null
        'SUM(CASE TRUE WHEN %(field_name)s IS NULL THEN 1 ': null
        'ELSE 0 END), ': null
        'SUM(CASE TRUE WHEN %(field_name)s IS NULL THEN 0 ': null
        ELSE 1 END): null
        'MIN(%(field_name)s)::double precision, ': null
        'MAX(%(field_name)s)::double precision, ': null
        'AVG(%(field_name)s)::double precision, ': null
        'STDDEV(%(field_name)s)::double precision, ': null
        def `sample_percentage`:
            system: null
        def `sample_time`:
            system_time: null
        def `_sample`:
            ',': null
            Sampling of complex queries is not supported: null
            .: null
            __%s_%s_%s: null
            _: null
            '-': null
            'SELECT * FROM ': null
            ' LIMIT 0;': null
            'DROP TABLE ': null
            ' ': null
            CREATE TABLE: null
            AS: null
            SELECT * FROM: null
            TABLESAMPLE: null
            (: null
            ): null
            ANALYZE: null
        def `_execute_sql_query`:
            Use backend.execute_sql_query: null
data/sql/backend/base.py:
    class `Backend`:
        def `list_tables`:
            '{}.{}': null
        def `get_fields`:
            '*': null
data/sql/backend/mssql.py:
    class `PymssqlBackend`:
        SQL Server: null
        def `__init__`:
            server: null
            host: null
            Incorrect format of connection details: null
        def `list_tables_query`:
            ? "\n        SELECT [TABLE_SCHEMA], [TABLE_NAME]\n          FROM information_schema.tables\n\
                \         WHERE TABLE_TYPE in ('VIEW' ,'BASE TABLE')\n      ORDER\
                \ BY [TABLE_NAME]\n        "
            : null
        def `quote_identifier`:
            '[{}]': null
        def `create_sql_query`:
            SELECT: null
            TOP: null
            ', ': null
            FROM: null
            TABLESAMPLE system_time(%i): null
            WHERE: null
            ' AND ': null
            GROUP BY: null
            AS: null
            ORDER BY: null
            ',': null
            OFFSET: null
            ROWS: null
            FETCH FIRST: null
            ROWS ONLY: null
            ' ': null
        def `create_variable`:
            DATEDIFF(s, '1970-01-01 00:00:00', {}): null
        StatementEstRows="(\d+)": null
        def `count_approx`:
            SET SHOWPLAN_XML ON: null
            SET SHOWPLAN_XML OFF: null
            SHOWPLAN permission denied: null
            SHOWPLAN permission denied, count approximates will not be used: null
        def `distinct_values_query`:
            '{field}, Cast({field} as binary)': null
data/sql/backend/postgres.py:
    tsm_system_time: null
    quantile: null
    class `Psycopg2Backend`:
        PostgreSQL: null
        def `_create_extensions`:
            CREATE EXTENSION IF NOT EXISTS {}: null
            Database is missing extension {}: null
        def `create_sql_query`:
            SELECT: null
            ', ': null
            FROM: null
            TABLESAMPLE system_time(%i): null
            WHERE: null
            ' AND ': null
            GROUP BY: null
            ORDER BY: null
            ',': null
            OFFSET: null
            LIMIT: null
            ' ': null
        def `execute_sql_query`:
            utf-8: null
            'Executing: %s': null
            '%.2f ms: %s': null
        def `quote_identifier`:
            '"%s"': null
        def `unquote_identifier`:
            '"': null
        def `list_tables_query`:
            AND n.nspname = '{}': null
            AND pg_catalog.pg_table_is_visible(c.oid): null
            ? "SELECT n.nspname as \"Schema\",\n                          c.relname\
                \ AS \"Name\"\n                       FROM pg_catalog.pg_class c\n\
                \                  LEFT JOIN pg_catalog.pg_namespace n ON n.oid =\
                \ c.relnamespace\n                      WHERE c.relkind IN ('r','v','m','S','f','')\n\
                \                        AND n.nspname <> 'pg_catalog'\n         \
                \               AND n.nspname <> 'information_schema'\n          \
                \              AND n.nspname !~ '^pg_toast'\n                    \
                \    {}\n                        AND NOT c.relname LIKE '\\\\_\\\\\
                _%'\n                   ORDER BY 1;"
            : null
        def `create_variable`:
            extract(epoch from {}): null
            ({})::double precision: null
            ({})::text: null
        def `_guess_variable`:
            'false': null
            'true': null
        def `count_approx`:
            'EXPLAIN ': null
            rows=(\d*): null
        def `__getstate__`:
            connection_pool: null
datasets/list_update.py:
    iris_url: null
    https://raw.githubusercontent.com/biolab/orange3/master/Orange/datasets/iris.tab: null
    def `data_info`:
        name: null
        location: null
        rows: null
        features: null
        discrete: null
        continuous: null
        meta: null
        missing: null
        target: null
        type: null
        values: null
    __main__: null
    .: null
    .tab: null
    datasets.info: null
    w: null
distance/base.py:
    class `Distance`:
        def `__new__`:
            domain: null
            is_sparse: null
            fallback: null
        def `check_no_discrete`:
            columns with discrete values are incommensurable: null
    class `DistanceModel`:
        def `__call__`:
            Two tables cannot be compared by columns: null
            ignore: null
    class `FittedDistanceModel`:
        def `__call__`:
            mismatching domains: null
    class `FittedDistance`:
        def `fit`:
            domain: null
        def `fit_rows`:
            normalize: null
distance/distance.py:
    class `EuclideanRowsModel`:
        def `compute_distances`:
            ignore: null
    class `EuclideanColumnsModel`:
        def `compute_distances`:
            ignore: null
    class `Euclidean`:
        euclidean: null
        def `fit_cols`:
            def `nowarn`:
                Mean of empty slice: null
                Degrees of freedom <= 0 for slice: null
                some columns have no defined values: null
            warnings.warn: null
            some columns are constant: null
    class `Manhattan`:
        manhattan: null
        def `fit_cols`:
            'some columns have zero absolute distance from median, ': null
            or no values: null
    class `Cosine`:
        cosine: null
    def `_corrcoef2`:
        Invalid axis {} (only 0 or 1 accepted): null
    def `check_non_negative`:
        Bhattcharyya distance requires non-negative values: null
    class `Mahalanobis`:
        def `fit`:
            Covariance matrix is too large.: null
            Computation of inverse covariance matrix failed.: null
    class `MahalanobisModel`:
        def `compute_distances`:
            Incorrect number of features.: null
            mahalanobis: null
    class `MahalanobisDistance`:
        def `__new__`:
            Mahalanobis: null
    class `HammingColumnsModel`:
        def `compute_distances`:
            hamming: null
    class `HammingRowsModel`:
        def `compute_distances`:
            hamming: null
ensembles/ada_boost.py:
    SklAdaBoostClassificationLearner: null
    SklAdaBoostRegressionLearner: null
    class `SklAdaBoostClassificationLearner`:
        def `__init__`:
            SAMME.R: null
    class `SklAdaBoostRegressionLearner`:
        def `__init__`:
            linear: null
ensembles/stack.py:
    StackedLearner: null
    StackedClassificationLearner: null
    StackedRegressionLearner: null
    StackedFitter: null
    class `StackedLearner`:
        def `fit_storage`:
            f{}: null
    class `StackedFitter`:
        classification: null
        regression: null
        def `__init__`:
            learners: null
    __main__: null
    iris: null
    housing: null
evaluation/clustering.py:
    ClusteringEvaluation: null
    class `ClusteringResults`:
        def `get_fold`:
            This 'Results' instance does not have folds.: null
    class `ClusteringEvaluation`:
        def `__call__`:
            Y: null
    def `graph_silhouette`:
        g: null
        b: null
        Number of colors does not match the number of clusters. \n: null
        Silhouette score: null
        Cluster label: null
evaluation/performance_curves.py:
    class `Curves`:
        def `from_results`:
            'Argument ''model_index'' is required when ': null
            there are multiple models: null
            'Argument ''target_class'' is required when the ': null
            class is not binary: null
evaluation/scoring.py:
    CA: null
    Precision: null
    Recall: null
    F1: null
    PrecisionRecallFSupport: null
    AUC: null
    MSE: null
    RMSE: null
    MAE: null
    R2: null
    compute_CD: null
    graph_ranks: null
    LogLoss: null
    class `ScoreMetaType`:
        def `__new__`:
            registry: null
            abstract: null
            name: null
    class `CA`:
        Classification accuracy: null
    class `TargetScore`:
        def `compute_score`:
            binary: null
            'Multiclass data: specify target class or select ': null
            averaging ('weighted', 'macro', 'micro'): null
    class `AUC`:
        Area under ROC curve: null
        def `calculate_weights`:
            Class variable has less than two values: null
        def `compute_score`:
            Class variable has less than two values: null
    class `Specificity`:
        def `compute_score`:
            binary: null
            weighted: null
            'Binary averaging needs two classes in data: ': null
            'specify target class or use ': null
            weighted averaging.: null
            'Wrong parameters: For averaging select one of the ': null
            'following values: (''weighted'', ''binary'')': null
    class `MSE`:
        Mean square error: null
    class `RMSE`:
        Root mean square error: null
    class `MAE`:
        Mean absolute error: null
    class `R2`:
        Coefficient of determination: null
    class `CVRMSE`:
        Coefficient of variation of the RMSE: null
        def `compute_score`:
            Mean value is too small: null
    def `compute_CD`:
        '0.05': null
        nemenyi: null
        compute_CD is deprecated and will be removed in Orange 3.34.: null
        '0.1': null
        bonferroni-dunn: null
    def `graph_ranks`:
        graph_ranks is deprecated and will be removed in Orange 3.34.: null
        Function graph_ranks requires matplotlib.: null
        white: null
        w: null
        def `line`:
            k: null
        center: null
        bottom: null
        right: null
        left: null
        CD: null
evaluation/testing.py:
    Results: null
    CrossValidation: null
    LeaveOneOut: null
    TestOnTrainingData: null
    ShuffleSplit: null
    TestOnTestData: null
    sample: null
    CrossValidationFeature: null
    _MpResults: null
    fold_i: null
    learner_i: null
    model: null
    failed: null
    n_values: null
    values: null
    probs: null
    train_time: null
    test_time: null
    def `_mp_worker`:
        Test fold is empty: null
    class `Results`:
        def `__init__`:
            mismatching domain: null
            mismatching number of rows: null
            regression results cannot have non-None 'nclasses': null
            regression results cannot have 'probabilities': null
            mismatching number of class values: null
            mismatching number of methods: null
        def `get_fold`:
            This 'Results' instance does not have folds.: null
        def `get_augmented_data`:
            '{name} ({value})': null
            Fold: null
        def `split_by_model`:
            probabilities: null
    class `Validation`:
        def `__new__`:
            learners and train_data must both be present or not: null
            'preprocessor cannot be given if learners ': null
            and train_data are omitted: null
            'callback cannot be given if learners ': null
            'calling Validation''s constructor with data and learners ': null
            is deprecated;\nconstruct an instance and call it: null
            test_data: null
        def `fit`:
            Validation.fit is deprecated; use the call operator: null
    class `CrossValidation`:
        def `get_indices`:
            Using non-stratified sampling.: null
    class `CrossValidationFeature`:
        def `get_indices`:
            '''{self.feature.name}'' does not have at least two distinct ': null
            values on the data: null
    class `TestOnTestData`:
        def `__new__`:
            train_data: null
            argument 'data' is given twice (once as 'train_data'): null
    class `TestOnTrainingData`:
        def `__call__`:
            test_data: null
misc/__init__.py:
    def `import_late_warning`:
        class `Warn`:
            def `__getattr__`:
                Install package ': null
                ''' to use this functionality.': null
misc/collections.py:
    class `frozendict`:
        def `clear`:
            FrozenDict does not support method 'clear': null
        def `pop`:
            FrozenDict does not support method 'pop': null
        def `popitem`:
            FrozenDict does not support method 'popitem': null
        def `setdefault`:
            FrozenDict does not support method 'setdefault': null
        def `update`:
            FrozenDict does not support method 'update': null
        def `__setitem__`:
            FrozenDict does not allow setting elements: null
        def `__delitem__`:
            FrozenDict does not allow deleting elements: null
    def `natural_sorted`:
        def `natural_keys`:
            (\d+): null
    class `DictMissingConst`:
        __missing: null
        def `__reduce_ex__`:
            __dict__: null
        def `__repr__`:
            '{type(self).__qualname__}({self.missing!r}, {dict(self)!r})': null
misc/datasets.py:
    class `_DatasetInfo`:
        def `__init__`:
            ../datasets: null
            datasets.info: null
            r: null
misc/distmatrix.py:
    class `DistMatrix`:
        def `__array_finalize__`:
            row_items: null
            col_items: null
            axis: null
        def `from_file`:
            empty file: null
            distance file must begin with dimension: null
            labelled: null
            labeled: null
            row_labels: null
            col_labels: null
            symmetric: null
            asymmetric: null
            '=': null
            axis: null
            invalid flag '{}': null
            \t: null
            mismatching number of column labels: null
            too many rows: null
            too many columns in matrix row {}: null
            '''{}''': null
            invalid element at row {}, column {}: null
            label: null
        def `save`:
            '{}\taxis={}': null
            \tcol_labels: null
            \trow_labels: null
            \tasymmetric: null
            wt: null
            \n: null
            \t: null
misc/environ.py:
    def `_get_parsed_config`:
        .: null
        data: null
        home: null
        ~/: null
        prefix: null
        name: null
        Orange: null
        version: null
        version.major: null
        version.minor: null
        version.micro: null
        etc/orangerc.conf: null
        utf-8: null
        paths: null
    def `get_path`:
        paths: null
    def `_default_data_dir_base`:
        darwin: null
        ~/Library/Application Support: null
        win32: null
        APPDATA: null
        ~/AppData/Local: null
        posix: null
        XDG_DATA_HOME: null
        ~/.local/share: null
    def `data_dir_base`:
        data_dir_base: null
    def `data_dir`:
        Orange: null
    def `widget_settings_dir`:
        '''{__name__}.widget_settings_dir'' is deprecated.': null
    def `_default_cache_dir`:
        darwin: null
        ~/Library/Caches: null
        win32: null
        APPDATA: null
        ~/AppData/Local: null
        posix: null
        XDG_CACHE_HOME: null
        ~/.cache: null
        Orange: null
        Cache: null
    def `cache_dir`:
        cache_dir: null
misc/lazy_module.py:
    class `_LazyModule`:
        def `_do_import`:
            Orange.: null
            Orange: null
misc/server_embedder.py:
    TaskItem: null
    id: null
    item: null
    no_repeats: null
    class `ServerEmbedderCommunicator`:
        def `__init__`:
            ORANGE_EMBEDDING_API_URL: null
            error-reporting/machine-id: null
        def `embedd_batch`:
            'proc_callback is deprecated and will be removed in version 3.34, ': null
            use callback instead: null
        def `_init_workers`:
            Created %d workers: null
        def `_cancel_workers`:
            Canceling workers: null
            All workers canceled: null
        def `_send_to_server`:
            Embedding %s: null
            'Sending to the server: %s': null
            /{self.embedder_type}/{self._model}?machine={self.machine_id}: null
            '&session={self.session_id}&retry={num_repeats+1}': null
            'Successfully embedded:  %s': null
            'Embedding unsuccessful - reading to queue:  %s': null
        def `_send_request`:
            Content-Type: null
            Content-Length: null
            Read timeout: null
            Network error: null
            Embedding error: null
        def `_parse_response`:
            utf-8: null
            embedding: null
        def `set_cancelled`:
            'set_cancelled is deprecated and will be removed in version 3.34, ': null
            the process can be canceled by raising Error in callback: null
misc/wrapper_meta.py:
    class `WrapperMeta`:
        def `__new__`:
            __wraps__: null
            __wrapped__: null
            ? "\nA wrapper for `${sklname}`. The following is its documentation:\n\
                \n${skldoc}\n            "
            : null
            '{}.{}': null
            Attributes\n---------: null
            Examples\n--------: null
            Parameters\n---------: null
            ${sklname}: null
            ${skldoc}: null
misc/tests/example_embedder.py:
    class `ExampleServerEmbedder`:
        def `__init__`:
            image/jpeg: null
        def `_encode_data_instance`:
            big: null
misc/utils/embedder_utils.py:
    class `EmbedderCache`:
        '{:s}_embeddings.pickle': null
        def `save_pickle`:
            wb: null
        def `load_pickle`:
            rb: null
    def `get_proxies`:
        def `add_scheme`:
            ://: null
            http://{url}: null
        http_proxy: null
        https_proxy: null
        http://: null
        https://: null
modelling/ada_boost.py:
    SklAdaBoostLearner: null
    class `SklAdaBoostLearner`:
        classification: null
        regression: null
modelling/base.py:
    class `Fitter`:
        classification: null
        regression: null
        def `__init__`:
            preprocessors: null
        def `get_learner`:
            No learner to handle '{}': null
        def `supports_weights`:
            supports_weights: null
        def `params`:
            'A fitter does not have its own params. If you need to access ': null
            learner params, please use the `get_params` method.: null
modelling/catgb.py:
    CatGBLearner: null
    class `CatGBLearner`:
        Gradient Boosting (catboost): null
        classification: null
        regression: null
modelling/constant.py:
    ConstantLearner: null
    class `ConstantLearner`:
        classification: null
        regression: null
modelling/gb.py:
    GBLearner: null
    class `GBLearner`:
        Gradient Boosting (scikit-learn): null
        classification: null
        regression: null
modelling/knn.py:
    KNNLearner: null
    class `KNNLearner`:
        classification: null
        regression: null
modelling/linear.py:
    SGDLearner: null
    class `SGDLearner`:
        sgd: null
        classification: null
        regression: null
        def `_change_kwargs`:
            loss: null
            classification_loss: null
            epsilon: null
            classification_epsilon: null
            regression_loss: null
            regression_epsilon: null
modelling/neural_network.py:
    NNLearner: null
    class `NNLearner`:
        classification: null
        regression: null
modelling/randomforest.py:
    RandomForestLearner: null
    class `RandomForestLearner`:
        random forest: null
        classification: null
        regression: null
modelling/svm.py:
    SVMLearner: null
    LinearSVMLearner: null
    NuSVMLearner: null
    class `SVMLearner`:
        classification: null
        regression: null
    class `LinearSVMLearner`:
        classification: null
        regression: null
    class `NuSVMLearner`:
        classification: null
        regression: null
modelling/tree.py:
    SklTreeLearner: null
    TreeLearner: null
    class `SklTreeLearner`:
        tree: null
        classification: null
        regression: null
    class `TreeLearner`:
        tree: null
        classification: null
        regression: null
modelling/xgb.py:
    XGBLearner: null
    XGBRFLearner: null
    class `XGBLearner`:
        Extreme Gradient Boosting (xgboost): null
        classification: null
        regression: null
    class `XGBRFLearner`:
        Extreme Gradient Boosting Random Forest (xgboost): null
        classification: null
        regression: null
preprocess/continuize.py:
    DomainContinuizer: null
    class `DomainContinuizer`:
        def `__call__`:
            def `transform_discrete`:
                '{}={}': null
            data has multinomial attributes: null
            continuizer requires data: null
preprocess/discretize.py:
    EqualFreq: null
    EqualWidth: null
    EntropyMDL: null
    DomainDiscretizer: null
    decimal_binnings: null
    time_binnings: null
    short_time_units: null
    BinDefinition: null
    class `Discretizer`:
        def `_fmt_interval`:
            < {formatter(high)}: null
            ≥ {formatter(low)}: null
            '{formatter(low)} - {formatter(high)}': null
        def `create_discretized_var`:
            def `fmt`:
                '{val:.{ndigits}f}': null
            single_value: null
    class `BinSql`:
        def `__call__`:
            'width_bucket({self.var.to_sql()}, ': null
            ARRAY{str(self.points)}::double precision[]): null
    class `SingleValueSql`:
        def `__call__`:
            '''%s''': null
    class `Discretization`:
        def `__call__`:
            'Subclasses of ''Discretization'' need to implement ': null
            the call operator: null
    class `EqualFreq`:
        def `__call__`:
            quantile(%s, ARRAY%s): null
    class `FixedTimeWidth`:
        def `__call__`:
            '%Y': null
            '%y %b': null
            '%y %b %d': null
            '%y %b %d %H:%M': null
            '%H:%M:%S': null
    def `_simplified_time_intervals`:
        ' ': null
        < {join(labels[0])}: null
        '{join(low)} - {join(no_common(low, high))}': null
        ≥ {join(labels[-1])}: null
    class `Binning`:
        def `_create_binned_var`:
            < {blabels[0]}: null
            '{lab1} - {lab2}': null
            ≥ {blabels[-1]}: null
    class `BinDefinition`:
        def `__new__`:
            '%g': null
            '{width:g}': null
    def `decimal_binnings`:
        '%g': null
    def `_time_binnings`:
        '%H:%M:%S': null
        second: null
        '%b %d %H:%M': null
        minute: null
        '%y %b %d %H:%M': null
        hour: null
        '%y %b %d': null
        day: null
        week: null
        '%y %b': null
        month: null
        '%Y': null
        year: null
        '{step // 7} week{''s'' * (step > 7)}': null
        '{step} {unit}{''s'' * (step > 1)}': null
    def `_simplified_labels`:
        '42': null
        ' ': null
        ':': null
        '{to_remove} {labels[0]}': null
    def `_unique_time_bins`:
        '%y %b %d': null
        ' %H:%M': null
        :%S: null
    def `_min_max_unique`:
        no valid (non-nan) data: null
    sec: null
    min: null
    hrs: null
    wks: null
    mon: null
    yrs: null
preprocess/fss.py:
    SelectBestFeatures: null
    SelectRandomFeatures: null
    class `SelectBestFeatures`:
        def `score_only_nice_features`:
            -inf: null
            inf: null
preprocess/impute.py:
    ReplaceUnknowns: false
    Average: false
    DoNotImpute: false
    DropInstances: false
    Model: false
    AsValue: false
    Random: false
    Default: false
    FixedValueByType: false
    class `BaseImputeMethod`:
        '{var.name} -> {self.short_name}': true
    class `DoNotImpute`:
        Don't impute: Ne nadomeščaj
        leave: pusti
    class `DropInstances`:
        Remove instances with unknown values: Odstrani primere z neznanimi vrednostmi
        drop: odstrani
    class `Average`:
        Average/Most frequent: Povprečna/najpogostejša vrednost
        average: povprečje
        Replace with average/mode of the column: Zamenjaj s povprečno oziroma najpogostejšo vrednostjo
        def `__call__`:
            Variable must be numeric or categorical.: Spremenljivka mora biti številska ali kategorična
    class `ImputeSql`:
        def `__call__`:
            coalesce(%s, %s): false
    class `Default`:
        Fixed value: Določena vrednost
        value: false
        '{var} -> {self.default}': true
    class `FixedValueByType`:
        Fixed value: Določena vrednost
        Fixed Value: določena
        # manjka "vrednost"
        '{var.name}': false
    class `Model`:
        Model-based imputer: Nadomeščanje z modelom
        model: model
        ' ({self.learner.name})': true
        def `name`:
            '{} ({})': true
            name: false
        def `__call__`:
            '`{}` doesn''t support domain type': '`{}` ne podpira te vrste ciljne spremenljivke'
    class `AsValue`:
        As a distinct value: Kot posebna, nova vrednost
        # morda "značilna vrednost"
        # v gradniku prikaže vejico kot narobe stično - pokaže jo stično levo in desno. Isti problem se kaže večkrat, na primer v gradniku "nadomesti neznane vrednosti"
        new value: nova vrednost
        def `__call__`:
            '{var.name}': true
            N/A: NN
            '{var.name}_def': '{var.name} znana'
            undef: ne
            # nedefinirana ali nedoločena
            def: da
            #definirana ali določena  - prevod je sicer drugačen od originala
    class `ReplaceUnknownsRandom`:
        def `__init__`:
            'Only categorical and numeric ': Podprte so samo kategorične
            variables are supported.: in številske spremenljivke.
    class `Random`:
        Random values: Naključno izbrana vrednost
        random: naključna
        Replace with a random value: Nadomesti z naključno vrednostjo
        def `__call__`:
            '''{}'' has no values': false
            '''{}'' has an unknown distribution': false
preprocess/normalize.py:
    Normalizer: null
preprocess/preprocess.py:
    Continuize: null
    Discretize: null
    Impute: null
    RemoveNaNRows: null
    SklImpute: null
    Normalize: null
    Randomize: null
    Preprocess: null
    RemoveConstant: null
    RemoveNaNClasses: null
    RemoveNaNColumns: null
    ProjectPCA: null
    ProjectCUR: null
    Scale: null
    RemoveSparse: null
    AdaptiveNormalize: null
    PreprocessorList: null
    class `Preprocess`:
        def `__call__`:
            Subclasses need to implement __call__: null
    class `Continuize`:
        Continuize: null
        Indicators: null
        FirstAsBase: null
        FrequentAsBase: null
        Remove: null
        RemoveMultinomial: null
        ReportError: null
        AsOrdinal: null
        AsNormalizedOrdinal: null
        Leave: null
        Continuize.MultinomialTreatment: null
    class `SklImpute`:
        def `__init__`:
            mean: null
    class `RemoveNaNClasses`:
        Orange.data.filter.HasClas: null
    class `Normalize`:
        Normalize: null
        NormalizeBySpan: null
        NormalizeBySD: null
        Normalize.Type: null
        def `__call__`:
            skip-normalization: null
    class `Randomize`:
        Randomize: null
        Randomize.Type: null
    class `Scale`:
        class `_MethodEnum`:
            def `__call__`:
                _: null
        Scale: null
        NoCentering: null
        Mean: null
        Median: null
        Scale.CenteringType: null
        NoScaling: null
        Std: null
        Span: null
        Scale.ScalingType: null
preprocess/remove.py:
    Remove: null
    class `Remove`:
        def `get_vars_and_results`:
            removed: null
            reduced: null
            sorted: null
    Var: null
    var: null
    Removed: null
    sub: null
    Reduced: null
    Sorted: null
    Transformed: null
preprocess/score.py:
    Chi2: null
    ANOVA: null
    UnivariateLinearRegression: null
    InfoGain: null
    GainRatio: null
    Gini: null
    ReliefF: null
    RReliefF: null
    FCBF: null
    class `Scorer`:
        def `friendly_name`:
            ([a-z])([A-Z]): null
            ' ': null
        def `_friendly_vartype_name`:
            categorical: null
            numeric: null
            Variable: null
        def `__call__`:
            '{} requires data with a target variable.': null
            '{} requires a {} target variable.': null
            '{} cannot score {} variables.': null
    class `LearnerScorer`:
        def `score_data`:
            def `join_derived_features`:
                compute_value: null
                variable: null
    class `ReliefF`:
        ReliefF: null
        def `score_data`:
            ReliefF requires one single class: null
            'ReliefF supports classification; use RReliefF ': null
            for regression: null
    class `RReliefF`:
        RReliefF: null
        def `score_data`:
            RReliefF requires one single class: null
            'RReliefF supports regression; use ReliefF ': null
            for classification: null
    __main__: null
    Best =: null
    Weights =: null
preprocess/transformation.py:
    class `Transformation`:
        def `__getstate__`:
            _target_domain: null
        def `transform`:
            ColumnTransformations must implement method 'transform'.: null
    class `Normalizer`:
        def `transform`:
            Normalization does not work for sparse data.: null
    class `MappingTransform`:
        def `__init__`:
            DTypeLike: null
            '''nan'' value in mapping.keys()': null
projection/base.py:
    LinearCombinationSql: null
    Projector: null
    Projection: null
    SklProjector: null
    LinearProjector: null
    DomainProjection: null
    class `LinearCombinationSql`:
        def `__call__`:
            ' + ': null
            '{} * {}': null
            '{} * ({} - {})': null
    class `Projector`:
        projection: null
        def `fit`:
            Classes derived from Projector must overload method fit: null
        def `__getstate__`:
            _Projector__tls: null
    class `DomainProjection`:
        C: null
        def `__init__`:
            def `proj_variable`:
                mean_: null
        def `_get_var_names`:
            x: null
            y: null
            '{self.var_prefix}-{postfix}': null
    class `LinearProjector`:
        Linear Projection: null
    class `SklProjector`:
        skl projection: null
        def `_get_sklparams`:
            self: null
            Wrapper does not define '__wraps__': null
        def `preprocess`:
            'Wrapped scikit-learn methods do not support ': null
            multinomial variables.: null
projection/cur.py:
    CUR: null
    class `CUR`:
        cur: null
    class `CURModel`:
        def `__call__`:
            'CUR can select either columns ': null
            (axis = 0) or rows (axis = 1).: null
    class `Projector`:
        def `__getstate__`:
            transformed: null
    __main__: null
    fro: null
    'Fro. error (optimal SVD): %5.4f': null
    'Fro. error (CUR): %5.4f': null
projection/freeviz.py:
    FreeViz: null
    class `FreeVizModel`:
        freeviz: null
    class `FreeViz`:
        FreeViz: null
        def `__call__`:
            Can not handle discrete variables: null
            ' with more than two values': null
        def `forces_regression`:
            sqeuclidean: null
        def `forces_classification`:
            hamming: null
        def `gradient`:
            weights.ndim != 1 ({}): null
            X and embeddings must have the same length ({}!={}): null
            X.shape[0] != weights.shape[0] ({}!={}): null
        def `freeviz`:
            X and y must have the same length: null
            center.shape != (X.shape[1], ) ({} != {}): null
            scale.shape != (X.shape[1],) ({} != {})): null
            ignore: null
projection/lda.py:
    LDA: null
    class `LDAModel`:
        LD: null
    class `LDA`:
        LDA: null
        def `__init__`:
            svd: null
        def `fit`:
            n_components: null
projection/manifold.py:
    MDS: null
    Isomap: null
    LocallyLinearEmbedding: null
    SpectralEmbedding: null
    TSNE: null
    def `torgerson`:
        auto: null
        arpack: null
        lapack: null
        w was not in ascending order: null
        '{} of the {} eigenvalues were negative.': null
    class `MDS`:
        MDS: null
        def `__init__`:
            euclidean: null
            random: null
        def `__call__`:
            dissimilarity: null
            precomputed: null
            PCA: null
            n_components: null
    class `Isomap`:
        Isomap: null
        def `__init__`:
            auto: null
    class `LocallyLinearEmbedding`:
        Locally Linear Embedding: null
        def `__init__`:
            auto: null
            standard: null
    class `SpectralEmbedding`:
        Spectral Embedding: null
        def `__init__`:
            nearest_neighbors: null
    class `TSNEModel`:
        def `transform`:
            'A sparse matrix was passed, but dense data is required. Use ': null
            X.toarray() to convert to a dense numpy array.: null
            perplexity: null
            'Perplexity should be an instance of `Iterable`, `%s` ': null
            given.: null
            perplexities: null
        def `optimize`:
            n_iter: null
            inplace: null
            propagate_exception: null
    class `TSNE`:
        t-SNE: null
        def `__init__`:
            pca: null
            euclidean: null
            exact: null
            bh: null
        def `compute_affinities`:
            'A sparse matrix was passed, but dense data is required. Use ': null
            X.toarray() to convert to a dense numpy array.: null
            'Perplexity should be an instance of `Iterable`, `%s` ': null
            given.: null
            'Perplexity should be an instance of `float`, `%s` ': null
        def `compute_initialization`:
            pca: null
            random: null
            'Invalid initialization `%s`. Please use either `pca` or ': null
            '`random` or provide a numpy array.': null
        def `convert_embedding_to_model`:
            x: null
            y: null
            '"t-SNE-{p}"': null
projection/pca.py:
    PCA: null
    SparsePCA: null
    IncrementalPCA: null
    TruncatedSVD: null
    def `randomized_pca`:
        auto: null
        f: null
        economic: null
    class `ImprovedPCA`:
        def `_fit`:
            csr: null
            csc: null
            arpack: null
            auto: null
            randomized: null
            mle: null
            full: null
            only the randomized solver supports sparse matrices: null
            Unrecognized svd_solver='{0}': null
        def `_fit_truncated`:
            n_components=%r cannot be a string with svd_solver='%s': null
            'n_components=%r must be between 1 and min(n_samples, ': null
            n_features)=%r with svd_solver='%s': null
            'n_components=%r must be of type int when greater than or ': null
            equal to 1, was of type=%r: null
            arpack: null
            'n_components=%r must be strictly less than min(n_samples, ': null
            randomized: null
        def `transform`:
            mean_: null
            components_: null
            csr: null
            csc: null
    class `PCA`:
        PCA: null
        def `__init__`:
            auto: null
        def `fit`:
            n_components: null
    class `SparsePCA`:
        Sparse PCA: null
        def `__init__`:
            lars: null
    class `PCAModel`:
        PC: null
        def `_get_var_names`:
            '{self.var_prefix}{postfix}': null
    class `IncrementalPCA`:
        Incremental PCA: null
    class `TruncatedSVD`:
        Truncated SVD: null
        def `__init__`:
            randomized: null
        def `fit`:
            n_components: null
projection/radviz.py:
    RadViz: null
    class `RadVizModel`:
        radviz: null
    class `RadViz`:
        RadViz: null
        def `__call__`:
            Can not handle categorical variables: null
            ' with more than two values': null
        def `transform`:
            ignore: null
regression/base_regression.py:
    LearnerRegression: null
    ModelRegression: null
    SklModelRegression: null
    SklLearnerRegression: null
    class `LearnerRegression`:
        def `incompatibility_reason`:
            Too many target variables.: null
            Numeric class variable expected.: null
regression/catgb.py:
    CatGBRegressor: null
regression/curvefit.py:
    CurveFitLearner: null
    class `CurveFitModel`:
        def `coefficients`:
            coef: null
            name: null
        def `__getstate__`:
            Can't pickle/copy callable. Use str expression instead.: null
            domain: null
            original_domain: null
            parameters_names: null
            parameters: null
            function: null
            args: null
    class `CurveFitLearner`:
        Curve Fit: null
        def `__init__`:
            Provide 'parameters_names' parameter.: null
            Provide 'features_names' parameter.: null
            Provide 'available_feature_names' parameter.: null
            Provide 'functions' parameter.: null
        def `fit_storage`:
            Numeric feature expected.: null
        def `__getstate__`:
            Can't pickle/copy callable. Use str expression instead.: null
            parameters_names: null
            features_names: null
            p0: null
            bounds: null
            preprocessors: null
        def `__setstate__`:
            expression: null
    def `_create_lambda`:
        eval: null
        x: null
        <lambda>: null
    __main__: null
    housing: null
    a: null
    b: null
    c: null
    LSTAT: null
    o: null
regression/gb.py:
    GBRegressor: null
    class `GBRegressor`:
        def `__init__`:
            squared_error: null
            friedman_mse: null
            deprecated: null
regression/knn.py:
    KNNRegressionLearner: null
regression/linear.py:
    LinearRegressionLearner: null
    RidgeRegressionLearner: null
    LassoRegressionLearner: null
    SGDRegressionLearner: null
    ElasticNetLearner: null
    ElasticNetCVLearner: null
    PolynomialLearner: null
    class `RidgeRegressionLearner`:
        def `__init__`:
            auto: null
    class `ElasticNetCVLearner`:
        def `__init__`:
            auto: null
    class `SGDRegressionLearner`:
        def `__init__`:
            squared_error: null
            l2: null
            invscaling: null
    class `PolynomialLearner`:
        poly learner: null
    class `LinearModel`:
        def `__str__`:
            LinearModel {}: null
    class `PolynomialModel`:
        def `__str__`:
            PolynomialModel {}: null
regression/linear_bfgs.py:
    LinearRegressionLearner: null
    class `LinearRegressionLearner`:
        linear_bfgs: null
        def `fit`:
            'Linear regression does not support ': null
            multi-target classification: null
            unknown values: null
    __main__: null
    housing: null
    '{:5.2f} {}': null
    test data: null
    majority: null
regression/mean.py:
    MeanLearner: null
    class `MeanLearner`:
        def `fit_storage`:
            'regression.MeanLearner expects a domain with a ': null
            (single) numeric variable.: null
    class `MeanModel`:
        def `__str__`:
            MeanModel({}): null
regression/neural_network.py:
    NNRegressionLearner: null
    class `NNRegressionLearner`:
        def `_initialize_wrapped`:
            callback: null
regression/random_forest.py:
    RandomForestRegressionLearner: null
    class `RandomForestRegressor`:
        def `trees`:
            def `wrap`:
                '{} - tree {}': null
                instances: null
    class `RandomForestRegressionLearner`:
        def `__init__`:
            squared_error: null
            auto: null
regression/simple_random_forest.py:
    SimpleRandomForestLearner: null
    class `SimpleRandomForestLearner`:
        simple rf reg: null
        def `__init__`:
            sqrt: null
regression/svm.py:
    SVRLearner: null
    LinearSVRLearner: null
    NuSVRLearner: null
    class `SVRLearner`:
        def `__init__`:
            rbf: null
            auto: null
    class `LinearSVRLearner`:
        def `__init__`:
            epsilon_insensitive: null
    class `NuSVRLearner`:
        def `__init__`:
            rbf: null
            auto: null
    __main__: null
    housing: null
    'learner: {}\nRMSE: {}\n': null
regression/tree.py:
    SklTreeRegressionLearner: null
    TreeLearner: null
    class `TreeLearner`:
        def `__init__`:
            binarity: null
            min_samples_leaf: null
            min_samples_split: null
            max_depth: null
        def `fit_storage`:
            'Exhaustive binarization does not handle ': null
            attributes with more than {} values: null
    class `SklTreeRegressionLearner`:
        regression tree: null
        def `__init__`:
            squared_error: null
            best: null
regression/xgb.py:
    XGBRegressor: null
    XGBRFRegressor: null
    class `XGBRegressor`:
        def `__init__`:
            reg:squarederror: null
            gain: null
    class `XGBRFRegressor`:
        def `__init__`:
            reg:squarederror: null
            gain: null
statistics/basic_stats.py:
    def `_get_variable`:
        variable: null
        'variable does not match the variable ': null
        in the data: null
        domain: null
        invalid specification of variable: null
    class `BasicStats`:
        def `__init__`:
            inf: null
            -inf: null
statistics/contingency.py:
    def `_get_variable`:
        variable: null
        variable does not match the variable in the data: null
        domain: null
        expected %s variable not %s: null
        expected %s, not '%s': null
    class `Discrete`:
        def `__new__`:
            incompatible arguments (data storage and 'unknowns': null
            row_variable: null
            col_variable: null
        def `from_data`:
            row_variable needs to be specified (data has no class): null
            row_variable: null
            col_variable: null
        def `__eq__`:
            col_unknowns: null
            row_unknowns: null
            unknowns: null
        def `__array_finalize__`:
            col_variable: null
            row_variable: null
            col_unknowns: null
            row_unknowns: null
            unknowns: null
    class `Continuous`:
        def `__init__`:
            incompatible arguments (data storage and 'unknowns': null
            row_variable: null
            col_variable: null
        def `from_data`:
            row_variable needs to be specified (data has no class): null
            row_variable: null
            col_variable: null
            Fallback method for computation of contingencies is not implemented yet: null
        def `__eq__`:
            col_unknowns: null
            row_unknowns: null
            unknowns: null
        def `__setitem__`:
            'Setting individual class contingencies is not implemented yet. ': null
            Set .values and .counts.: null
        def `normalize`:
            contingencies can be normalized only with axis=1 or without axis: null
    def `get_contingency`:
        col_variable: null
        cannot compute distribution of '%s': null
    def `get_contingencies`:
        data has no target variable: null
statistics/distribution.py:
    def `_get_variable`:
        variable: null
        variable does not match the variable in the data: null
        domain: null
        expected %s variable not %s: null
        expected %s, not '%s': null
    class `Distribution`:
        def `__array_finalize__`:
            variable: null
            unknowns: null
        def `__eq__`:
            unknowns: null
    class `Discrete`:
        def `__new__`:
            incompatible arguments (data storage and 'unknowns': null
            unknowns: null
        def `__add__`:
            unknowns: null
        def `__iadd__`:
            unknowns: null
        def `__sub__`:
            unknowns: null
        def `__isub__`:
            unknowns: null
    class `Continuous`:
        def `__new__`:
            incompatible arguments (data storage and 'unknowns': null
            unknowns: null
        def `from_data`:
            float: null
    def `class_distribution`:
        domain has no class attribute: null
    def `get_distribution`:
        cannot compute distribution of '%s': null
statistics/util.py:
    def `_eliminate_zeros`:
        eliminate_zeros: null
        '`{x.__type__}` does not implement `eliminate_zeros`. Some values ': null
        in the sparse matrix may by explicit zeros.: null
    def `_count_nans_per_row_sparse`:
        unsupported type '{}': null
    def `sparse_count_implicit_zeros`:
        The matrix provided was not sparse.: null
    def `sparse_has_implicit_zeros`:
        The matrix provided was not sparse.: null
    def `sparse_implicit_zero_weights`:
        The matrix provided was not sparse.: null
        Computing zero weights on ndimensinal weight matrix is not implemented: null
    def `countnans`:
        Only axis 0 and 1 are currently supported: null
        Axis %d is out of bounds: null
    def `_nan_min_max`:
        nan: null
    def `mean`:
        mean() resulted in nan. If input can contain nan values,: null
        ' perhaps you meant nanmean?': null
    def `digitize`:
        right: null
        left: null
    def `isnan`:
        The `out` parameter can only be set `x` when using sparse matrices: null
tests/__init__.py:
    def `named_file`:
        wt: null
    def `suite`:
        test*.py: null
        tests: null
        widgets: null
    __main__: null
    suite: null
tests/base.py:
    class `PickleTest`:
        def `setUp`:
            attributes: null
            class_vars: null
            class_var: null
            variables: null
            metas: null
            anonymous: null
    def `create_pickling_tests`:
        def `create_test`:
            test_{}: null
tests/dummy_learners.py:
    class `DummyMulticlassLearner`:
        def `incompatibility_reason`:
            Not all class variables are discrete: null
tests/sql/base.py:
    def `parse_uri`:
        /: null
        table: null
    class `TestParseUri`:
        def `test_parses_connection_uri`:
            sql://user:password@host:7678/database/table: null
            sql: null
            host: null
            user: null
            password: null
            database: null
            table: null
        def `test_parse_minimal_connection_uri`:
            sql://host/database/table: null
            sql: null
            host: null
            database: null
            table: null
        def `assertDictContainsSubset`:
            '%s, expected: %s, actual: %s': null
            'Missing: %s': null
            ',': null
            '; ': null
            'Mismatched values: %s': null
    def `connection_params`:
        ORANGE_TEST_DB_URI: null
        '|': null
    class `PostgresTestConnection`:
        postgres: null
        psycopg2: null
        def `create_sql_table`:
            float: null
            varchar({}): null
            col{}: null
            '"{}"': null
            DROP TABLE IF EXISTS {}: null
            CREATE TABLE {} ({}): null
            ', ': null
            '{} {}': null
            ({}): null
            'NULL': null
            '''{}''': null
            INSERT INTO {} VALUES {}: null
        def `drop_sql_table`:
            DROP TABLE {}: null
    class `MicrosoftTestConnection`:
        mssql: null
        pymssql: null
        def `create_sql_table`:
            float: null
            varchar({}): null
            col{}: null
            '"{}"': null
            DROP TABLE IF EXISTS {}: null
            CREATE TABLE {} ({}): null
            ', ': null
            '{} {}': null
            ({}): null
            'NULL': null
            '''{}''': null
            INSERT INTO {} VALUES {}: null
        def `drop_sql_table`:
            DROP TABLE {}: null
    class `DataBaseTest`:
        def `_check_db`:
            '>': null
            This test is only run database version higher then {}: null
            <: null
            This test is only run on database version lower then {}: null
            '{} module is required for this database': null
            Database is not running: null
            No connection provided for {}: null
            Unsupported database: null
        def `_setup_test_with`:
            def `new_test`:
                setUpDB: null
                tearDownDB: null
        def `run_on`:
            def `decorator`:
                test_db_: null
                _: null
                'On ': null
                ' run: ': null
        def `create_iris_sql_table`:
            iris: null
            sepal length: null
            sepal width: null
            petal length: null
            petal width: null
            float: null
            varchar(15): null
        def `drop_iris_sql_table`:
            iris: null
widgets/__init__.py:
    def `widget_discovery`:
        Orange3: null
        Orange.widgets.data: null
        Orange.widgets.visualize: null
        Orange.widgets.model: null
        Orange.widgets.evaluate: null
        Orange.widgets.unsupervised: null
        Transform: null
        '#FF9D5E': null
        data/icons/Transform.svg: null
    '{DEVELOP_ROOT}/doc/visual-programming/build/htmlhelp/index.html': null
    data: null
    share/help/en/orange3/htmlhelp/index.html: null
    https://docs.biolab.si/orange/3/visual-programming/: null
widgets/credentials.py:
    Orange3 - {}: null
    class `CredentialManager`:
        def `__init__`:
            __service_name: null
        def `service_name`:
            __service_name: null
        def `__setattr__`:
            Failed to set secret '%s' of '%r'.: null
        def `__getattr__`:
            Failed to get secret '%s' of '%r'.: null
        def `__delattr__`:
            Failed to delete secret '%s' of '%r'.: null
widgets/gui.py:
    OWComponent: null
    OrangeUserRole: null
    TableView: null
    resource_filename: null
    miscellanea: null
    setLayout: null
    separator: null
    rubber: null
    widgetBox: null
    hBox: null
    vBox: null
    indentedBox: null
    widgetLabel: null
    label: null
    spin: null
    doubleSpin: null
    checkBox: null
    lineEdit: null
    button: null
    toolButton: null
    comboBox: null
    radioButtons: null
    radioButtonsInBox: null
    appendRadioButton: null
    hSlider: null
    labeledSlider: null
    valueSlider: null
    auto_commit: null
    auto_send: null
    auto_apply: null
    ProgressBar: null
    VerticalLabel: null
    tabWidget: null
    createTabPage: null
    table: null
    tableItem: null
    VisibleHeaderSectionContextEventFilter: null
    checkButtonOffsetHint: null
    toolButtonSizeHint: null
    FloatSlider: null
    ControlGetter: null
    VerticalScrollArea: null
    CalendarWidgetWithTime: null
    DateTimeEditWCalendarTime: null
    BarRatioRole: null
    BarBrushRole: null
    SortOrderRole: null
    LinkRole: null
    BarItemDelegate: null
    IndicatorItemDelegate: null
    LinkStyledItemDelegate: null
    ColoredBarItemDelegate: null
    HorizontalGridDelegate: null
    VerticalItemDelegate: null
    ValueCallback: null
    is_macstyle: null
    createAttributePixmap: null
    attributeIconDict: null
    attributeItem: null
    listView: null
    ListViewWithSizeHint: null
    listBox: null
    OrangeListBox: null
    TableValueRole: null
    TableClassValueRole: null
    TableDistribution: null
    TableVariable: null
    TableBarItem: null
    palette_combo_box: null
    BarRatioTableModel: null
    class `__AttributeIconDict`:
        def `__getitem__`:
            c: null
            N: null
            d: null
            C: null
            s: null
            S: null
            t: null
            T: null
            '?': null
    def `listView`:
        uniformItemSizes: null
    class `OrangeListBox`:
        def `updateGeometries`:
            _updatingGeometriesNow: null
    def `comboBox`:
        valueType: null
        Argument 'valueType' is deprecated and ignored: null
    class `TableBarItem`:
        color_schema: null
    class `HScrollStepMixin`:
        def `wheelEvent`:
            source: null
            darwin: null
    class `BarRatioTableModel`:
        def `setExtremesFrom`:
            ignore: null
            .*All-NaN slice encountered.*: null
        def `_argsortData`:
            mergesort: null
widgets/io.py:
    ImgFormat: null
    PngFormat: null
    SvgFormat: null
    ClipboardFormat: null
    PdfFormat: null
    MatplotlibFormat: null
    MatplotlibPDFFormat: null
widgets/settings.py:
    Setting: null
    SettingsHandler: null
    SettingProvider: null
    ContextSetting: null
    Context: null
    ContextHandler: null
    IncompatibleContext: null
    rename_setting: null
    widget_settings_dir: null
    DomainContextHandler: null
    PerfectDomainContextHandler: null
    ClassValuesContextHandler: null
    SettingsPrinter: null
    migrate_str_to_variable: null
    class `DomainContextHandler`:
        def `__init__`:
            '{} is not a valid parameter for DomainContextHandler': null
        def `encode_setting`:
            'Variables must be stored as ContextSettings; ': null
            change {setting.name} to ContextSetting.: null
        def `decode_setting`:
            def `get_var`:
                Cannot decode variable without domain: null
widgets/widget.py:
    OWWidget: null
    Input: null
    Output: null
    MultiInput: null
    AttributeList: null
    Message: null
    Msg: null
    StateInfo: null
    InputSignal: null
    OutputSignal: null
    Default: null
    NonDefault: null
    Single: null
    Multiple: null
    Dynamic: null
    Explicit: null
widgets/data/__init__.py:
    Data: Podatki
    orange.widgets.data: false
    Widgets for data manipulation.: Gradniki za obdelavo podatkov
    ? '

        This category contains widgets for data manipulation. This includes

        loading, importing, saving, preprocessing, selection, etc.


        '
    : "
    Gradniki za branje in shranjevanje podatkov, njihovo predprocesiranje,\n
    izbiranje in podobno.
    "
    icons/Category-Data.svg: false
    '#FFD39F': false
widgets/data/owaggregatecolumns.py:
    class `OWAggregateColumns`:
        Aggregate Columns: Agregiraj stolpce
        Compute a sum, max, min ... of selected columns.: Izračunaj vsoto, minimum, maksimum ... izbranih stolpcev.
        Transform: false
        icons/AggregateColumns.svg: false
        aggregate: agregacija
        sum: vsota
        product: zmnožek
        max: maksimum
        min: minimum
        mean: povprečje
        median: mediana
        variance: varianca
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        Sum: Vsota
        agg: false
        Product: Produkt
        Min: false
        Minimal value: Najmanjša vrednost
        Max: Maksimum
        Maximal value: Največja vrednost
        Mean: false
        Mean value: Povprečna vrednost
        Variance: Varianca
        Median: Mediana
        def `__init__`:
            Variable selection: Izbor spremenljivk
            All: "Vse"
            All, including meta attributes: Vse, vključno z meta atributi
            Features from separate input signal: Stolpci, določeni z vhodnim signalom
            Selected variables: Izbrane spremenljivke
            variables: false
            operation: false
            Operation: Operacija
            var_name: false
            'Output variable name: ': "Ime izhodne spremenljivke: "
        def `_and_others`:
            ', ': true
            "'{variables[0].name}'": true
            " and {len(variables) - limit} more": ' in še {len(variables) - limit} {plsi(len(variables) - limit, "druga|drugi|druge|drugih")}'
            ' and ''{variables[-1].name}''': ' in ''{variables[-1].name}'''
        def `send_report`:
            'Output:': "Izhod:"
            '''{self._new_var_name()}'' as {self.operation.lower()} of {var_list}': '''{self._new_var_name()}'' kot {self.operation.lower()} stolpcev {var_list}'
    __main__: false
    brown-selected: false
widgets/data/owcolor.py:
    class `AttrDesc`:
        def `to_dict`:
            rename: false
        def `from_dict`:
            rename: false
    class `DiscAttrDesc`:
        def `to_dict`:
            renamed_values: false
            colors: false
        def `from_dict`:
            renamed_values: false
            '{var.name}: ': false
            renaming of values ignored due to duplicate names: preimenovanje ni upoštevano zaradi podvojenih imen
            colors: false
    class `ContAttrDesc`:
        def `create_variable`:
            palette: false
        def `to_dict`:
            colors: false
        def `from_dict`:
            colors: false
    class `ContColorTableModel`:
        def `data`:
            def `_column2`:
                Copy to all: Dodeli vsem
    class `OWColor`:
        Color: Obarvaj
        Set color legend for variables.: Določi barvne legende za spremenljivke
        icons/Colors.svg: false
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        def `__init__`:
            Discrete Variables: Kategorične spremenljivke
            Numeric Variables: Številske spremenljivke
            Save: Shrani
            Load: Naloži
            Reset: Povrni
            auto_apply: false
        def `save`:
            File name: Ime datoteke
            Variable definitions (*.colors): Nastavitve barv (*.colors)
            colorwidget/last-location: false
        def `_save_var_defs`:
            w: false
            categorical: false
            numeric: false
        def `load`:
            File name: Ime datoteke
            Variable definitions (*.colors): Nastavitve barv (*.colors)
            File error: Napaka pri branju
            File cannot be opened.: Datoteke ni mogoče odpreti.
            Invalid file format.: Napačna oblika datoteke.
        def `_parse_var_defs`:
            categorical: false
            numeric: false
            rename: false
            Duplicated variable names: Podvojena imena spremenljivk
            Variables will not be renamed due to duplicated names.: Zaradi podvojenih imen spremenljivke ne bodo preimenovane.
            '''{name}''': false
            'Definition for variable {names[0]}, which does not ': Nastavitve za spremenljivko {names[0]}, ki je ni v podatkih,
            appear in the data, was ignored.\n: niso uporabljene.\n
            'Definitions for variables ': 'Nastavitve za {plsi(len(names), "|spremenljivki|spremenljivke")}'
            '{", ".join(names[:-1])} and {names[-1]}': '{", ".join(names[:-1])} in {names[-1]}'
            'Definitions for {", ".join(names[:4])} ': 'Nastavitve za {", ".join(names[:4])} '
            and {len(names) - 4} other variables: 'in še {z_besedo(len(names) - 4, 4, "f")} {plsi(len(names) - 4, "|drugi spremenljivki|druge spremenljivke|drugih spremenljivk")}'
            ', which do not appear in the data, were ignored.\n': ', ki jih ni v podatkih, niso uporabljene.\n'
            Invalid definitions: Neuporabljene definicije
            \n: false
        def `_start_dir`:
            basedir: false
            colorwidget/last-location: false
            ~{os.sep}: false
        def `send_report`:
            def `_report_variables`:
                def `was`:
                    '{n} (was: {o})': '{n} (prej: {o})'
                '    \n': false
                <td>{square(*color)} {was(value, old_value)}</td>: false
                <td colspan="{max_values}">: false
                '{pal.friendly_name}</td>': false
                '<tr style="height: 2em">\n': false
                '  <th style="text-align: right">{names}</th>': false
                '  {value_cols}\n': false
                </tr>\n: false
            Features: Spremenljivke
            '{pl(len(dom.class_vars), "Outcome")}': '{plsi(len(dom.class_vars), "Ciljna spremenljivka|Ciljni spremenljivki|Ciljne spremenljivke")}'
            Meta attributes: Meta spremenljivke
            <tr><th>{name}</th></tr>{rows}: false
            <table>{table}</table>: false
    __main__: false
    heart_disease.tab: false
widgets/data/owconcatenate.py:
    class `OWConcatenate`:
        Concatenate: Stakni tabele
        Concatenate (append) two or more datasets.: Stakni več tabel eno pod drugo
        Transform: false
        icons/Concatenate.svg: false
        append: stakni
        join: združi
        extend: razširi
        class `Inputs`:
            Primary Data: Osnovna tabela
            Additional Data: Dodatne tabele
        class `Outputs`:
            Data: Podatki
        class `Error`:
            Inputs must be of the same type.: Podatki morajo biti enake vrste.
        class `Warning`:
            Variables with duplicated names have been renamed.: Spremenljivk s podvojenimi imeni so preimenovane.
        Source ID: Vir
        all variables that appear in input tables: spremenljivke iz vseh tabel
        only variables that appear in all tables: spremenljivke, ki se pojavijo v vseh tabelah
        Class attribute: Ciljna spremenljivka
        Attribute: Spremenljivka
        Meta attribute: Meta spremenljivka
        def `__init__`:
            Variable Merging: Združevanje spremenljivk
            merge_type: true
            'When there is no primary table, ': 'Kadar ni podana osnovna tabela, '
            'the output should contain:': 'bo izhodna tabela vsebovala:'
            'The resulting table will have a class only if there ': 'Ciljna spremenljivka bo ohranjena le, če imajo '
            is no conflict between input classes.: 'vse vhodne tabele isto ciljno spremenljivko.'
            ignore_compute_value: false
            Treat variables with the same name as the same variable,\n: Obravnavaj spremenljivke z enakimi imeni kot isto spremenljivko,\n
            even if they are computed using different formulae.: četudi so izračunane z različnimi formulami oz. iz različnih izvornih spremenljivk.
            Source Identification: Oznaka vira
            append_source_column: false
            Append data source IDs: Vsaki vrstici dodaj ime tabele, iz katere izhaja
            'Feature name:': 'Ime spremenljivke:'
            source_attr_name: false
            'Place:': 'Vrsta:'
            source_column_role: false
            auto_commit: false
        def `commit`:
            name: false
            '{} ({})': true
            class_vars: false
            attributes: false
            metas: false
        def `send_report`:
            Domain: Domena
            from primary data: iz osnovne tabele
            Source data ID: Spremenljivka z imenom vira
            '{} (as {})': '{} (kot {})'
        def `merge_domains`:
            attributes: false
            class_vars: false
            metas: false
        def `_unique_vars`:
            AttrDesc: false
            template: false
            original: false
            values: false
            number_of_decimals: false
    __main__: false
    iris: false
    zoo: false
widgets/data/owcontinuize.py:
    class `OWContinuize`:
        Continuize: null
        'Transform categorical attributes into numeric and, ': null
        optionally, normalize numeric values.: null
        icons/Continuize.svg: null
        Transform: null
        encode: null
        dummy: null
        numeric: null
        one-hot: null
        binary: null
        treatment: null
        contrast: null
        class `Inputs`:
            Data: null
        class `Outputs`:
            Data: null
        First value as base: null
        Most frequent value as base: null
        One attribute per value: null
        Ignore multinomial attributes: null
        Remove categorical attributes: null
        Treat as ordinal: null
        Divide by number of values: null
        Leave them as they are: null
        Standardize to μ=0, σ²=1: null
        Center to μ=0: null
        Scale to σ²=1: null
        Normalize to interval [-1, 1]: null
        Normalize to interval [0, 1]: null
        Leave it as it is: null
        One class per value: null
        def `__init__`:
            multinomial_treatment: null
            Categorical Features: null
            continuous_treatment: null
            Numeric Features: null
            class_treatment: null
            Categorical Outcome(s): null
            autosend: null
        def `send_report`:
            Settings: null
            Categorical features: null
            Numeric features: null
            Class: null
        def `migrate_settings`:
            continuous_treatment: null
            zero_based: null
    def `make_indicator_var`:
        '{}={}': null
    def `continuize_domain`:
        continuizer requires data: null
    def `continuize_var`:
        def `continuize_discrete`:
            '{0.name} is a multinomial variable': null
            Invalid value of `multinomial_treatment`: null
        Non-primitive variables cannot be continuized: null
    def `_ensure_dist`:
        Need a distribution or data.: null
    class `DomainContinuizer`:
        def `__call__`:
            Domain has multinomial attributes: null
    __main__: null
    iris: null
widgets/data/owcorrelations.py:
    class `CorrelationType`:
        def `items`:
            Pearson correlation: Pearsonova korelacija
            Spearman correlation: Spearmanova korelacija
    class `CorrelationRank`:
        def `row_for_state`:
            name: false
            '{:+.3f}': false
    class `OWCorrelations`:
        Correlations: Korelacije
        Compute all pairwise attribute correlations.: Izračuna korelacije med vsemi pari spremenljivk.
        icons/Correlations.svg: false
        Unsupervised: false
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
            Features: Spremenljivke
            Correlations: Korelacije
        class `Information`:
            Constant features have been removed.: Konstantne spremenljivke so odstranjene.
        class `Warning`:
            At least two numeric features are needed.: Potrebni sta vsaj dve spremenljivki.
            # Zakaj ne "številski spremenljivki"?
            At least two instances are needed.: Potrebna sta vsaj dva primera.
        def `__init__`:
            correlation_type: false
            (All combinations): (Vse kombinacije)
            feature: false
        def `set_data`:
            removed: false
        def `commit`:
            Correlation: Korelacije
            FDR: FDR
            Feature 1: Spremenljivka 1
            Feature 2: Spremenljivka 2
            Correlations: Korelacije
        def `migrate_context`:
            selection: false
    __main__: false
    iris: false
widgets/data/owcreateclass.py:
    class `ValueFromDiscreteSubstring`:
        def `__setattr__`:
            patterns: false
            case_sensitive: false
            match_beginning: false
            variable: false
            map_values: false
    class `OWCreateClass`:
        Create Class: Ustvari razrede
        Create class attribute from a string attribute: Ustvari razrede iz besedilne spremenljivke
        icons/CreateClass.svg: false
        Transform: false
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        class: razred
        class `Warning`:
            Data contains only numeric variables.: Podatki vsebujejo samo številske vrednosti.
        class `Error`:
            Class name duplicated.: Spremenljivka s tem imenom že obstaja.
            Class name should not be empty.: Ime razreda ne more biti prazno.
        def `__init__`:
            class_name: false
            New Class Name: Ime novega razreda
            Match by Substring: Vzorci in razredi
            attribute: false
            'From column:': 'Iz stolpca:'
            Name: Ime
            Substring: Vzorec
            Count: Primerov
            +: true
            Options: Možnosti
            match_beginning: false
            Match only at the beginning: Vzorec mora biti na začetku
            case_sensitive: false
            Case sensitive: Loči med velikimi in malimi črkami
            Apply: Uveljavi
        def `adjust_n_rule_rows`:
            def `_add_line`:
                ×: true
                'color: gray': false
        def `class_labels`:
            ^C\\d+: true
            C{}: true
        def `update_counts`:
            def `_set_labels`:
                '{}': true
                + {}: true
                "{n_before} of the {n_total} matching ": "{n_before} od {n_total}"
                instance are already covered above.: primerov je že pokritih s predhodnimi vzorci.
                All matching instances are already covered above: Vse pojavitve so že pokrite s predhodnimi vzorci.
            def `_set_placeholders`:
                (remaining instances): (preostali primeri)
                (unused): (neuporabljeno)
        def `send_report`:
            def `_cond_part`:
                '<b>{class_name}</b> ': false
                "if <b>{self.attribute.name}</b> contains <b>{patt}</b>": "če <b>{self.attribute.name}</b> vsebuje <b>{patt}</b>"
                otherwise: sicer
            def `_count_part`:
                "all {n_total} matching instances are already covered above": "vseh {n_total} {plsi(n_total, 'pojavitev je že pokrita|pojavitvi sta že pokriti|pojavitve so že pokrite|pojavitev je že pokritih')} zgoraj"
                "{n_matched} {pl(n_matched, 'instance')}": "{n_matched} {plsi(n_matched, 'primer')}"
                "{n_matched} matching {pl(n_matched, 'instance')}": "{n_matched} {plsi(n_matched, 'pojavitev|pojavitvi|pojavitve|pojavitev')}"
                " (+{n_already} that {pl(n_already, 'is|are')} already covered above": " (+{n_already}, ki {plsi(n_already, 'je že pokrita|sta že pokriti|so že pokrite|je že pokritih')} zgoraj"
            Input: Vhod
            Source attribute: Izvorni stolpec
            <li>{}; {}</li>: false
            Output: Izhod
            Class name: Ime razreda
            <ol>{}</ol>: false
    __main__: false
    zoo: false
widgets/data/owcreateinstance.py:
    class `DiscreteVariableEditor`:
        def `__init__`:
            '?': (nedoločeno)
    class `ContinuousVariableEditor`:
        def `__init__`:
            Min/Max cannot be NaN.: false
            class `DoubleSpinBox`:
                def `textFromValue`:
                    '?': false
    class `TimeVariableEditor`:
        yyyy-MM-dd: true
        hh:mm:ss: true
        def `__init__`:
            '{TimeVariableEditor.DATE_FORMAT} ': false
            '{TimeVariableEditor.TIME_FORMAT}': false
    class `OWCreateInstance`:
        Create Instance: Sestavi primer
        Interactively create a data instance from sample dataset.: Ročno sestavi nov primer
        # Ročno sestavi nov primer iz vzorčnega nabora podatkov
        icons/CreateInstance.svg: false
        Transform: false
        simulator: nov
        class `Inputs`:
            Data: Podatki
            Reference: Referenca
        class `Outputs`:
            Data: Podatki
        class `Information`:
            'Variables with only missing values were ': "Spremenljivke, ki imajo same manjkajoče vrednosti "
            removed from the list.: niso na voljo.
            #Čisto rahlo dvoumen zapis, pa v angleščini je bolj razlagalen. Morda "spremenljivke z (izključno) manjkajočimi vrednostmi so bile odstranjene".
        Median: Mediana
        Mean: Povprečje
        Random: Naključno
        Input: Vhodni primer
        median: false
        mean: false
        random: false
        input: false
        name: false
        Variable: Spremenljivka
        variable: false
        Value: Vrednost
        header: false
        def `__init__`:
            Filter...: true
            buttonBox: false
            append_to_data: false
            Append this instance to input data: Dodaj primer k vhodnim podatkom
            auto_commit: false
        def `_initialize_values`:
            median: false
            mean: false
            random: false
            input: false
        def `_create_data_from_values`:
            created: ustvarjeni
        def `_append_to_data`:
            __source_widget: false
            Source ID: Vir
        def `send_report`:
            Input: Vhod
            Output: Izhod
            '{var.name}:': false
            Values: Vrednosti
    __main__: false
    housing: false
widgets/data/owcsvimport.py:
    T: false
    K: false
    E: false
    OWCSVFileImport: false
    class `Options`:
        def `__init__`:
            utf-8: false
            ColumnType: false
            .: ","
        def `__repr__`:
            '{}{!r}': false
        def `as_dict`:
            encoding: false
            delimiter: false
            quotechar: false
            doublequote: false
            skipinitialspace: false
            quoting: false
            columntypes: false
            rowspec: false
            decimal_separator: false
            group_separator: false
        def `from_dict`:
            encoding: false
            delimiter: false
            quotechar: false
            doublequote: false
            quoting: false
            skipinitialspace: false
            columntypes: false
            rowspec: false
            decimal_separator: false
            .: ","
            group_separator: false
        def `spec_as_encodable`:
            start: false
            stop: false
            value: false
        def `spec_from_encodable`:
            start: false
            stop: false
            value: false
    class `CSVImportDialog`:
        def `__init__`:
            dialog-button-box: false
        def `options`:
            decimal: false
            group: false
        def `restoreDefaults`:
            utf-8: false
        def `__update_preview`:
            rb: false
    def `dialog_button_box_set_enabled`:
        __p_dialog_button_box_set_enabled: false
    class `VarPathItem`:
        def `data`:
            ${{{vpath.name}}}/{vpath.relpath}: true
            ' (missing)': ' (ne obstaja)'
    class `ImportItem`:
        def `fromPath`:
            ImportItem: false
            ${{{path.name}}}/{path.relpath}: true
    text/csv: false
    Text - comma separated: Besedilo - stolpci ločeni z vejicami
    '*.csv': false
    '*': false
    text/tab-separated-values: false
    Text - tab separated: Besedilo - stolpci ločeni s tabulatorji
    '*.tsv': false
    text/plain: false
    Text - all files: Vse besedilne datoteke
    '*.txt': false
    class `FileDialog`:
        def `filterStr`:
            '{f.name} ({'', ''.join(f.globs)})': true
    def `default_options_for_mime_type`:
        text/csv: false
        text/tab-separated-values: false
        utf-8: false
        utf-16: false
        iso8859-1: iso8859-2
    class `OWCSVFileImport`:
        CSV File Import: Uvoz datoteke CSV
        Import a data table from a CSV formatted file.: Prebere podatkovno tabelo v obliki CSV
        icons/CSVFile.svg: false
        Data: true
        file: datoteka
        load: nalaganje
        read: branje
        open: odpri
        csv: true
        class `Outputs`:
            Data: Podatki
            Loaded data set.: Prebrani podatki.
            Data Frame: Podatkovni okvir
        class `Error`:
            Unexpected error: Nepričakovana napaka
            Encoding error\n: Napaka v kodiranju besedila
            'The file might be encoded in an unsupported encoding or it ': 'Datoteka uporablja nepodprto kodiranje, '
            might be binary: 'morda pa je binarna'
        directory: false
        filter: false
        def `__init__`:
            'File:': 'Datoteka:'
            recent-combo: falsed
            Recent files.: Nedavne datoteke.
            Recent files…: Nedavne datoteke…
            …: true
            Browse filesystem: Izberi datoteko
            Import any file…: Uvozi poljubno datoteko…
            Import relative to workflow file…: Uvozi poljubno datoteko…
            Import a file within the workflow file directory: Uvozi datoteko v mapi s trenutnim delotokom
            basedir: false
            Info: true
            Load: Naloži
            Import Options…: Nastavitve branja…
            'button-layout: {:d};': false
        def `workflowEnvChanged`:
            basedir: false
        def `_browse_for_missing`:
            def `accepted`:
                text/plain: false
        def `_browse_dialog`:
            Open Data File: Odpri datoteko s podatki
            directory: false
            filter: false
            def `store_state`:
                directory: false
                filter: false
        def `_might_be_binary_mb`:
            The '{basename}' may be a binary file.\n: "'{basename}' je najbrž binarna datoteka.\\n"
            Are you sure you want to continue?: Vseeno nadaljujem?
        def `_path_must_be_relative_mb`:
            Invalid path: Napačna mapa
            Selected path is not within '{prefix}': Mapa mora biti znotraj '{prefix}'
        def `browse`:
            text/plain: false
            Import Options: Nastavitve branja
        def `_activate_import_dialog`:
            Import Options: Nastavitve branja
            size: false
            def `store_size`:
                size: false
        path: false
        options: false
        def `_local_settings`:
            '{}.ini': false
        def `_note_recent`:
            recent: false
            path: false
            options: false
        def `__set_read_progress`:
            qint64: false
        def `cancel`:
            Cancelled: Prekinjeno
            <div>Cancelled<br/><small>Press 'Reload' to try again</small></div>: <div>Prekinjeno<br/><small>Pritisni 'Naloži ponovno', da ponovim poskus</small></div>
        def `__set_running_state`:
            Running: V teku
            Restart: Ponovno
            '<div>Loading: <i>{}</i><br/>': '<div>Branje: <i>{}</i><br/>'
        def `__clear_running_state`:
            Reload: Naloži ponovno
        def `__set_error_state`:
            '<div><i>{basename}</i> was not loaded due to a text encoding ': 'Datoteke <div><i>{basename}</i> ne morem prebrati, ker je shranjena v neznanem'
            'error. The file might be saved in an unknown or invalid ': kodiranju ali pa je binarna.
            encoding, or it might be a binary file.</div>: </div>
            '<div><i>{basename}</i> was not loaded due to an error:': 'Datoteke <div><i>{basename}</i> ne morem prebrati:'
            '<p style=''white-space: pre;''>{err}</p>': true
        def `_update_status_messages`:
            "{n_instances} {pl(n_instances, 'row')}, ": "{n_instances} {plsi(n_instances, 'vrstica')}, "
            "{n_features} {pl(n_features, 'feature')}, ": "{n_features} {plsi(n_features, 'spremenljivka')}, "
            "{n_meta} {pl(n_meta, 'meta')}": "{n_meta} meta {plsi(n_meta, 'spremenljivka')}"
        def `itemsFromSettings`:
            recent: false
            path: false
            options: false
            Could not reconstruct options for '%s': false
        def `_replacements`:
            basedir: false
        def `_restoreState`:
            Failed to restore '%s': false
        def `migrate_settings`:
            compatibility_mode: false
            _session_items: false
            _session_items_v2: false
    def `sniff_csv_with_path`:
        utf-8: false
        rt: false
    def `_open`:
        r: false
        rb: false
        rt: false
        .gz: false
        .bz2: false
        .xz: false
        .zip: false
        t: false
        Expected a single file in the archive.: Pričakujem arhiv z eno samo datoteko.
    application/gzip: false
    application/zip: false
    application/x-xz: false
    application/x-bzip: false
    def `_mime_type_for_path`:
        rb: false
    '?': false
    .: false
    '~': false
    nan: false
    NAN: false
    NaN: false
    N/A: false
    n/a: false
    NA: false
    NaT: false
    NAT: false
    def `load_csv`:
        def `dtype`:
            float: false
            category: false
            object: false
        X.: false
        .: ","
        decimal: false
        thousands: false
        float_precision: false
        high: false
        round_trip: false
        rb: false
        read: false
    def `guess_data_type`:
        category: false
    class `TaskState`:
        qint64: false
    def `pandas_to_table`:
        str: false
        M8[ns]: false
        'Column ''{}'' with dtype: {} skipped.': false
    __main__: false
widgets/data/owdatainfo.py:
    class `OWDataInfo`:
        Data Info: Podatki o tabeli
        orange.widgets.data.info: false
        Display basic information about the data set: Pokaže osnovne podatke o tabeli.
        icons/DataInfo.svg: false
        Data: false
        information: podatki
        inspect: pregled
        class `Inputs`:
            Data: Podatki
        def `__init__`:
            Data table properties: Lastnosti tabele
            Additional attributes: Dodatni podatki
        def `data`:
            Name: Ime
            Location: Lokacija
            Size: Velikost
            Features: Značilke
            Targets: Ciljne spremenljivke
            Metas: Meta atributi
            def `set_exact_length`:
                Size: Velikost
        def `update_info`:
            ? "<style>\n                       th { text-align: right; vertical-align:\
                \ top; }\n                       th, td { padding-top: 4px; line-height:\
                \ 125%}\n                    </style>"
            : false
            def `dict_as_table`:
                <table>: false
                '<tr><th>{label}: </th><td>': false
                <br/>: false
                </td></tr>: false
                </table>: false
            No data.: Ni podatkov.
        def `send_report`:
            Data table properties: Lastnosti tabele
            Additional attributes: Dodatni podatki
        def `_p_name`:
            name: false
            '-': true
        def `_p_location`:
            ' ': false
            '{key}={value}': false
            password: false
            SQL Table using connection:<br/>{connection_string}: Tabels SQL s povezavo:<br/>{connection_string}
        def `_p_size`:
            '{n} {pl(n, ''row'')}': '{n} {plsi(n, ''vrstica'')}'
            ~{n} {pl(n, 'row')}: ~{n} {plsi(n, 'vrstica')}
            ', {ncols} {pl(ncols, ''column'')}': ', {ncols} {plsi(ncols, ''stolpec|stolpca|stolpci|stolpcev'')}'
            features: značilke
            meta attributes: meta atributi
            targets: ciljne spremenljivke
            ; sparse {', '.join(sparseness)}: ; redke matrike {', '.join(sparseness)}
        def `_p_targets`:
            numeric target variable: številska ciljna spremenljivka
            'categorical outcome with ': kategorična ciljna spremenljivka {plsi_sz(nclasses)}
            '{nclasses} {pl(nclasses, ''class|classes'')}': ' {z_besedo(nclasses, 6, ''m'')} {plsi(nclasses, ''razredom|razredoma|razredi'')}'
            '{disc_class} categorical {pl(disc_class, ''target'')}': ' {z_besedo(disc_class, 1, ''f'')} {plsi(disc_class, ''|kategorični ciljni spremenljivki|kategorične ciljne spremenljivke|kategoričnih ciljnih spremenljivk'')}'
            '{cont_class} numeric {pl(cont_class, ''target'')}': ' {z_besedo(cont_class, 1, ''f'')} {plsi(cont_class, ''|številski ciljni spremenljivki|številske ciljne spremenljivke|številskih ciljnih spremenljivk'')}'
            multi-target data,<br/>: več ciljnih spremenljivk,<br/>
        def `_pack_var_counts`:
            categorical: kategorične
            numeric: numerične
            text: besedilna
            ', ': false
            '{count} {name}': '{name}: {count}'
    __main__: false
    heart_disease: false
widgets/data/owdatasampler.py:
    class `OWDataSampler`:
        Data Sampler: Vzorčenje
        'Randomly draw a subset of data points ': "Naključni vzorec "
        from the input dataset.: iz vhodne tabele.
        icons/DataSampler.svg: false
        Transform: false
        random: naključno
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data Sample: Vzorec podatkov
            Remaining Data: Preostali podatki
        class `Information`:
            Compatibility mode\n: Združljivostni način\n
            New versions of widget have swapped outputs for cross validation: Nova različica gradnika ima zamenjane izhode pri prečnem preverjanju
        class `Warning`:
            Stratification failed\n{}: Stratifikacija ni uspela.\n{}
            Sample is bigger than input: Zahtevani vzorec presega število primerov.
        class `Error`:
            Number of subsets exceeds data size: Zahtevano število podmnožic presega število primerov.
            Sample can't be larger than data: Vzorec ne more imeti več primerov, kot jih je na voljo v vhodni tabeli.
            Data is too small to stratify: Podatkov ni dovolj za stratifikacijo.
            Dataset is empty: Tabela podatkov je prazna.
        def `__init__`:
            Sampling Type: Vrsta vzorčenja
            sampling_type: false
            'Fixed proportion of data:': "Predpisani delež podatkov:"
            sampleSizePercentage: false
            '%d %%': true
            Fixed sample size: "Predpisana velikost vzorca:"
            sampleSizeNumber: false
            'Instances: ': "Število primerov: "
            replacement: false
            Sample with replacement: "Vzorči s ponavljanjem: "
            Cross validation: Prečno preverjanje
            'Number of subsets:': 'Število podmnožic:'
            number_of_folds: false
            selectedFold: false
            'Unused subset:': 'Neuporabljena podmnožica:'
            'Selected subset:': 'Izbrana podmnožica:'
            Bootstrap: Zankanje (bootstrap)
            'Time:': 'Čas:'
            sampleSizeSqlTime: false
            ' sec': ' sek'
            Percentage: Delež
            sampleSizeSqlPercentage: false
            ' %': false
            Options: Možnosti
            use_seed: false
            Replicable (deterministic) sampling: Ponovljivo vzorčenje
            stratify: false
            Stratify sample (when possible): Stratificiraj (če je možno)
            sql_dl: false
            Download data to local memory: Preberi podatke v pomnilnik
            Sample Data: Vzorči
        def `send_report`:
            "Random sample with {self.sampleSizePercentage} % of data": "Naključen vzorec {plsi_sz(self.sampleSizePercentage)} {self.sampleSizePercentage} % podatkov"
            Random data instance: Naključen primer iz podatkov
            "Random sample with {self.sampleSizeNumber} data instances": "Naključen vzorec {plsi_sz(self.sampleSizeNumber)} {self.sampleSizeNumber} {plsi(self.sampleSizeNumber, 'primerom|primeroma|primeri')}"
            ', with replacement': ', s ponavljanjem'
            '{self.number_of_folds}-fold cross-validation ': "{self.number_of_folds}-kratno prečno preverjanje "
            'without subset #{self.selectedFold}': "brez podmnožice #{self.selectedFold}"
            Bootstrap: Zankanje
            ', stratified (if possible)': ", stratificirano (če je možno)"
            ', deterministic': ", ponovljivo"
            Sampling type: Vrsta vzorčenja
            Input: Vhod
            "{len(self.data)} {pl(len(self.data), 'instance')}": "{len(self.data)} {plsi(len(self.data), 'primer')}"
            Sample: Vzorec
            "{self.sampled_instances} {pl(self.sampled_instances, 'instance')}": "{self.sampled_instances} {plsi(self.sampled_instances, 'primer')}"
            Remaining: Preostali
            "{self.remaining_instances} {pl(self.remaining_instances, 'instance')}": "{self.remaining_instances} {plsi(self.remaining_instances, 'primer')}"
        def `migrate_settings`:
            sampling_type: false
            compatibility_mode: false
    __main__: false
    iris: false
widgets/data/owdatasets.py:
    def `format_exception`:
        \n: false
    class `OWDataSets`:
        Datasets: Zbirke podatkov
        Load a dataset from an online repository: Naloži podatke s spletnega skladišča
        icons/DataSets.svg: false
        orangecontrib.prototypes.widgets.owdatasets.OWDataSets: false
        online: true
        data sets: true
        https://datasets.biolab.si/: false
        datasets: false
        islocal: false
        label: false
        title: false
        Title: Ime
        size: false
        Size: Velikost
        instances: false
        Instances: Primerov
        variables: false
        Variables: Spremenljivke
        target: false
        Target: Ciljna spr.
        tags: false
        Tags: Oznake
        class `Error`:
            Could not fetch dataset list: Ne morem prebrati seznama
        class `Warning`:
            'Could not fetch datasets list, only local ': Ne morem prebrati seznama, kažem
            cached datasets are shown: le lokalno shranjene podatke
        class `Outputs`:
            Data: Podatki
        def `__init__`:
            label: false
            _header_index: false
            Search for data set ...: Poišči podatke ...
            Press Return or double-click to send: Pritisni Enter ali dvoklikni za izbor
            Description: Opis
            splitter_state: false
            Initializing: Zaganjam
        def `_parse_info`:
            version: false
        def `create_model`:
            ' ': false
            ', ': true
        def `__set_index`:
            Error while fetching updated index: false
            X: true
            '888 bytes ': '888 bajtov '
            '9999.9 MB ': true
            '100000000': false
            '1000000': false
        def `__update_cached_state`:
            ' ': false
        def `commit`:
            Fetching...: Pobiram...
        def `__commit_complete`:
            'Error:': 'Napaka:'
    def `variable_icon`:
        categorical: false
        x: false
        numeric: false
    def `make_html_list`:
        '"margin: 5px; text-indent: -40px; margin-left: 40px;"': false
        def `format_item`:
            <p style={}><small>{}</small></p>: false
        \n: false
    def `description_html`:
        ' ({})': true
        ', from {}': ', z {}'
        <b>{}</b>{}{}: true
        <p>{}</p>: true
        <small><b>See Also</b>\n: <small><b>Glej tudi</b>\n
        </small>: true
        <small><b>References</b>\n: <small><b>Viri</b>\n
        \n: true
    __main__: false
widgets/data/owdiscretize.py:
    \s*,\s*: true
    year: leto|leti|leta|let
    month: mesec|meseca|meseci|mesecev
    day: dan|dneva|dnevi|dni
    week: teden|tedna|tedni|tednov
    hour: ura
    minute: minuta
    second: sekunda
    invalid width: nepravilna širina
    too many intervals: preveč intervalov
    def `_fixed_width_discretization`:
        .: true
    def `_mdl_discretization`:
        no discrete class: razred ni kategoričen
    def `_custom_discretization`:
        invalid cuts: nepravilne meje
    Use default setting: Uporabi privzeto nastavitev
    default: privzeto
    Treat the variable as defined in 'default setting': Obravnavaj spremenljivko po določeni privzeti metodi
    Keep numeric: Ohrani številsko
    keep: ohrani
    Keep the variable as is: Pusti spremenljivko tako, kot je
    Entropy vs. MDL: Entropija proti MDL
    entropy: entropija
    Split values until MDL exceeds the entropy (Fayyad-Irani)\n: Deli, dokler je zmanjšanje entropije večje od MDL (Fayyad-Irani)\n
    (requires discrete class variable): (zahteva kategorično ciljno spremenljivko)
    'Equal frequency, intervals: ': 'Enaka pogostost, št. intervalov: '
    equal freq, k={}: pogostost, k={}
    Create bins with same number of instances: Določi intervale z enakim številom primerov
    freq_spin: false
    'Equal width, intervals: ': 'Enaka širina, št. intervalov'
    equal width, k={}: širina, k={}
    Create bins of the same width: Sestavi intervale enake širine
    width_spin: false
    Remove: Odstrani
    remove: odstrani
    Remove variable: Odstrani spremenljivko
    'Natural binning, desired bins: ': 'Naravni intervali, želeno število: '
    binning, desired={}: naravni, število={}
    'Create bins with nice thresholds; ': 'Sestavi intervale z lepimi mejami; '
    try matching desired number of bins: 'število intervalov je čim bližje želenemu'
    binning_spin: false
    'Fixed width: ': 'Določena širina: '
    fixed width {}: širina {}
    Create bins with the given width (not for time variables): Sestavi intervale določene širine
    width_line: false
    'Time interval: ': 'Časovni interval: '
    time interval, {} {}: čas, {} {}
    Create bins with the give width (for time variables): Sestavi intervale z določeno širino (za časovne spremenljivke)
    width_time_line: false
    width_time_unit: false
    'Custom: ': 'Ročno: '
    'custom: {}': 'ročno: {}'
    Use manually specified thresholds: Uporabi ročno določene meje
    threshold_line: false
    def `format_desc`:
        "{time_units[unit]}(s)": "{plsi(1, time_units[unit])}"
        "{pl(width, time_units[unit])}": "{plsi(width, time_units[unit])}"
    class `DiscDomainModel`:
        def `data`:
            '<b>{var.name}: </b>': false
            <p style="white-space:pre">{tip}: false
            '{",&nbsp;&nbsp;".join(values)}</p>': false
            <br/>: false
            '- {value}<br/>': false
            ' ({format_desc(hint)}){points}': false
    class `DefaultDiscModel`:
        def `__init__`:
            ★: true
        def `data`:
            'Default setting: ': 'Privzeta nastavitev: '
            Default setting for variables without specific setings: Privzeta metoda za spremenljivke brez specifičnih nastavitev
    class `IncreasingNumbersListValidator`:
        def `validate`:
            +-., 0123456789: false
            ' ': false
            ', ': true
        def `show_tip`:
            ::show_tip_qlabel: false
            tip-label: false
            QTipLabel: false
            hide-timer: false
    DState: false
    method: false
    points: false
    disc_var: false
    Default: false
    Leave: false
    MDL: false
    EqualFreq: false
    k: false
    EqualWidth: false
    Custom: false
    class `OWDiscretize`:
        Discretize: Diskretizacija
        Discretize numeric variables: Diskretizacija številskih spremenljivk
        Transform: false
        icons/Discretize.svg: false
        bin: kategorije
        categorical: intervali
        nominal: številske
        ordinal: ordinalne
        class `Inputs`:
            Data: Podatki
            Input data table: Vhodni podatki
        class `Outputs`:
            Data: Podatki
            Table with categorical features: Tabela z diskretnimi spremenljivkami
        def `__init__`:
            autosend: false
        def `_create_buttons`:
            def `manual_cut_editline`:
                e.g. 0.0, 0.5, 1.0: npr. 0.0, 0.5, 1.0
                <p style="white-space:pre">: null
                Enter cut points as a comma-separate list of \n: null
                strictly increasing numbers e.g. 0.0, 0.5, 1.0).</p>: null
            "{unit}(s)": "{plsi(1, unit)}"
            CC: KP
            Copy the current cut points to manual mode: Uporabi trenutne vrednosti kot ročno nastavitev
        def `_update_discretizations`:
            values: false
        def `_discretize_var`:
            ': <keep, time var>': ": <ohrani, časovna>"
            ': <keep, not time>': ": <ohrani, ni časovna>"
            ' <{dvar}>': false
            ' <removed>': ' <odstranjena>'
            ': ': true
            ', ': true
        def `_copy_to_manual`:
            ', ': true
        def `send_report`:
            ': ': true
            '{name} ({format_desc(desc.hint)})': false
            ', ': true
            Variables: Spremenljivke
        def `migrate_settings`:
            default_method: false
            default_method_name: false
            default_k: false
            default_cutpoints: false
            context_settings: false
            saved_var_states: false
            Leave: false
            Keep: false
            Default: false
            Custom: false
            ', ': false
            '{x:g}': false
            var_hints: false
    __main__: false
    heart_disease: false
widgets/data/oweditdomain.py:
    V: false
    H: false
    class `_DataType`:
        def `name_type`:
            Categorical: false
            Real: false
            Time: false
            String: false
    class `Categorical`:
        Categorical: false
        name: false
        categories: false
        annotations: false
        linked: false
    class `Real`:
        Real: false
        name: false
        format: false
        annotations: false
        linked: false
    class `String`:
        String: false
        name: false
        annotations: false
        linked: false
    class `Time`:
        Time: false
        name: false
        annotations: false
        linked: false
    class `Rename`:
        Rename: false
        name: false
    class `CategoriesMapping`:
        CategoriesMapping: false
        mapping: false
    class `Annotate`:
        Annotate: false
        annotations: false
    class `Unlink`:
        Unlink: false
    class `StrpTime`:
        StrpTime: false
        label: false
        formats: false
        have_date: false
        have_time: false
    class `CategoricalVector`:
        CategoricalVector: false
        vtype: false
        data: false
    class `RealVector`:
        RealVector: false
        vtype: false
        data: false
    class `StringVector`:
        StringVector: false
        vtype: false
        data: false
    class `TimeVector`:
        TimeVector: false
        vtype: false
        data: false
    class `AsString`:
        AsString: false
    class `AsContinuous`:
        AsContinuous: false
        def `__call__`:
            g: false
    class `AsCategorical`:
        AsCategorical: false
    class `AsTime`:
        AsTime: false
        def `__call__`:
            M8[us]: false
            def `data`:
                coerce: false
                M8[us]: false
    def `formatter_for_dtype`:
        __formatter: false
    def `masked_unique`:
        O: false
        masked value if present must be in last position: false
    def `categorical_from_vector`:
        __formater: false
        '?': false
    def `categorize_unique`:
        masked value if present must be last: false
    class `DictItemsModel`:
        def `__init__`:
            Key: Ime oznake
            Value: Vrednost
    class `VariableEditor`:
        def `__init__`:
            editor-form-layout: false
            name-editor: false
            'Name:': "Ime:"
            Unlink variable from its source variable: "Prekini povezavo z izvorno spremenljivko"
            'Make Orange forget that the variable is derived from ': 'S tem bo Orange "pozabil", da je spremenljivka\n'
            another.\n: 'izračunana iz vrednosti neke druge spremenljivke.\n'
            'Use this for instance when you want to consider variables ': 'To lahko uporabimo, da, na primer, dosežemo, da bo\n'
            'with the same name but from different sources as the same ': 'dve enako poimenovani spremenljivki iz različnih virov\n'
            variable.: obravnaval kot isto spremenljivko.
            annotation-pairs-edit: false
            annotate-action-group: false
            +: true
            action-add-label: false
            Add a new label.: Dodaj novo oznako.
            \N{MINUS SIGN}: true
            action-delete-label: false
            Remove selected label.: Odstrani izbrano oznako.
            Add: Dodaj
            Remove: Odstrani
            'Labels:': 'Oznake:'
    class `GroupItemsDialog`:
        other: ostalo
        def `__init__`:
            Group selected values: Združi izbrane vrednosti
            Group values with less than: Združi vrednosti z manj kot
            Group all except: Združi vse vrednosti, razen
            selected_radio: false
            occurrences: pojavitvami
            most frequent values: najpogostejših
            frequent_abs_spin: false
            X: false
            frequent_rel_spin: false
            ' %': true
            n_values_spin: false
            'New value name: ': 'Ime nove vrednosti: '
            name_line_edit: false
            dialog-button-box: false
        def `get_dialog_settings`:
            frequent_abs_spin: false
            frequent_rel_spin: false
            n_values_spin: false
            name_line_edit: false
            selected_radio: false
    class `CountedListModel`:
        def `__counts`:
            key value '{key}' is not hashable: false
    class `CategoriesEditDelegate`:
        def `initStyleOption`:
            (dropped): (odstranjeno)
            (added): (dodano)
            '{sourcename} \N{RIGHTWARDS ARROW} {text}': false
            (merged): (združeno)
            ' ': false
        def `createEditor`:
            QStyleOptionViewItem: false
        def `updateEditorGeometry`:
            QStyleOptionViewItem: false
    class `DiscreteVariableEditor`:
        def `__init__`:
            action-group-categories: false
            Move up: Pomakni višje
            \N{UPWARDS ARROW}: true
            Move the selected item up.: Pomakni izbrano vrednost višje.
            Move down: Premakni nižje
            \N{DOWNWARDS ARROW}: true
            Move the selected item down.: Premakni izbrano vrednost nižje.
            Add: Dodaj
            +: true
            action-add-item: false
            Append a new item.: Dodaj novo vrednost
            Remove item: Odstrani vrednost
            \N{MINUS SIGN}: true
            action-remove-item: false
            Delete the selected item.: Odstrani izbrano vrednost
            Rename selected items: Preimenuj izbrane vrednosti
            '=': true
            action-rename-selected-items: false
            Rename selected items.: Preimenuj izbrane vrednosti.
            Merge: Združi
            M: Z
            action-activate-merge-dialog: false
            Merge infrequent items.: Združi redkejše vrednosti
            Remove: Odstrani
            Merge selected items: Združi izbrane vrednosti
            Merge infrequent: Združi redke
            'Values:': 'Vrednosti:'
        def `set_data_categorical`:
            'invalid mapping: {!r}': false
        def `get_data`:
            '{mapping}, {var}': false
        def `_remove_category`:
            invalid state '{}' for {}: false
        def `_merge_categories`:
            Import Options: Združevanje
    class `TimeVariableEditor`:
        def `__init__`:
            Detect automatically: Zaznaj samodejno
            'Format:': 'Oblika:'
    class `VariableEditDelegate`:
        categorical: kategorično
        numeric: številsko
        string: besedilno
        time: časovno
        def `initStyleOption`:
            '{} \N{RIGHTWARDS ARROW} {}': false
            ' (reinterpreted as ': ' (pretolmačena v '
            '{self.ReinterpretNames[type(tr)]})': true
        def `helpEvent`:
            Name `{name}` is duplicated: "Ime '{ime}' je podvojeno."
    class `ReinterpretVariableEditor`:
        def `__init__`:
            def `decorate`:
                type-combo: false
                Categorical: Kategorična
                Numeric: Številska
                Text: Besedilna
                Time: Časovna
                'Type:': "Vrsta:"
        def `set_data`:
            type-combo: false
        def `__reinterpret_activated`:
            type-combo: false
    class `OWEditDomain`:
        Edit Domain: Uredi domeno
        Rename variables, edit categories and variable annotations.: Preimenuj spremenljivke, uredi kategorije in oznake
        icons/EditDomain.svg: false
        rename: preimenuj
        drop: odstrani
        reorder: preuredi
        order: uredi
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        class `Error`:
            A variable name is duplicated.: Ime spremenljivke je podvojeno.
        def `__init__`:
            Variables: Spremenljivke
            Edit: Uredi
            output_table_name: false
            'Output table name: ': 'Ime izhodne tabele:'
            Reset All: Povrni vse
            button-reset-all: false
            Reset all variables to their input state.: Povrni vse vrednosti v začetno stanje.
            Reset Selected: Povrni izbrane
            button-reset: false
            Rest selected variable to its input state.: Povrni izbrane spremenljivke v začetno stanje.
            Apply: Potrdi
            button-apply: false
            Apply changes and commit data on output.: Potrdi spremembe in pošlji podatke na izhod.
        def `_restore_transform`:
            'Failed to restore transform: {}, {!r}': false
        def `_set_modified`:
            button-apply: false
        def `send_report`:
            <ul>: false
            <li>{}</li>: false
            </ul>: false
            No changes: Ni sprememb
        def `migrate_context`:
            domain_change_hints: false
            Orange.data.variable: false
            DiscreteVariable: false
            Categorical: false
            TimeVariable: false
            Time: false
            ContinuousVariable: false
            Real: false
            f: false
            StringVariable: false
            String: false
            _domain_change_store: false
    def `enumerate_columns`:
        x: false
        y: false
        m: false
    def `table_column_data`:
        M8[us]: false
        __formatter: false
        '?': false
    def `report_transform`:
        C: false
        N: false
        S: false
        T: false
        def `type_char`:
            '?': false
        def `strike`:
            <s>{}</s>: false
        def `i`:
            <i>{}</i>: false
        def `text`:
            <span>{}</span>: false
        '{} → ({}) {}': false
        '{} → {}': false
        (unlinked from source): (odvezana od vira)
        Values: Vrednosti
        '&nbsp;': false
        (added): (dodana)
        ' → ': false
        Labels: Oznake
        <s>: true
        ' : ': true
        </s>: true
        (new): (nova)
        '<div style=''font-weight: bold;''>{}</div>': false
        <div>{}:</div>: false
        <br/>\n: false
        '<div style=''padding-left: 1em;''>': false
        </div>: false
        \n: false
    def `abstract`:
        f: false
    def `_parse_attributes`:
        '{}={}': false
    nan: false
    def `as_float_or_nan`:
        unsafe: false
    def `datetime_to_epoch`:
        '1970-01-01': false
        1s: false
    class `ReparseTimeTransform`:
        def `transform`:
            coerce: false
    def `column_str_repr_discrete`:
        '?': false
    def `column_str_repr_string`:
        '?': false
    __main__: false
    iris: false
widgets/data/owfeatureconstructor.py:
    FeatureDescriptor: false
    name: false
    expression: false
    ContinuousDescriptor: false
    number_of_decimals: false
    DateTimeDescriptor: false
    DiscreteDescriptor: false
    values: false
    ordered: false
    StringDescriptor: false
    def `selected_row`:
        invalid 'selectionMode': false
    class `FeatureEditor`:
        ? '

            Use variable names as values in expression.

            Categorical features are passed as strings

            (note the change in behaviour from Orange 3.30).


            '
        : "V izrazu lahko uporabite imena spremenljivk.\n
           Vrednosti kategoričnih spremenljivk so nizi.\n
        "
        _: false
        str: false
        float: false
        int: false
        len: false
        abs: false
        max: false
        min: false
        def `__init__`:
            Name...: Ime...
            Expression...: Izraz...
            Select Feature: Izberi spremenljivko
            Select Function: Izberi funkcijo
        def `setEditorData`:
            Select Feature: Izberi spremenljivko
        def `on_funcs_changed`:
            atan2: false
            fmod: false
            ldexp: false
            log: false
            pow: false
            copysign: false
            hypot: false
            (,): false
            e: false
            pi: false
            (): false
    class `ContinuousFeatureEditor`:
        A numeric expression\n\n: Številski izraz\n\n
    class `DateTimeFeatureEditor`:
        'Result must be a string in ISO-8601 format ': 'Rezultat mora biti niz v formatu ISO-8601 '
        (e.g. 2019-07-30T15:37:27 or a part thereof),\n: (npr. 2019-07-30T15:37:27 ali del tega),\n
        or a number of seconds since Jan 1, 1970.: ali število sekund od 1. januarja 1970
    class `DiscreteFeatureEditor`:
        Result must be a string, if values are not explicitly given\n: Če vrednosti niso eksplicitno podane spodaj, mora biti rezultat niz,
        or a zero-based integer indices into a list of values given below.: sicer pa indeks elementa v spodnjem seznamu (začenši z 0).
        def `__init__`:
            'If values are given, above expression must return zero-based ': 'Če so vrednosti podane, mora biti rezultat izraza '
            integer indices into that list.: indeks elementa v te seznamu (začenši z 0).
            A, B ...: true
            Values (optional): Vrednosti (opcijsko)
        def `setEditorData`:
            ', ': false
            ',': false
            \,: false
        def `editorData`:
            (?<!\\),: false
            \,: false
            ',': false
    class `StringFeatureEditor`:
        A string expression\n\n: Izraz, katerega rezultat je niz\n\n
    d: false
    c: false
    t: false
    s: false
    class `FeatureItemDelegate`:
        def `displayText`:
            ' := ': false
    class `FeatureConstructorHandler`:
        def `is_valid_item`:
            eval: false
            __GLOBALS: false
    class `OWFeatureConstructor`:
        Feature Constructor: Sestavi značilke
        'Construct new features (data columns) from a set of ': Sestavi nove značilke, izračunane
        existing features in the input dataset.: iz obstoječih.
        #Med , med frazami ne najdem vrstice za META ATTRIBUTE. Ne najdem tudi vrstice za prevod. 
        Transform: false
        icons/FeatureConstructor.svg: false
        function: funkcija
        lambda: formula
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        class `Error`:
            Categorical feature {} needs more values.: Kategorična spremenljivka {} potrebuje več vrednosti.
            'Invalid expressions: {}.': 'Nepravilen izraz: {}'
            '{}': false
        class `Warning`:
            'Recently added variable has been renamed, ': 'Nove spremenljivke so preimenovane '
            to avoid duplicates.\n: zaradi ponovljenih imen.
        def `__init__`:
            Variable Definitions: Definicije spremenljivk
            New: Nova
            Create a new variable: Sestavi novo spremenljivko
            Numeric: Številska
            X{}: true
            Categorical: Kategorična
            D{}: true
            Text: Besedilna
            S{}: true
            Date/Time: Datum/Čas
            T{}: true
            Duplicate Selected Variable: Podvoji izbrano spremenljivko
            Remove: Odstrani
            Remove selected variable: Odstrani izbrano spremenljivko
            Upgrade Expressions: Prenovi izraze
            Send: Pošlji
        def `_validate_descriptors`:
            def `validate`:
                eval: false
            ', ': false
        def `on_done`:
            Result: false
        def `send_report`:
            categorical: kategorična
            ' with values ': z vrednostmi
            ', ': false
            '''{val}''': false
            ; ordered: ; urejena
            numeric: številska
            date/time: datum/čas
            text: besedilna
            '{feature.expression} ({desc})': false
            Constructed feature{s}: Sestavljene spremenljivke
        def `fix_expressions`:
            Fix Expressions: Popravi izraze
            'This widget''s behaviour has changed. Values of categorical ': true
            'variables are now inserted as their textual representations ': true
            '(strings); previously they appeared as integer numbers, with an ': true
            attribute '.value' that contained the text.\n\n: true
            'The widget currently runs in compatibility mode. After ': true
            expressions are updated, manually check for their correctness.: true
            Update: true
            Cancel: true
            def `fixer`:
                .value: false
                '{': false
                ', ': false
                '''{val}'': {i}': false
                '}}[{var.name}]': false
            '|': false
            '{var.name}': false
            (^|\W)(: false
            )(\.value)?(\W|$): false
        def `migrate_context`:
            eval: false
            descriptors: false
            expressions_with_values: false
    def `validate_exp`:
        exp is not a 'ast.AST' instance: false
    def `sanitized_name`:
        \W: false
        _: false
    def `bind_variable`:
        nan: false
        eval: false
        NFKC: false
    _: false
    def `make_lambda`:
        __builtins__: false
        <lambda>: false
        eval: false
    Ellipsis: false
    'False': false
    None: false
    'True': false
    abs: false
    all: false
    any: false
    acsii: false
    bin: false
    bool: false
    bytearray: false
    bytes: false
    chr: false
    complex: false
    dict: false
    divmod: false
    enumerate: false
    filter: false
    float: false
    format: false
    frozenset: false
    getattr: false
    hasattr: false
    hash: false
    hex: false
    id: false
    int: false
    iter: false
    len: false
    list: false
    map: false
    memoryview: false
    next: false
    object: false
    oct: false
    ord: false
    pow: false
    range: false
    repr: false
    reversed: false
    round: false
    set: false
    slice: false
    sorted: false
    str: false
    tuple: false
    type: false
    zip: false
    normalvariate: false
    gauss: false
    expovariate: false
    gammavariate: false
    betavariate: false
    lognormvariate: false
    paretovariate: false
    vonmisesvariate: false
    weibullvariate: false
    triangular: false
    uniform: false
    nanmean: false
    nanmin: false
    nanmax: false
    nansum: false
    nanstd: false
    nanmedian: false
    nancumsum: false
    nancumprod: false
    nanargmax: false
    nanargmin: false
    nanvar: false
    mean: false
    min: false
    max: false
    sum: false
    std: false
    median: false
    cumsum: false
    cumprod: false
    argmax: false
    argmin: false
    var: false
    class `FeatureFunc`:
        DType: false
        def `__init__`:
            eval: false
        def `__repr__`:
            '{0.__name__}{1!r}': false
    __main__: false
    iris: false
widgets/data/owfeaturestatistics.py:
    def `format_time_diff`:
        ~{years} years: ~{years} {plsi(years, "leto|leti|leta|let")}
        ~{months} months: ~{months} {plsi(months, "mesec|meseca|meseci|mesecev")}
        ~{weeks} weeks: ~{weeks} {plsi(weeks, "teden|tedna|tedni|tednov")}
        ~{days} days: ~{days} {plsi(days, "dan|dneva|dnevi|dni")}
        ~{hours} hours: ~{hours} {plsi(hours, "ura|uri|ure|ur")}
        ~{minutes} minutes: ~{minutes} {plsi(minutes, "minuta")}
        '{seconds} seconds': ~{seconds} {plsi(seconds, "sekunda")}
    class `FeatureStatisticsTableModel`:
        class `Columns`:
            def `name`:
                Name: Ime
                Distribution: Porazdelitev
                Mean: Srednja vrednost
                Median: Mediana
                Mode: Najpogostejša
                Dispersion: Disperzija
                #Morda "razpršitev" - prevod disperzija se zdi nenavaden, ker za ostale izraze uporabljaš pristne slovenske inačice.
                Min.: Minimum
                # najnižja vrednost 
                Max.: Maksimum
                # najvišja vrednost
                Missing: Manjkajoči
                # Morda "manjkajoče"?
        def `__compute_statistics`:
            def `__mode`:
                C: false
        def `_sortColumnData`:
            Data should be at most 2-dimensional: false
        def `_argsortData`:
            stable: false
            'We do not deal with non numeric values in sorting by ': false
            multiple values: false
            Add an empty column of zeros at index -2 to accomodate NaNs: false
        def `data`:
            def `display`:
                def `format_zeros`:
                    '{0:.{num_decimals}f}': false
                def `render_value`:
                    ∞: false
                '#ccc': false
                '{self._dispersion[row]:.3g}': false
                '{missing} ({perc} %)': false
    class `OWFeatureStatistics`:
        Feature Statistics: Statistika spremenljivk
        Show basic statistics for data features.: Pokaže osnovno statistiko spremenljivk
        icons/FeatureStatistics.svg: false
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Reduced Data: Izbrani podatki
            # Kljub pregledu gradnika konteksta vseeno ne razumem povsem, a predlagam katerega od drugih izrazov, ki namigujejo na zmanjšanje, redukcijo in izbiro - "skrčeni", morda "okleščeni" podatki.
            Statistics: Statistika
        def `__init__`:
            None: Enobarvno
            color_var: false
            'Color:': 'Barva:'
            auto_commit: false
        def `commit`:
            Feature: Spremenljivka
            '{self.data.name} (Feature Statistics)': '{self.data.name} (Statistika)'
        def `migrate_context`:
            selected_rows: false
            selected_vars: false
    __main__: false
    iris: false
widgets/data/owfile.py:
    Automatically detect type: Samodejno zaznaj vrsto datoteke
    def `add_origin`:
        type: false
        origin: false
    class `OWFile`:
        File: Datoteka
        orange.widgets.data.file: false
        'Read data from an input file or network ': 'Preberi podatke iz datoteke ali
            omrežja'
        and send a data table to the output.: ''
        icons/File.svg: false
        Data: false
        file: datoteka
        load: naloži
        read: preberi
        open: odpri
        class `Outputs`:
            Data: Podatki
            Attribute-valued dataset read from the input file.: Podatki iz datoteke
                ali omrežja
        sample-datasets: false
        iris.tab: false
        titanic.tab: false
        housing.tab: false
        heart_disease.tab: false
        brown-selected.tab: false
        zoo.tab: false
        class `Information`:
            No file selected.: Datoteka ni izbrana.
        class `Warning`:
            The file is too large to load automatically.: Datoteka je prevelika za
                samodejno branje.
            ' Press Reload to load.': " Pritisni 'Ponovno naloži' za branje."
            Read warning:\n{}: Opozorilo ob branju:\n{}
            Categorical variables with >100 values may decrease performance.: Kategorične
                spremenljivke z veliko vrednostmi lahko upočasnijo delovanje.
            'Some variables have been renamed ': 'Spremenljivke s podvojenimi imeni so preimenovane.'
            to avoid duplicates.\n{}: \n{}
            Most widgets do not support multiple targets: Večina gradnikov ne podpira
                večih ciljnih spremenljivk.
        class `Error`:
            File not found.: Datoteka ni najdena.
            Missing reader.: Bralnik za ta tip ne obstaja.
            Error listing available sheets.: Napaka ob ustvarjanju seznama listov.
            Read error:\n{}: Napaka ob branju:\n{}
        'Use CSV File Import widget for advanced options ': 'Uporabi Bralnik CSV za
            napredne možnosti '
        for comma-separated files: za datoteke ločene z vejico
        use-csv-file-import: falxe
        'This widget loads only tabular data. Use other widgets to load ': 'Ta gradnik
            nalaga le tabelarične podatke. Uporabi druge gradnike za branje '
        other data types like models, distance matrices and networks.: drugih vrst
            podatkov, kot so modeli, matrike razdalj in mreže.
        other-data-types: false
        def `__init__`:
            read: false
            EXTENSIONS: false
            def `group_readers_per_addon_key`:
                def `package`:
                    .: false
                    Orange.data: false
                    '0': false
            Source: Vir
            source: false
            'File:': 'Datoteka:'
            '...': true
            Reload: Ponovno naloži
            Sheet: List
            'URL:': true
            File Type: Vrsta datoteke
            Info: true
            No data loaded.: Podatki niso naloženi.
            Columns (Double click to edit): Stolpci (dvoklikni za urejanje)
            Reset: Povrni
            Apply: Uveljavi
            Browse documentation datasets: Odpri podatke iz dokumentacije
        def `_url_set`:
            http://: false
        def `browse_file`:
            File: Datoteka
            Cannot find the directory with documentation datasets: Ne najdem mape
                s podatki iz dokumentacije
            ~/: false
        def `load_data`:
            No data.: Ni podatkov.
        def `_get_reader`:
            Can not find reader "{qname}": Bralnik "{qname}" ne obstaja.
        def `_describe`:
            def `missing_prop`:
                "({prop * 100:.1f}% missing values)": "({prop * 100:.1f}% manjkajočih vrednosti)"
                (no missing values): (ni manjkajočih vrednosti)
            attributes: false
            Name: Ime
            Description: Opis
            <b>{descs[0]}</b>: false
            <p>{'<br/>'.join(descs)}</p>: false
            <p>{len(table)} {pl(len(table), 'instance')}: <p>{len(table)} {plsi(len(table), 'primer')}
            <br/>{nattrs} {pl(nattrs, 'feature')} {missing_in_attr}: <br/>{nattrs} {plsi(nattrs, 'spremenljivka')} {missing_in_attr}
            <br/>Regression; numerical class {missing_in_class}: <br/>Regresija {missing_in_class}
            '<br/>Classification; categorical class ': '<br/>Klasifikacija: '
            "with {nvals} {pl(nvals, 'value')} {missing_in_class}": "{plsi_sz(nvals)} {nvals} {plsi(nvals, 'razredom|razredoma|razredi')} {missing_in_class}"
            '<br/>Multi-target; ': '<br/>Večrazredni; '
            "{ntargets} target {pl(ntargets, 'variable')}": "{ntargets} {plsi(ntargets, 'ciljna spremenljivka|ciljni spremenljivki|ciljne spremenljivke|ciljnih spremenljivk')}"
            '{missing_in_class}': true
            <br/>Data has no target variable.: <br/>Podatki nimajo ciljne spremenljivke.
            <br/>{nmetas} {pl(nmetas, 'meta attribute')}: <br/>{nmetas} {plsi(nmetas, 'meta spremenljivka')}
            </p>: false
            Timestamp: false
            '<p>First entry: {table[0, ''Timestamp'']}<br/>': '<p>Prvi vnos: {table[0,
                ''Timestamp'']}<br/>'
            'Last entry: {table[-1, ''Timestamp'']}</p>': 'Zadnji vnos: {table[-1,
                ''Timestamp'']}</p>'
        def `retrieveSpecificSettings`:
            modified_variables: false
        def `apply_domain_edit`:
            attributes: false
            'Renamed: {'', ''.join(renamed)}': 'Preimenovano: {'', ''.join(renamed)}'
        def `send_report`:
            def `get_ext_name`:
                unknown: neznan
            File: Datoteka
            No file.: Ni datoteke.
            '~': false
            /: false
            \\: false
            ' ({self.sheet_combo.currentText()})': false
            File name: Ime datoteke
            Format: Oblika
            Data: Podatki
            Resource: Vir
    class `OWFileDropHandler`:
        def `canDropUrl`:
            http: false
            https: false
            ftp: false
        def `parametersFromUrl`:
            recent_paths: false
            source: false
            recent_urls: false
    __main__: false
widgets/data/owgroupby.py:
    Aggregation: false
    function: false
    types: false
    def `concatenate`:
        ' ': false
    Mean: Povprečje
    mean: false
    Median: Mediana
    median: false
    Mode: Najpogostejša
    Standard deviation: Standardna deviacija
    std: false
    Variance: Varianca
    var: false
    Sum: Vsota
    sum: false
    Concatenate: Stakni
    Min. value: Najmanjša vrednost
    min: false
    Max. value: Največja vrednost
    max: false
    Span: Razpon
    First value: Prva vrednost
    first: false
    Last value: Zadnja vrednost
    last: false
    Random value: Naključna
    Count defined: Število znanih
    count: false
    Count: Velikost skupine
    size: false
    Proportion defined: Delež znanih
    def `_run`:
        Aggregating: Računam
    Attributes: Spremenljivke
    Aggregations: Funkcije
    class `VarTableModel`:
        def `__init__`:
            OWGroupBy: false
        def `data`:
            ' and {len(aggs) - 3} more': " in {len(aggs) - 3} {plsi(len(aggs) - 3, 'druga|drugi|druge|drugih')}"
            ', ': false
    class `OWGroupBy`:
        Group by: Združi po
        Transform: false
        icons/GroupBy.svg: false
        aggregate: agregiraj
        group by: skupine
        class `Inputs`:
            Data: Podatki
            Input data table: Tabela vhodnih podatkov
        class `Outputs`:
            Data: Podatki
            Aggregated data: Agregirani podatki
        class `Error`:
            '{}': false
        def `__init_control_area`:
            Group by: Združi po
            auto_commit: false
        def `__init_main_area`:
            ' ': false
            Aggregations: Funkcije
    __main__: false
    iris: false
widgets/data/owimpute.py:
    class `DisplayFormatDelegate`:
        def `initStyleOption`:
            method: false
    class `AsDefault`:
        Default (above): Privzeto (zgoraj)
        '{var.name}': false
    RowMask: false
    mask: false
    def `var_key`:
        '{}.{}': false
    class `OWImpute`:
        Impute: Nadomesti neznane vrednosti
        Impute missing values in the data table.: Nadomesti neznane vrednosti v podatkih
        icons/Impute.svg: false
        substitute: imputacija
        missing: manjkajoče
        Transform: false
        class `Inputs`:
            Data: Podatki
            Learner: Model
        class `Outputs`:
            Data: Podatki
        class `Error`:
            Imputation failed for '{}': Nadomeščanje za '{}' ni uspelo.
            Model based imputer does not work for sparse data: Nadomeščanje z modelom ne deluje za redke podatke.
        class `Warning`:
            Default method can not handle '{}': Privzeta metoda ne deluje za '{}'
        def `__init__`:
            Default Method: Privzeta metoda
            'Fixed values; numeric variables:': 'Privzeta vrednost; številske spremenljivke:'
            default_numeric_value: false
            ', time:': ", časovne:"
            default_time: false
            Individual Attribute Settings: 'Nastavitve za posamične spremenljivke'
            Restore All to Default: Nastavi vse na privzeto
            autocommit: false
        def `__commit_finish`:
            def `get_variable`:
                Error for %s: false
            def `create_data`:
                Error: false
                Unknown: false
        def `send_report`:
            '{} ({})': true
            Default method: Privzeta metoda
            Specific imputers: Posamične nastavitve
            ', ': true
            Method: Metoda
    def `__sample_data`:
        c{i}: true
        t{i}: true
    __main__: false
    brown-selected: false
widgets/data/owmelt.py:
    item: stvar
    value: vrednost
    row: vrstica
    class `MeltContextHandler`:
        def `match`:
            idvar: false
        def `encode_setting`:
            idvar: false
        def `decode_setting`:
            idvar: false
    class `OWMelt`:
        Melt: Raztopi
        Convert wide data to narrow data, a list of item-value pairs: Spremeni široke podatke v ozke, to je, seznam parov (stvar, vrednost)
        Transform: false
        icons/Melt.svg: false
        shopping list: nakupovalni seznam
        wide: širok
        narrow: ozek
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        class `Information`:
            No columns with unique values\n: Ni stolpcev z neponovljenimi vrednostmi.
            Only columns with unique valules are useful for row identifiers.: Kot identifikator vrstice so uporabni le stolpci, v katerih se vrednosti ne ponavljajo.
        def `__init__`:
            Unique Row Identifier: Identifikator vrstice
            Row number: Številka vrstice
            idvar: false
            A column with identifier, like customer's id: Stolpec z identifikatorjem, npr. številka nakupa
            #kupčeva številka. 
            Filter: true
            only_numeric: false
            Ignore non-numeric features: Uporabi le številske spremenljivke
            exclude_zeros: false
            Exclude zero values: Preskoči ničelne vrednosti
            Besides missing values, also omit items with zero values: Poleg neznanih vrednosti preskoči tudi stvari z vrednostjo 0.
            Names for generated features: Imena stolpcev v novih podatkih
            'Item:': 'Stvar:'
            item_var_name: false
            'padding-left: 3px': false
            'Value:': 'Vrednost:'
            value_var_name: false
        def `send_report`:
            Settings: Nastavitve
            Row identifier: Identifikator vrstice
            Ignore non-numeric features: Uporabi le številske vrednosti
            Exclude zero values: Preskoči ničelne vrednosti
            Output: Izhod
        def `_store_output_desc`:
            Item column: Stolpec s stvarjo
            # Število spremenljivk?
            #O prevodu "item" smo klepetali, Ela je predlagala to spremenljivko, jaz pa "postavko" za vse primere
            Value column: Stolpec z vrednostjo
            Number of items: Število stvari
    __main__: false
    zoo: false
widgets/data/owmergedata.py:
    Instance id: Identiteta vrstice
    Row index: Številka vrstice
    class `ConditionBox`:
        RowItems: false
        pre_label: false
        left_combo: false
        in_label: false
        right_combo: false
        remove_button: false
        def `add_row`:
            and: in
            ×: true
        def `add_plus_row`:
            +: true
    class `DomainModelWithTooltips`:
        def `data`:
            Match rows sequentially: Združi istoležne vrstice
            'Re-match rows from tables obtained from the same ': Združi vrstice, dobljene iz istega vira,
            source,\n: \n
            'e.g. data from the same file that was split within ': na primer iste datoteke, ki je bila razdeljena v delotoku.
            the workflow.: ''
    class `MergeDataContextHandler`:
        def `settings_from_widget`:
            attr_pairs: false
        def `settings_to_widget`:
            attr_pairs: false
        def `match`:
            attr_pairs: false
    class `OWMergeData`:
        Merge Data: Združi vrstice
        Merge datasets based on the values of selected features.: Združi tabele glede na vrednosti izbranih spremenljivk.
        Transform: false
        icons/MergeData.svg: false
        join: zlivanje
        class `Inputs`:
            Data: Podatki
            Data A: false
            Extra Data: Dodatni podatki
            Data B: false
        class `Outputs`:
            Data: Podatki
            Merged Data A+B: false
            Merged Data B+A: false
            Merged Data: false
        Append columns from Extra data: Dodaj podatke iz druge tabele
        Find matching pairs of rows: Sestavi pare vrstic, ki se ujemajo
        Concatenate tables: Zlij tabeli
        The first table may contain, for instance, city names,\n: Prva tabela vključuje stolpec z imeni mest,\n
        and the second would be a list of cities and their coordinates.\n: druga tabela pa so imena mest in njihove koordinate.\n
        Columns with coordinates would then be appended to the output.: Koordinate iz druge tabele bodo dodane v pripadajoče vrstice prve.
        'Input tables contain different features describing the same data ': Tabeli vsebujeta različne lastnosti istih primerov.\n
        instances.\n: ""
        Output contains matched instances. Rows without matches are removed.: Gradnik poišče pare, ki se ujemajo. Preostale zavrže.
        'Output contains all instances. Data from merged instances is ': Izhodni podatki vsebujejo vse primere.\n
        merged into single rows.: Ujemajoče se vrstice so združene.
        Confused about merging options?\nSee the tooltips!: Zbegani? Ne razumete izbir?\nObiščite jih z miško in preberite razlage!
        merging_types: false
        class `Warning`:
            'Some variables have been renamed ': Zaradi podvojenih imen so nekatere spremenljivke preimenovane.\n
            to avoid duplicates.\n{}: "{}"
        class `Error`:
            Numeric and non-numeric columns ({} and {}) cannot be matched.: Številskih in kategoričnih stolpcev ({} in {}) ni mogoče primerjati.
            Row index cannot be matched with {}.: Številke vrstice ni mogoče primerjati z {}.
            Instance cannot be matched with {}.: Identitete vrstice ni mogoče primerjati z {}.
            Some combinations of values on the left appear in multiple rows.\n: Nekatere kombinacije vrednosti na levi se pojavijo v več vrsticah.\n
            'For this type of merging, every possible combination of values ': Za to vrsto združevanja morajo biti vse kombinacije unikatne.
            on the left should appear at most once.: ""
            Some combinations of values on the right appear in multiple rows.: Nekatere kombinacije vrednosti na desni se pojavijo v več vrsticah.
            \n: true
            'Every possible combination of values on the right should appear ': Vsaka kombinacija vrednosti se sme pojaviti največ enkrat.
            at most once.: ""
        def `__init__`:
            merging: false
            Merging: Združevanje
            matches: se ujema z
            Row matching: Kriteriji za ujemanje vrstic
        def `send_report`:
            Merging: Združevanje
            Match: Ujemanje
            ', ': false
            '{self._get_col_name(left)} with {self._get_col_name(right)}': '{self._get_col_name(left)} (levo) in {self._get_col_name(right)} (desno)'
        def `_get_col_name`:
            '''{obj.name}''': false
        def `_join_table_by_indices`:
            name: false
            attributes: false
        def `_domain_rename_duplicates`:
            ', ': false
        def `migrate_settings`:
            def `mig_value`:
                Position (index): false
                Source position (index): false
            augment: false
            merge: false
            combine: false
            merging: false
            attr_pairs: false
            attr_{oper}_data: false
            attr_{oper}_extra: false
            context_settings: false
    __main__: false
    tests/data-gender-region: false
    tests/data-regions: false
widgets/data/owneighbors.py:
    Euclidean: Evklidska
    Manhattan: Manhattanska
    Mahalanobis: Mahalanobisova
    Cosine: Kosinusna
    Jaccard: Jaccardova
    Spearman: Spearmanova
    Absolute Spearman: Absolutna Spearmanova
    Pearson: Pearsonova
    Absolute Pearson: Absolutna Pearsonova
    class `OWNeighbors`:
        Neighbors: Sosedi
        Compute nearest neighbors in data according to reference.: Najbližji sosedi referenčnih primerov.
        # Manjka opisni del izvedbe dejanja - če prav razumem.
        # V si prevodu morda "Izvedba računa najbližjih sosedov referenčnih primerov" ali "Izračun najbližjih sosedov referenčnih primerov"
        icons/Neighbors.svg: false
        Unsupervised: false
        orangecontrib.prototypes.widgets.owneighbours.OWNeighbours: false
        class `Inputs`:
            Data: Podatki
            Reference: Referenčni podatki
        class `Outputs`:
            Neighbors: Sosedi
        class `Info`:
            Input data includes reference instance(s).\n: Vhodni podatki vključujejo referenčne primere.\n
            Reference instances are excluded from the output.: Referenčni primeri niso vključeni med izhodne.
        class `Warning`:
            Every data instance is same as some reference: Vsi podatki se pojavijo tudi med referenčnimi.
        class `Error`:
            Data and reference have different features: Podatki in referenčni podatki so opisani z različnimi značilkami.
        def `__init__`:
            distance_index: false
            'Distance metric: ': "Vrsta razdalje: "
            n_neighbors: false
            'Limit number of neighbors to:': "Omeji število sosedov na:"
            limit_neighbors: false
        def `_data_with_similarity`:
            distance: false
    __main__: false
    iris.tab: false
widgets/data/owoutliers.py:
    def `run`:
        Initializing...: null
    class `SVMEditor`:
        def `__init__`:
            'An upper bound on the fraction of training errors and a ': null
            lower bound of the fraction of support vectors: null
            'Nu:': null
            nu: null
            '%d %%': null
            gamma: null
            'Kernel coefficient:': null
        def `get_parameters`:
            nu: null
            gamma: null
    class `CovarianceEditor`:
        def `__init__`:
            'Contamination:': null
            cont: null
            '%d %%': null
            empirical_covariance: null
            'Support fraction:': null
            support_fraction: null
        def `get_parameters`:
            contamination: null
            support_fraction: null
    class `LocalOutlierFactorEditor`:
        euclidean: null
        manhattan: null
        cosine: null
        jaccard: null
        hamming: null
        minkowski: null
        def `__init__`:
            'Contamination:': null
            cont: null
            '%d %%': null
            n_neighbors: null
            'Neighbors:': null
            metric_index: null
            'Metric:': null
        def `get_parameters`:
            n_neighbors: null
            contamination: null
            algorithm: null
            brute: null
            metric: null
    class `IsolationForestEditor`:
        def `__init__`:
            'Contamination:': null
            cont: null
            '%d %%': null
            replicable: null
            Replicable training: null
        def `get_parameters`:
            contamination: null
            random_state: null
    class `OWOutliers`:
        Outliers: null
        Detect outliers.: null
        icons/Outliers.svg: null
        Unsupervised: null
        inlier: null
        class `Inputs`:
            Data: null
        class `Outputs`:
            Inliers: null
            Outliers: null
            Data: null
        class `Warning`:
            Too many features for covariance estimation.: null
        class `Error`:
            Singular covariance matrix.: null
            Not enough memory: null
        def `init_gui`:
            Method: null
            outlier_method: null
            auto_commit: null
        def `_init_editors`:
            Parameters: null
        def `send_report`:
            Data: null
            Input instances: null
            Inliers: null
            Outliers: null
            Detection: null
            Detection method: null
            One class SVM with non-linear kernel (RBF): null
            Regularization (nu): null
            nu: null
            Kernel coefficient: null
            gamma: null
            Covariance estimator: null
            Contamination: null
            contamination: null
            Support fraction: null
            support_fraction: null
            Local Outlier Factor: null
            Number of neighbors: null
            n_neighbors: null
            Metric: null
            metric: null
            Isolation Forest: null
        def `migrate_settings`:
            svm_editor: null
            nu: null
            gamma: null
            empirical_covariance: null
            support_fraction: null
            cov_editor: null
            cont: null
    __main__: null
    iris: null
widgets/data/owpaintdata.py:
    Append: false
    points: false
    Insert: false
    indices: false
    Move: false
    delta: false
    DeleteIndices: false
    Composite: false
    f: false
    g: false
    AirBrush: false
    pos: false
    radius: false
    intensity: false
    rstate: false
    Jitter: false
    Magnet: false
    density: false
    SelectRegion: false
    region: false
    DeleteSelection: false
    MoveSelection: false
    class `PaintViewBox`:
        def `__init__`:
            mousePressEvent: false
            mouseMoveEvent: false
            mouseReleaseEvent: false
            mouseClickEvent: false
            mouseDragEvent: false
            mouseEnterEvent: false
            mouseLeaveEvent: false
    class `SelectTool`:
        def `__init__`:
            Delete: false
            Backspace: false
    def `_icon`:
        icons/paintdata: false
    class `OWPaintData`:
        Brush: Pršilo
        Create multiple instances: Postavi več točk
        brush.svg: false
        Put: Pisalo
        Put individual instances: Postavi posamične točke
        put.svg: false
        Select: Izbor
        Select and move instances: Izberi in premikaj točke
        select-transparent_42px.png: false
        Jitter: Potresi
        Jitter instances: Potresi točke
        jitter.svg: false
        Magnet: Pritegni
        Attract multiple instances: Pritegni točke
        magnet.svg: false
        Clear: Pobriši
        Clear the plot: Pobriši vse točke
        ../../../icons/Dlg_clear.png: false
        Paint Data: Risanje podatkov
        Create data by painting data points on a plane.: Risanje podatkov v graf
        icons/PaintData.svg: false
        create: sestavi
        draw: nariši
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        Painted data: Narisani podatki
        x: true
        y: true
        C1: true
        C2: true
        plot: true
        class `Warning`:
            Input data has no variables: Vhodni podatki nimajo spremenljivk
            Numeric target value can not be used.: Numerične ciljne spremenljivke ne morem uporabiti
            Sparse data is ignored.: Ignoriram redke podatke
            'Some variables have been renamed ': 'Spremenljivke s podvojenimi imeni '
            to avoid duplicates.\n{}: 'so preimenovane.\n{}'
        class `Information`:
            Paint Data uses data from the first two attributes.: Gradnik uporablja prvi dve spremenljivki.
        def `_init_ui`:
            Names: Imena
            attr1: false
            'Variable X: ': 'Spremenljivka X: '
            attr2: false
            'Variable Y: ': 'Spremenljivka Y: '
            hasAttr2: true
            Labels: Razredi
            +: true
            Add new class label: Dodaj nov razred
            MINUS SIGN: true
            Remove selected class label: Odstrani razred
            Tools: Orodja
            brushRadius: false
            'Radius:': 'Polmer:'
            density: false
            'Intensity:': 'Gostota:'
            symbol_size: false
            'Symbol:': 'Velikost:'
            Reset to Input Data: Ponastavi na vhodne podatke
            autocommit: false
            bottom: false
            left: false
        def `set_dimensions`:
            left: false
        def `set_data`:
            C1: true
        def `add_new_class_label`:
            C: true
        def `remove_selected_class_label`:
            Delete class label: false
        def `_on_editing_started`:
            macro: false
        def `execute`:
            Non normalized command: false
        def `_add_command`:
            Name: false
            Delete: false
            Move: false
            unreachable: false
        def `_replot`:
            +: true
        def `_attr_name_changed`:
            bottom: false
            left: false
        def `commit`:
            Class: Razred
            ', ': true
            bottom: false
            left: false
        def `send_report`:
            x: true
            y: true
            Axis x: Os x
            Axis y: Os y
            Number of points: Število točk
            Painted data: Narisani podatki
    __main__: false
widgets/data/owpivot.py:
    class `AggregationFunctionsEnum`:
        def `__str__`:
            _: false
            ' ': false
    class `Pivot`:
        def `__init__`:
            Row variable should be DiscreteVariable: false
            ' or ContinuousVariable': false
            Column variable should be DiscreteVariable: false
            Total: Skupnotyr 
            total: false
        def `_create_group_tables`:
            ({str(fun).lower()}): false
            '{var.name} ({str(fun).lower()})': false
            table: false
            total_h: false
            total_v: false
            total: false
        def `_create_pivot_tables`:
            table: false
            total_h: false
            total_v: false
            total: false
        def `__get_pivot_tab_domain`:
            def `map_values`:
                nan: false
            have_date: false
            have_time: false
            '{v}': false
            Total: Skupno
            Aggregate: Vrednost
        def `__get_pivot_tab_x`:
            fill_value: false
            dtype: false
        def `count_defined`:
            nan: false
    class `PivotTableView`:
        Total: Skupno
        def `_draw_lines`:
            t: false
        def `_resize`:
            ' ': false
    class `OWPivot`:
        Pivot Table: Pivotna tabela
        Reshape data table based on column values.: Preoblikuj podatke glede na vrednosti stolpcev.
        Transform: false
        icons/Pivot.svg: false
        pivot: pivot
        group: skupine
        aggregate: agregacija
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Pivot Table: Pivotna tabela
            Filtered Data: Izbrani podatki
            Grouped Data: Skupine podatkov
        class `Warning`:
            Column feature should be selected.: Izbrati je potrebno spremenljivko za stolpce.
            Some aggregations ({}) cannot be computed.: Nekaterih vrednosti ({}) ni mogoče izračunati.
            Some variables have been renamed in some tables: Spremenljivke s podvojenimi imeni so
            to avoid duplicates.\n{}: preimenovane.\n{}
            Selected variable has too many values.: Izbrana spremenljivka ima preveč različnih vrednosti.
            At least 1 primitive variable is required.: Podatki morajo vsebovati vsaj eno nebesedilno spremenljivko.
        def `_add_control_area_controls`:
            Rows: Vrstice
            row_feature: false
            Columns: Stolpci
            col_feature: false
            (Same as rows): (Enako vrsticam)
            Values: Vrednosti
            val_feature: false
            (None): (Brez)
            auto_commit: false
        def `__add_aggregation_controls`:
            Aggregations: Izračunaj
        def `skipped_aggs`:
            ', ': false
        def `init_attr_values`:
            row_feature: false
            col_feature: false
            val_feature: false
        def `send_report`:
            Row feature: Vrstice
            Column feature: Stolpci
            Value feature: Vrednost
            Group by: Združi po
    __main__: false
    heart_disease: false
widgets/data/owpreprocess.py:
    class `DiscretizeEditor`:
        n: false
        force: false
        None: Brez diskretizacije
        Equal width discretization: Enaka širina intervalov
        #a če tu piše "enaka širina intervalov", gre za tavtologiziranje?
        Equal frequency discretization: Enaka pogostost vrednosti
        Remove numeric features: Odstrani številske spremenljivke
        Entropy-MDL discretization: Diskretizacija z MDL in entropijo
        def `__init__`:
            Number of intervals (for equal width/frequency): Število intervalov (za enake širine ali pogostosti)
        def `setParameters`:
            method: false
            n: false
        def `parameters`:
            method: false
            n: false
        def `createinstance`:
            method: false
        def `__repr__`:
            ', Number of intervals: {}': ', število intervalov: {}'
            '{}{}': false
    class `ContinuizeEditor`:
        Most frequent is base: Najpogostejša vrednost kot osnova
        One feature per value: Po ena spremenljivka na vrednost
        Remove non-binary features: Odstrani nebinarne spremenljivke
        Remove categorical features: Odstrani kategorične spremenljivke
        Treat as ordinal: Obravnavaj kot kategorične spremenljivke kot ordinalne
        Divide by number of values: Obravnavaj kot ordinalne, a deli s številom vrednosti
        def `setParameters`:
            multinomial_treatment: false
        def `parameters`:
            multinomial_treatment: false
        def `createinstance`:
            multinomial_treatment: false
    class `RemoveSparseEditor`:
        missing values: manjkajočimi vrednostmi
        zeros: ničlami
        def `__init__`:
            Remove features with too many: Odstrani spremenljivke s preveč
            'Threshold:': 'Prag:'
            Percentage: Odstotek
            Fixed: Število primerov
        def `parameters`:
            fixedThresh: false
            percThresh: false
            useFixedThreshold: false
            filter0: false
        def `setParameters`:
            percThresh: false
            fixedThresh: false
            useFixedThreshold: false
            filter0: false
        def `createinstance`:
            filter0: false
            useFixedThreshold: false
            fixedThresh: false
            percThresh: false
        def `__repr__`:
            "remove features with too many {self.options[self.filter0]}, threshold: ": "odstrani spremenljivke s preveč {self.options[self.filter0]}, meja: "
            "{self.fixedThresh} {pl(self.fixedThresh, 'instance')}" : "{self.fixedThresh} {plsi(self.fixedThresh, 'primer')}"
            "{self.percThresh} %": true
    class `ImputeEditor`:
        Don't impute.: Ne nadomeščaj
        Replace with constant: Nadomesti z določeno vrednostjo
        Average/Most frequent: Povprečna/najpogostejša vrednost
        Model based imputer: Nadomeščanje z modelom
        Replace with random value: Nadomesti z naključno vrednostjo
        Remove rows with missing values.: Odstrani vrstice z manjkajočimi vrednostmi
        def `setParameters`:
            method: false
        def `parameters`:
            method: false
        def `createinstance`:
            method: false
    class `UnivariateFeatureSelect`:
        def `__init__`:
            Score: Kriterij
            Number of features: Število ohranjenih spremenljivk
            'Fixed:': 'Določeno število:'
            'Proportion:': 'Delež v odstotkih'
            '%': true
        def `setItems`:
            text: false
        def `setParameters`:
            score: false
            strategy: false
            k: false
            p: false
        def `parameters`:
            score: false
            strategy: false
            p: false
            k: false
    class `FeatureSelectEditor`:
        Information Gain: Informacijski prispevek
        Gain ratio: Delež informacijskega prispevka
        Gini index: Zmanjšanje Ginijevega indeksa
        ReliefF: true
        Fast Correlation Based Filter: Hitri korelacijski filter
        ANOVA: true
        Chi2: true
        RReliefF: true
        Univariate Linear Regression: Univariatna linearna regresija
        def `__init__`:
            text: false
            Information Gain: Informacijski prispevek
            tooltip: false
            Gain Ratio: Delež informacijskega prispevka
            Gini Index: Zmanjšanje Ginijevega indeksa
            ReliefF: true
            Fast Correlation Based Filter: Hitri korelacijski filter
            ANOVA: true
            Chi2: true
            RReliefF: true
            Univariate Linear Regression: Univariatna linearna regresija
        def `createinstance`:
            score: false
            strategy: false
            k: false
            p: false
        def `__repr__`:
            'Score: {}, Strategy (Fixed): {}': 'kriterij: {}, število (določeno): {}'
            score: false
            k: false
    class `RandomFeatureSelectEditor`:
        def `__init__`:
            Number of features: Število spremenljivk
            Fixed: Določeno število
            Percentage: Odstotek
            '%': true
        def `setParameters`:
            strategy: false
            k: false
            p: false
        def `parameters`:
            strategy: false
            p: false
            k: false
        def `createinstance`:
            strategy: false
            k: false
            p: false
        def `__repr__`:
            select {self.__k} {pl(self.__k,'feature')}: izbor {self.__k} {plsi(self.__k,'primer')}
            select {self.__p} % features: izbor {self.__p} % primerov
    class `Scale`:
        Standardize to μ=0, σ²=1: Standardiziraj (μ=0, σ²=1)
        Center to μ=0: Centriraj (μ=0)
        Scale to σ²=1: Skaliraj (σ²=1)
        Normalize to interval [-1, 1]: Normaliziraj v interval [-1, 1]
        Normalize to interval [0, 1]: Normaliziraj v interval [0, 1]
        def `setParameters`:
            method: false
        def `parameters`:
            method: false
        def `createinstance`:
            method: false
    class `Randomize`:
        def `__init__`:
            Classes: Razrede
            Features: Spremenljivke
            Meta data: Meta spremenljivke
            'Randomize:': 'Premešaj:'
            'Replicable shuffling:': 'Ponovljivo mešanje:'
        def `setParameters`:
            rand_type: false
            rand_seed: false
        def `parameters`:
            rand_type: false
            rand_seed: false
        def `createinstance`:
            rand_type: false
            rand_seed: false
        def `__repr__`:
            '{}, {}': true
            Replicable: "ponovljivo"
            Not replicable: "neponovljivo naključno"
    class `PCA`:
        def `__init__`:
            'Components:': 'Število komponent:'
        def `setParameters`:
            n_components: false
        def `parameters`:
            n_components: false
        def `createinstance`:
            n_components: false
        def `__repr__`:
            'Components: {}': '{} komponent'
    class `CUR`:
        def `__init__`:
            'Rank:': 'Rang:'
            'Relative error:': 'Relativna napaka:'
        def `setParameters`:
            rank: false
            max_error: false
        def `parameters`:
            rank: false
            max_error: false
        def `createinstance`:
            rank: false
            max_error: false
        def `__repr__`:
            'Rank: {}, Relative error: {}': 'rang: {}, relativna napaka: {}'
    def `icon_path`:
        icons/: true
    Discretize: Diskretizacija
    orange.preprocess.discretize: false
    Discretization: Diskretizacija
    Discretize Continuous Variables: Diskretiziraj številske spremenljivke
    Discretize.svg: false
    Continuize: Kontinuizacija
    orange.preprocess.continuize: false
    Continuization: Kontinuizacija
    Continuize Discrete Variables: Spremeni kategorične spremenljivke v številske
    Continuize.svg: false
    Impute: Nadomeščanje
    orange.preprocess.impute: false
    Impute Missing Values: Nadomesti manjkajoče vrednosti
    Impute.svg: false
    Feature Selection: Izbor spremenljivk
    orange.preprocess.fss: false
    Select Relevant Features: Izberi relevantne spremenljivke
    SelectColumns.svg: false
    Random Feature Selection: Naključen izbor spremenljivk
    orange.preprocess.randomfss: false
    Select Random Features: Izberi naključno množico spremenljivk
    SelectColumnsRandom.svg: false
    Normalize: Normalizacija
    orange.preprocess.scale: false
    Scale: Skaliraj
    Normalize Features: Normalizacija spremenljivk
    Normalize.svg: false
    Randomize: Premešanje vrednosti
    orange.preprocess.randomize: false
    Randomization: Premešanje vrednosti
    Random.svg: false
    Remove Sparse: Odstranjevanje redkih podatkov
    orange.preprocess.remove_sparse: false
    Remove Sparse Features: Odstrani redke spremenljivke
    PurgeDomain.svg: false
    PCA: true
    orange.preprocess.pca: false
    Principal Component Analysis: Metoda osnovnih komponent
    PCA.svg: false
    CUR: CUR
    orange.preprocess.cur: false
    CUR Matrix Decomposition: Matrična dekompozicija CUR
    class `OWPreprocess`:
        Preprocess: Predprocesiranje
        Construct a data preprocessing pipeline.: Sestavi zaporedje predprocesorjev
        Transform: false
        icons/Preprocess.svg: false
        process: false
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Preprocessor: Predprocesor
            Preprocessed Data: Predprocesirani podatki
        def `__init__`:
            def `mimeData`:
                application/x-qwidget-ref: false
                utf-8: false
            Preprocessors: Predprocesorji
            Drag items from the list on the left: Povleci predprocesorje z leve
            autocommit: false
        def `load`:
            preprocessors: false
            def `dropMimeData`:
                application/x-qwidget-ref: false
        def `save`:
            name: false
            preprocessors: false
        def `migrate_settings`:
            storedsettings: false
            preprocessors: false
            orange.preprocess.scale: false
            center: false
            scale: false
            Mean: false
            NoScaling: false
            NoCentering: false
            Std: false
            Span: false
            method: false
        def `send_report`:
            Settings: Nastavitve
    __main__: false
    brown-selected: false
widgets/data/owpurgedomain.py:
    class `OWPurgeDomain`:
        Purge Domain: Očisti domeno
        'Remove redundant values and features from the dataset. ': Odstrani neuporabljene vrednosti in spremenljivke
        Sort values.: Uredi vrednosti.
        icons/PurgeDomain.svg: false
        Transform: false
        remove: odstrani
        delete: uredi
        unused: neuporabljene
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        sortValues: false
        Sort categorical feature values: Uredi kategorične vrednosti po abecedi
        removeValues: false
        Remove unused feature values: Odstrani neuporabljene vrednosti
        removeAttributes: false
        Remove constant features: Odstrani konstantne spremenljivke
        sortClasses: false
        Sort categorical class values: Uredi razrede po abecedi
        removeClasses: false
        Remove unused class variable values: Odstrani prazne razrede
        removeClassAttribute: false
        Remove constant class variables: Odstrani konstantne ciljne spremenljivke
        removeMetaAttributeValues: false
        Remove unused meta attribute values: Odstrani neuporabljene vrednosti meta spremenljivk
        removeMetaAttributes: false
        Remove constant meta attributes: Odstrani konstantne meta spremenljivke
        Sorted features: Urejene značilke
        resortedAttrs: false
        Reduced features: Poenostavljene značilke
        reducedAttrs: false
        Removed features: Odstranjene značilke
        removedAttrs: false
        Sorted classes: Urejeni razredi
        resortedClasses: false
        Reduced classes: Poenostavljeni razredi
        reducedClasses: false
        Removed classes: Odstranjeni razredi
        removedClasses: false
        Reduced metas: Poenostavljene meta spremeljivke
        reducedMetas: false
        Removed metas: Odstranjene meta spremeljivke
        removedMetas: false
        def `__init__`:
            '-': true
            Features: Značilke
            'Sorted: %(resortedAttrs)s, ': 'Urejene: %(resortedAttrs)s, '
            'reduced: %(reducedAttrs)s, removed: %(removedAttrs)s': 'poenostavljene: %(reducedAttrs)s, odstranjene: %(removedAttrs)s'
            Classes: Razredi
            'Sorted: %(resortedClasses)s,': 'Urejeni: %(resortedClasses)s,'
            'reduced: %(reducedClasses)s, removed: %(removedClasses)s': 'poenostavljeni: %(reducedClasses)s, odstranjeni: %(removedClasses)s'
            Meta attributes: Meta spremenljivke
            'Reduced: %(reducedMetas)s, removed: %(removedMetas)s': 'poenostavljene: %(reducedMetas)s, odstranjene: %(removedMetas)s'
            autoSend: false
        def `setData`:
            '-': true
        def `commit`:
            removed: false
            reduced: false
            sorted: false
        def `send_report`:
            def `list_opts`:
                '; ': true
                no changes: ni sprememb
            Settings: Nastavitve
            Features: Značilke
            Classes: Razredi
            Metas: Meta spremenljivke
            Statistics: Statistika
    __main__: false
    https://datasets.biolab.si/core/car.tab: false
    buying: false
    v-high: false
widgets/data/owpythonscript.py:
    OWPythonScript: false
    ? "import numpy as np\nfrom Orange.data import Table, Domain, ContinuousVariable,\
        \ DiscreteVariable\n\ndomain = Domain([ContinuousVariable(\"age\"),\n    \
        \             ContinuousVariable(\"height\"),\n                 DiscreteVariable(\"\
        gender\", values=(\"M\", \"F\"))])\narr = np.array([\n  [25, 186, 0],\n  [30,\
        \ 164, 1]])\nout_data = Table.from_numpy(domain, arr)\n"
    : false
    def `read_file_content`:
        utf-8: true
        strict: true
    Light: false
    '#000': false
    '#f00': false
    'bold #008000': false
    '#212121': false
    '#00f': false
    '#05a': false
    '#aa22ff': false
    '#008000': false
    '#ba2121': false
    '#080': false
    'bold #aa22ff': false
    'italic #408080': false
    Dark: false
    '#fff': false
    'bold #4caf50': false
    '#e0e0e0': false
    '#1e88e5': false
    '#42a5f5': false
    '#43a047': false
    '#ff7070': false
    '#66bb6a': false
    def `make_pygments_style`:
        PygmentsStyle: false
        styles: false
    class `FakeSignatureMixin`:
        def `__init__`:
            '4444': false
    class `FunctionSignature`:
        def `__init__`:
            python_script: false
            in_: false
            '<b style="color: ': false
            ' ': false
            ;">def </b>: false
            '<span style="color: ': false
            ;">: false
            </span>: false
            ;">(</span>: false
            ;">):</span>: false
        def `update_signal_text`:
            ', ': false
            's, ': false
    class `ReturnStatement`:
        def `__init__`:
            '<b style="color: ': false
            ' ': false
            ;">return </b>: false
            out_: false
        def `make_signal_labels`:
            <b></b>: false
            ', ': false
            '.QLabel { color: ': false
            ' ': false
            ; }: false
        def `update_signal_text`:
            <b></b>: false
            <b>: false
            </b>: false
    class `VimIndicator`:
        def `__init__`:
            '#33cc33': false
            normal: false
    class `PythonConsole`:
        def `interact`:
            '>>> ': false
            '... ': false
            'Type "help", "copyright", "credits" or "license" ': false
            for more information.: false
            Python %s on %s\n%s\n(%s)\n: false
            '%s\n': false
            \n: false
            \nKeyboardInterrupt\n: false
        def `push`:
            sys.excepthook: false
            sys.stdout: false
            sys.stderr: false
        def `keyPressEvent`:
            \n: false
        def `pasteCode`:
            \n: false
    class `Script`:
        def `asdict`:
            _ScriptData: false
        def `fromdict`:
            _ScriptData: false
            Script: false
            name: false
            script: false
            filename: false
    class `ScriptItemDelegate`:
        def `displayText`:
            '*': false
    _ScriptData: false
    name: false
    script: false
    filename: false
    class `OWPythonScript`:
        Python Script: Skripta v Python
        # a se reče "skripta v Python? Al Pythonu? Za Python?"
        Write a Python script and run it on input data or models.: Poženi ročno napisan program v Pythonu
        Transform: false
        icons/PythonScript.svg: false
        program: program
        function: funkcija
        class `Inputs`:
            Data: Podatki
            in_data: false
            Learner: Učenec
            in_learner: false
            Classifier: Model
            in_classifier: false
            Object: Objekt
            in_object: false
        class `Outputs`:
            Data: Podatki
            out_data: false
            Learner: Učenec
            out_learner: false
            Classifier: Model
            out_classifier: false
            Object: Objekt
            out_object: false
        data: false
        learner: false
        classifier: false
        object: false
        List[_ScriptData]: false
        name: false
        Table from numpy: false
        script: false
        filename: false
        def `__init__`:
            Menlo: false
            darwin: false
            Courier: false
            win32: false
            cygwin: false
            DejaVu Sans Mono: false
            Editor: Urejevalnik
            darkMode: false
            Dark: false
            Light: false
            '0000': false
            Preferences: Nastavitve
            vimModeEnabled: false
            Vim mode: Način Vim
            Only for the coolest.: Samo, če si kul.
            Library: Knjižnica
            +: true
            Add a new script to the library: Dodaj novo skripto v knjižnico
            MINUS SIGN: true
            Remove script from library: Odstrani skripto iz knjižnice
            Update: Osveži
            Save changes in the editor to library: Shrani spremembe iz urejevalnika v knjižnico
            More: Več
            More actions: Več možnosti
            Import Script from File: Preberi skripto iz datoteke
            Save Selected Script to File: Shrani izbrano skripto v datoteko
            Undo Changes to Selected Script: Razveljavi spremembe izbrane skripte
            Run: Poženi
            Run script: Poženi skripto
            '&Save': '&Shrani'
            Save script to file: Shrani skripto v datoteko
            Console: Konzola
        def `set_data`:
            data: false
        def `insert_data`:
            data: false
        def `remove_data`:
            data: false
        def `set_learner`:
            learner: false
        def `insert_learner`:
            learner: false
        def `remove_learner`:
            learner: false
        def `set_classifier`:
            classifier: false
        def `insert_classifier`:
            classifier: false
        def `remove_classifier`:
            classifier: false
        def `set_object`:
            object: false
        def `insert_object`:
            object: false
        def `remove_object`:
            object: false
        def `onAddScript`:
            New script: Nova skripta
        def `onAddScriptFromFile`:
            Open Python Script: Odpri skripto v Pythonu
            ~/: false
            Python files (*.py)\nAll files(*.*): Programi v Pythonu (*.py)\nVse datoteke (*.*)
        def `saveScript`:
            ~/: false
            Save Python Script: Shrani skripto v Pythonu
            Python files (*.py)\nAll files(*.*): Programi v Pythonu (*.py)\nVse datoteke (*.*)
            .py: false
            w: false
        def `initial_locals_state`:
            in_: false
            s: false
        def `commit`:
            _script: false
            \nRunning script:\n: \nIzvajam skripto:\n
            exec(_script): false
            out_: false
            '''{}'' has to be an instance of ''{}''.': '''{}'' mora biti ''{}''.'
        def `migrate_settings`:
            libraryListSource: false
            scriptLibrary: false
    class `OWPythonScriptDropHandler`:
        def `canDropFile`:
            text/x-python: false
        def `parametersFromFile`:
            rt: false
            _ScriptData: false
            name: false
            script: false
            filename: false
            scriptLibrary: false
            def `is_same`:
                _ScriptData: false
                filename: false
            __version__: false
            scriptText: false
    __main__: false
widgets/data/owrandomize.py:
    class `OWRandomize`:
        Randomize: Premešaj
        Randomize features, class and/or metas in data table.: Premeša značilke, razrede in/ali meta spremenljivke
        Transform: false
        icons/Random.svg: false
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        def `__init__`:
            Shuffled columns: Premešani stolpci
            shuffle_class: false
            Classes: Razredi
            shuffle_attrs: false
            Features: Značilke
            shuffle_metas: false
            Metas: Meta spremenljivke
            Shuffled rows: Delež premešanih vrstic
            None: Nič
            scope_prop: false
            All: Vse
            random_seed: false
            Replicable shuffling: Ponovljivo naključno mešanje
        def `_set_scope_label`:
            '{}%': false
        def `send_report`:
            classes: razredi
            features: značilke
            metas: meta spremenljivke
            none: nič
            ' and ': ' in '
            ', ': true
            Settings: Nastavitve
            Shuffled columns: Premešani stolpci
            Proportion of shuffled rows: Delež premešanih vrstic
            '{}%': false
            Replicable: Ponovljivo
            'yes': da
            'no': ne
    __main__: false
    iris: false
widgets/data/owrank.py:
    score_meta: false
    name: false
    shortname: false
    scorer: false
    problem_type: false
    is_default: false
    Information Gain: Informacijski prispevek
    Info. gain: Inf. prisp
    Information Gain Ratio: Delež inform. prispevka
    Gain ratio: Delež inf.
    # tu je res kratko napisano, skoraj nerazumljivo - vsaj zame brez konteksta (ne najdem tega prevoda v gradniku) 
    Gini Decrease: Znižanje Ginijevega indeksa
    Gini: true
    ANOVA: true
    χ²: true
    ReliefF: true
    FCBF: true
    Univariate Regression: Univariatna regresija
    Univar. reg.: Univar. reg.
    RReliefF: true
    def `get_method_scores`:
        ignore: false
        '%s doesn''t work on this data': false
        '%s had to be computed separately for each ': false
        variable: false
    def `get_scorer_scores`:
        '%s doesn''t work on this data': false
        _: false
    class `OWRank`:
        Rank: Rangiranje
        Rank and filter data features by their relevance.: Rangiraj in filtriraj spremenljivke glede na pomembnosti
        icons/Rank.svg: false
        class `Inputs`:
            Data: Podatki
            Scorer: Kriterij
        class `Outputs`:
            Reduced Data: Reducirani podatki
            Scores: Ocene
            Features: Spremenljivke
        class `Information`:
            Data does not have a (single) target variable.: Podatki nimajo (ene) ciljne spremenljivke.
            Missing values will be imputed as needed.: Manjkajoče vrednosti bodo nadomeščene.
        class `Error`:
            Cannot handle target variable type {}: "Vrsta ciljne spremenljivke '{}' ni podprta."
            'Scorer {} inadequate: {}': "Kriterij {} ni ustrezen: {}"
            Data does not have a single attribute.: Podatki ne vsebujejo nobene spremenljivke.
        class `Warning`:
            Variables with duplicated names have been renamed.: Spremenljivke s podvojenimi imeni so preimenovane.
        def `__init__`:
            Scoring Methods: Kriteriji pomembnosti
            Select Attributes: Izbor spremenljivk
            None: Nobena
            All: Vse
            Manual: Ročno
            'Best ranked:': "Najboljše ocenjene:"
            nSelected: false
            auto_apply: false
        def `handleNewSignals`:
            Running: V teku
        def `on_done`:
            '#': false
        def `send_report`:
            Input: Vhod
            Ranks: Rangi
            '{:.3f}': false
            Output: Izhod
        def `create_scores_table`:
            Feature: Spremenljivka
            ', ': true
            Feature Scores: Ocene spremenljivk
        def `migrate_settings`:
            headerState: false
            sorting: false
    __main__: false
    heart_disease.tab: false
    Learner: false
widgets/data/owsave.py:
    ~{os.sep}: false
    class `OWSave`:
        Save Data: Shrani podatke
        Save data to an output file.: Shrani podatke v datoteko.
        icons/Save.svg: false
        Data: false
        export: izvoz
        class `Inputs`:
            Data: Podatki
        class `Error`:
            Use Pickle format for sparse data.: Za redke podatke uporabi obliko 'pickle'.
        def `__init__`:
            add_type_annotations: false
            Add type annotations to header: V glavo dodaj oznake tipov stolpcev
            Some formats (Tab-delimited, Comma-separated) can include \n: Nekateri podatki (ločeni z vejico ali s tabulatorji)\n
            additional information about variables types in header rows.: omogočajo shranjevanje informacije o vrstah stolpcev.
        def `get_filters`:
            write_file: false
            EXTENSIONS: false
            '{w.DESCRIPTION} (*{w.EXTENSIONS[0]})': false
            Compressed {w.DESCRIPTION} (*{w.EXTENSIONS[0]}.gz): Stisnjeni {w.DESCRIPTION} (*{w.EXTENSIONS[0]}.gz)
        def `send_report`:
            'No': Ne
            'Yes': Da
            File name: Ime datoteke
            not set: ni nastavljeno
            Format: Oblika
            Type annotations: Oznake tipov
        def `migrate_settings`:
            def `migrate_to_version_2`:
                compression: false
                filter: false
                filetype: false
                compress: false
                .gz: false
            add_type_annotations: false
            stored_name: false
            .xlsx: false
        def `initial_start_dir`:
            name: false
    __main__: false
    iris: false
widgets/data/owselectbydataindex.py:
    class `OWSelectByDataIndex`:
        Select by Data Index: Izberi iste vrstice
        Match instances by index from data subset.: Izberi primere, ki ustrezajo vrsticam iz podmnožice
        Transform: false
        icons/SelectByDataIndex.svg: false
        class `Inputs`:
            Data: Podatki
            Data Subset: Podmnožica
        class `Outputs`:
            Matching Data: Izbrani podatki
            Data: false
            Unmatched Data: Ostali podatki
            Annotated Data: Označeni podatki
        class `Warning`:
            Input tables do not share any instances.: Vhodni tabeli nimata skupnih vrstic.
        def `__init__`:
            ? '

                Data rows keep their identity even when some or all original variables

                are replaced by variables computed from the original ones.


                This widget gets two data tables ("Data" and "Data Subset") that

                can be traced back to the same source. It selects all rows from Data

                that appear in Data Subset, based on row identity and not actual data.

                '
            : "
            Vrstice ohranijo identiteto tudi, če so nekatere ali vse spremenljivke\n
            zamenjane z novimi, izračunanimi iz starih.\n
            \n
            Ta gradnik sprejme dve tabeli, \"Podatki\" in \"Podmnožica\", ki izhajata\n
            iz istega vira. Gradnik izbere vse vrstice prve, ki se pojavijo tudi v drugi.\n
            Pri tem se ozira na identiteto vrstic in ne na vrednosti spremenljivk.
            "
        def `send_report`:
            def `data_info_text`:
                No data.: "-"
                "{data.name}, ": true
                "{len(data)} {pl(len(data), 'instance')}, ": "{len(data)} {plsi(len(data), 'vrstica')}, "
                "{nvars} {pl(nvars, 'variable')}": "{nvars} {plsi(nvars, 'spremenljivka')}"
            Data: Podatki
            Data Subset: Podmnožica
    __main__: false
    iris.tab: false
widgets/data/owselectcolumns.py:
    class `VariablesListItemModel`:
        application/x-Orange-VariableListModelData: false
        def `mimeData`:
            _items: false
        def `dropMimeData`:
            _items: false
    class `SelectAttributesDomainContextHandler`:
        def `encode_setting`:
            domain_role_hints: false
        def `decode_setting`:
            domain_role_hints: false
        def `match`:
            domain_role_hints: false
            available: false
        def `filter_value`:
            domain_role_hints: false
    class `OWSelectAttributes`:
        Select Columns: Izbor stolpcev
        'Select columns from the data table and assign them to ': 'Izbor stolpcev in določitev njihovih vlog '
        data features, classes or meta variables.: '(spremenljivka, ciljna spremenljivka, meta spremenljivka)'
        Transform: false
        icons/SelectColumns.svg: false
        filter: false
        attributes: false
        target: false
        variable: false
        class `Inputs`:
            Data: Podatki
            Features: Spremenljivke
        class `Outputs`:
            Data: Podatki
            Features: Spremenljivke
        class `Warning`:
            Features and data domain do not match: Tabela ne vsebuje nobene od podanih vhodnih spremenljivk.
            Most widgets do not support multiple targets: Večina gradnikov podpira le eno ciljno spremenljivko.
        def `__init__`:
            Ignored: Odstranjeno
            Features: Spremenljivke
            use_input_features: false
            Use input features: Uporabi vhodne spremenljivke
            Always use input features: Vedno uporabi vhodne spremenljivke
            Target: Cilj
            Metas: Meta spremenljivke
            '>': true
            Reset: Povrni
            ignore_new_features: false
            Ignore new variables by default: Privzeto odstrani nove spremenljivke
            'When the widget receives data with additional columns ': 'Če je ta možnost izbrana, bo gradnik v primeru,\n'
            'they are added to the available attributes column if ': 'da prejme podatke z novimi stolpci, le-te\n'
            <i>Ignore new variables by default</i> is checked.: 'privzeto dodal med odstranjene spremenljivke.'
            auto_commit: false
        def `__use_features_changed`:
            use_features_box: false
        def `set_data`:
            attribute: false
            class: false
            meta: false
            available: false
        def `restore_hints`:
            attribute: false
            meta: false
            class: false
            available: false
        def `update_domain_role_hints`:
            available: false
            attribute: false
            class: false
            meta: false
        def `update_var_counts`:
            '{name} ({nvars}/{nall})': true
            '{name} ({nvars})': true
        def `update_interface_state`:
            '>': true
            <: true
        def `send_report`:
            Input data: Vhodni podatki
            Output data: Izhodni podatki
            No changes.: Ni sprememb.
            '{len(diff)} ({", ".join(x.name for x in diff)})': true
            ', ': true
            Removed: Odstranjene
    __main__: false
    brown-selected: false
widgets/data/owselectrows.py:
    class `SelectRowsContextHandler`:
        def `encode_setting`:
            conditions: false
            x: false
        def `decode_setting`:
            conditions: false
            x: false
            f: false
        def `match`:
            conditions: false
        def `filter_value`:
            conditions: false
    class `FilterDiscreteType`:
        Equal: false
        NotEqual: false
        In: false
        IsDefined: false
    def `_plural`:
        'is ': null
        'are ': null
        equals: null
        contains: null
        begins: null
        ends: null
    class `OWSelectRows`:
        Select Rows: Izberi vrstice
        Select rows from the data based on values of variables.: Izberi vrstice glede na vrednosti spremenljivk.
        icons/SelectRows.svg: false
        Transform: false
        filter: true
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Matching Data: Izbrani podatki
            Unmatched Data: Neizbrani podatki
        equals: je
        equal: so
        is not: ni
        are not: niso
        is below: je manjši kot
        # je manj kot
        are below: so manjše kot
        # je pod vrednostjo
        is at most: je največ
        are at most: so največ
        is greater than: je večji kot
        # he večje od
        are greater than: so večje kot
        # so večje od
        is at least: je vsaj
        are at least: so vsaj
        is between: je med
        are between: so med
        is outside: je izven
        are outside: so izven
        is defined: je znan
        are defined: so znane
        is: je
        is one of: je eden izmed
        is before: je pred
        are before: so pred
        is equal or before: je enak ali pred
        are equal or before: so enake ali pred
        is after: je za
        are after: so za
        is equal or after: je enak ali za
        are equal or after: so enake ali za
        contains: vsebuje
        contain: vsebujejo
        begins with: se začne z
        begin with: se začnejo z
        ends with: se konča z
        end with: se končajo z
        All variables: Vse spremenljivke
        All numeric variables: Vse številke spremenljivke
        All string variables: Vse besedilne spremenljivke
        class `Error`:
            '{}': false
        def `__init__`:
            Conditions: Pogoji
            Add Condition: Dodaj pogoj
            Add All Variables: Dodaj vse spremenljivke
            Remove All: Odstrani vse
            purge_attributes: false
            Remove unused features: Odstrani neuporabljene vrednosti
            purge_classes: false
            Remove unused classes: Odstrani prazne razrede
            auto_commit: false
        def `add_row`:
            ×: true
            '* {font-size: 16pt; color: palette(button-text) }': true
            '*:hover {color: palette(bright-text)}': true
        def `add_all`:
            Remove existing filters: Odstrani vse pogoje
            'This will replace the existing filters with ': "Zamenjam obstoječe pogoje s "
            filters for all variables.: pogoji za vse spremenljivke?
        def `_get_lineedit_contents`:
            controls: false
        def `_get_value_contents`:
            controls: false
            ', ': false
            Type %s not supported.: false
        def `set_new_values`:
            'defined': znan
            ' one of': ' eden izmed '
            ' and ': ' in '
        def `_values_to_floats`:
            Some values could not be parsed as floats: Nekaterih vrednosti ni mogoče prebrati kot števila
            # glede na to, da je v angleščini "float", bi blo mogoče zavoljo natančnosti vredno izbrat slovenski ekvivalent - decimalno število, ker lahko to nosi informacijo, ki uporabniku olajša uporabo programa. 
            'in the current locale: {values}': "pri trenutni nastavitvi sistema: {values}"
        def `commit`:
            invalid operand: false
        def `send_report`:
            No data.: Ni podatkov.
            Data instances: Število primerov
            '{} {}': false
            is one of: je eden izmed
            '{'', ''.join(valnames[:-1])} or {valnames[-1]}': '{'', ''.join(valnames[:-1])} ali {valnames[-1]}'
            '{attr} is {valstr}': '{attr} je {valstr}'
            '{attr} {name} {attr.values[value]}': false
            '{attr} {name} {'' and ''.join(map(repr, values))}': '{attr} {name} {'' in ''.join(map(repr, values))}'
            '{attr} {name} {'' and ''.join(values)}': '{attr} {name} {'' in ''.join(values)}'
            Instances: Primerov
            Condition: Pogoji
            ' AND ': ' IN '
            no conditions: ni pogojev
            Data: Podatki
            Matching data: Izbrani podatki
            "{match_inst} {pl(match_inst, 'instance')}": "{match_inst} {plsi(match_inst, 'primer')}"
            Non-matching data: Neizbrani podatki
            "{nonmatch_inst} {pl(nonmatch_inst, 'instance')}": "{nonmatch_inst} {plsi(nonmatch_inst, 'primer')}"
            Output: Izhod
            None: Prazno
        def `migrate_context`:
            conditions: false
    class `CheckBoxPopup`:
        def `__init__`:
            ', ': false
    class `DateTimeWidget`:
        def `set_format`:
            yyyy-MM-dd hh:mm:ss: false
            '%Y-%m-%d %H:%M:%S': false
            yyyy-MM-dd: false
            '%Y-%m-%d': false
            hh:mm:ss: false
            '%H:%M:%S': false
    __main__: false
    heart_disease: false
widgets/data/owsql.py:
    def `is_postgres`:
        display_name: false
        PostgreSQL: false
    class `OWSql`:
        SQL Table: Branje SQL
        orange.widgets.data.sql: false
        Load dataset from SQL.: Naloži podatke iz baze SQL
        icons/SQLTable.svg: false
        Data: false
        load: true
        class `Outputs`:
            Data: Podatki
            Attribute-valued dataset read from the input file.: Podatki prebrani iz baze
        class `Information`:
            Data description was generated from a sample.: Podatki vsebujejo samo vzorec.
        class `Warning`:
            'Database is missing extensions: {}': 'Podatkovna baza nima razširitev: {}'
        class `Error`:
            Please install a backend to use this widget.: Namestite knjižnico za podatkovno bazo.
        def `_add_tables_controls`:
            Tables: Tabele
            table: tabela
            materialize: false
            'Materialize to table ': 'Materializiraj v tabelo '
            Save results of the query in a table: Shrani podatke poizvedbe v tabelo
            materialize_table_name: false
            Execute: Izvedi
            guess_values: false
            Auto-discover categorical variables: Samodejno zaznaj kategorične spremenljivke
            download: false
            Download data to local memory: Shrani podatke v pomnilnik
        def `highlight_error`:
            'QLineEdit {border: 2px solid red;}': false
            server: false
            host: false
            role: false
            database: false
        def `on_connection_success`:
            missing_extension: false
            ', ': true
        def `on_connection_error`:
            \n: false
        def `refresh_tables`:
            Select a table: Izberi tabelo
            Custom SQL: Prikrojen SQL
        def `select_table`:
            Custom SQL: Prikrojen SQL
            Table: Tabela
            (None): (Brez)
        def `get_table`:
            Table: false
            (None): (Brez)
            Custom SQL: Prikrojen SQL
            Query: Poizvedba
            Specify a table name to materialize the query: Določi ime materializirane tabele
            'DROP TABLE IF EXISTS ': false
            'CREATE TABLE ': false
            ' AS ': false
            'ANALYZE ': false
            'Attribute discovery might take ': 'Samodejno zaznavanje v velikih tabelah lahko zahteva '
            a long time on large tables.\n: veliko časa.\n
            Do you want to auto discover attributes?: Želite samodejno zaznavanje?
            'Yes': 'Da'
            'No': 'Ne'
            Yes, on a sample: 'Da, na vzorcu'
            'Data appears to be big. Do you really ': 'Podatki so videti veliki. Jih res želite '
            want to download it to local memory?: naložiti v pomnilnik?
            Yes, a sample: Da, vzorec
            Warning: Opozorilo
            Data is too big to download.\n: Podatki so preveliki.
            Question: Vprašanje
        def `migrate_settings`:
            host: false
            port: false
            username: false
            password: false
    __main__: false
widgets/data/owtable.py:
    class `RichTableModel`:
        def `__init__`:
            _: false
        def `headerData`:
            \n: false
    class `TableSliceProxy`:
        def `setRowSlice`:
            invalid stride: false
    TableSlot: false
    input_id: false
    table: false
    summary: false
    view: false
    class `OWDataTable`:
        Data Table: Tabela
        View the dataset in a spreadsheet.: Pregled podatkov v tabeli
        icons/Table.svg: false
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Selected Data: Izbor podatkov
        def `__init__`:
            Info: true
            Variables: Spremenljivke
            show_attribute_labels: false
            Show variable labels (if present): Pokaži oznake spremenljivk
            show_distributions: false
            Visualize numeric values: Vizualiziraj številske vrednosti
            color_by_class: false
            Color by instance classes: Obarvaj primere glede na razred
            Selection: Izbor
            select_rows: false
            Select full rows: Izbiraj cele vrstice
            Restore Original Order: Izvirni vrstni red
            Show rows in the original order: Pokaži vrstice v izvirnem vrstnem redu
            auto_commit: false
        def `set_dataset`:
            name: false
            Data: Podatki
        def `insert_dataset`:
            name: false
            Data: Podatki
        def `handleNewSignals`:
            def `update`:
                _update_info: false
        def `set_corner_text`:
            btn: false
            btnfailed: false
            darwin: false
        def `_set_input_summary`:
            \n: false
        def `_info_box_text`:
            def `format_part`:
                ' ({perc:.1f} % missing data)': ' ({perc:.1f} % manjkajočih podatkov)'
                sparse: redki
                tags: oznake
                ' ({tag}, density {dens:.2f} %)': ' ({tag}, gostota {dens:.2f} %)'
            def `desc`:
                No {part}s: null
                1 {part}: null
                '{n} {part}s': null
            No data.: Ni podatkov.
            '{summary.len.result()} instances': null
            ~{summary.approx_len} instances: null
            '{summary.len} instances': null
            ' (no missing data)': ' (ni manjkajočih podatkov)'
            feature: null
            No target variable.: Ni ciljne spremenljivke
            outcome: null
            Numeric outcome: Numerična ciljna spremenljivka
            'Target with ': null
            value: null
            meta attribute: null
        def `_update_variable_labels`:
            _: false
            \n: false
    DenseArray: false
    nans: false
    non_nans: false
    stats: false
    SparseArray: false
    SparseBoolArray: false
    NotAvailable: false
    Summary: false
    len: false
    domain: false
    X: false
    Y: false
    M: false
    ApproxSummary: false
    approx_len: false
    __main__: false
    iris: false
    brown-selected: false
    housing: false
widgets/data/owtransform.py:
    class `OWTransform`:
        Apply Domain: Spremeni domeno
        Applies template domain on data table.: Spremeni vhodne podatke glede na domeno iz vzorca.
        Transform: false
        icons/Transform.svg: false
        transform: false
        class `Inputs`:
            Data: Podatki
            Template Data: Podatki z domeno
        class `Outputs`:
            Transformed Data: Spremenjeni podatki
        class `Error`:
            An error occurred while transforming data.\n{}: Napake med spreminjanjem domene.\n{}
        def `__init__`:
            ? '

                The widget takes Data, to which it re-applies transformations

                that were applied to Template Data.


                These include selecting a subset of variables as well as

                computing variables from other variables appearing in the data,

                like, for instance, discretization, feature construction, PCA etc.

                '
            : "Gradnik prejme tabelo 'Podatki' in na njej izvede enake transformacije,\n
               kot so doletele tabelo 'Podatki z domeno'.\n\n
               To vključuje izbiranje podmnožic spremenljivk kot tudi računanje\n
               spremenljivk iz drugih spremenljivk, na primer diskretizacija, PCA ipd.
            "
        def `send_report`:
            Data: Podatki
            Template data: Podatki z domeno
            Transformed data: Spremenjeni podatki
    __main__: false
    iris: false
widgets/data/owtranspose.py:
    class `OWTranspose`:
        Transpose: Transponiraj
        Transpose data table.: Spremeni vrstice v stolpce in obratno
        Transform: false
        icons/Transpose.svg: false
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        Feature: Spremenljivka
        class `Warning`:
            'Values are not unique.\nTo avoid multiple ': 'Vrednosti niso unikatne.\n K vrednostim'
            'features with the same name, values \nof ': '''{}'' so zato dodane številke.'
            '''{}'' have been augmented with indices.': ''
            Categorical features have been encoded as numbers.: Kategorične vrednosti so predstavljene z indeksi.
        class `Error`:
            '{}': false
        def `__init__`:
            feature_type: false
            Feature names: Imena spremenljivk
            Generic: Generična imena
            feature_name: false
            Type a prefix ...: Določi predpono ...
            Custom feature name: Določi predpono imen spremenljivk
            'From variable:': 'Po vrednosti spremenljivke:'
            feature_names_column: false
            remove_redundant_inst: false
            Remove redundant instance: Odstrani odvečni primer
        def `send_report`:
            from variable: po spremenljivki
            '  ''{}''': false
            Feature names: Imena spremenljivk
            Data: Podatki
    __main__: false
    iris: false
widgets/data/owunique.py:
    class `OWUnique`:
        Unique: Enkratni
        icons/Unique.svg: false
        Filter instances unique by specified key attribute(s).: Filtriraj primere tako, da se ključne vrednosti ne ponavljajo
        Transform: false
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        Last instance: Zadnji primer
        First instance: Prvi primer
        Middle instance: Srednji primer
        Random instance: Naključni primer
        Discard non-unique instances: Zavrzi skupine z več primeri
        def `__init__`:
            selected_vars: false
            Group by: Upoštevane spremenljivke
            tiebreaker: false
            'Instance to select in each group:': 'Primer, ki predstavlja posamično skupino:'
            autocommit: false
            Commit: Uveljavi
    __main__: false
    iris: false
widgets/data/utils/histogram.py:
    class `ProportionalBarItem`:
        def `__init__`:
            If colors are provided, they must match the shape of distribution: false
        def `_draw_bars`:
            '#ccc': false
    class `Histogram`:
        def `__init__`:
            '#000': false
            Border tuple must be of size 4.: false
        def `_histogram`:
            Cannot calculate histogram on empty array: false
        def `_get_colors`:
            '#ccc': false
    __main__: false
    iris: false
    '#000': false
widgets/data/utils/preprocess.py:
    class `StandardItemModel`:
        def `moveRow`:
            '`moveRow` did not succeed! Data model might be ': false
            in an inconsistent state.: false
        def `moveRows`:
            '`moveRows` did not succeed! Data model might be ': false
            in an inconsistent state.: false
    class `Controller`:
        application/x-qwidget-ref: false
    class `SequenceFlow`:
        class `Frame`:
            def `__init__`:
                Remove: Odstrani
        def `dropEvent`:
            application/x-internal-move: false
        def `dragEnterEvent`:
            application/x-internal-move: false
        def `__startInternalDrag`:
            application/x-internal-move: false
widgets/data/utils/pythoneditor/brackethighlighter.py:
    class `BracketHighlighter`:
        '#0b0': false
        '#a22': false
        ({[: false
        )}]: false
        def `_iterateDocumentCharsForward`:
            Time is over: false
        def `_iterateDocumentCharsBackward`:
            Time is over: false
        def `_makeMatchSelection`:
            darkMode: false
            '#111111': false
widgets/data/utils/pythoneditor/completer.py:
    module: false
    class: false
    instance: false
    function: false
    param: false
    path: false
    keyword: false
    property: false
    statement: false
    class `CompletionWidget`:
        def `__init__`:
            QListWidget::item:selected {: false
            'background-color: lightgray;': false
            '}': false
        def `show_list`:
            point: false
        def `update_list`:
            end: false
            start: false
            text: false
        def `_get_cached_icon`:
            '%s is not a valid jedi type': false
            ..: false
            icons: false
            pythonscript: false
            .svg: false
        def `set_item_display`:
            text: false
            type: false
        def `get_html_item_representation`:
            <table width=": false
            '" height="': false
            '">': false
            <tr>: false
            '<td valign="middle" style="color: black;" style="margin-left:22px;">': false
            ' ': false
            '&nbsp;': false
            </td>: false
            '<td valign="middle" align="right" float="right" ': false
            'style="color: black;">': false
            </tr>: false
            </table>: false
        def `hide`:
            tooltip_widget: false
        def `keyPressEvent`:
            .: false
            ':': false
        def `is_up_to_date`:
            text: false
        def `focusOutEvent`:
            darwin: false
        def `trigger_completion_hint`:
            point: false
            textEdit: false
            newText: false
            insertText: false
            $: false
            python: false
            (: false
            documentation: false
    class `Completer`:
        def `_send_completion_request`:
            complete: false
        _CompletionRequest: false
        id: false
        code: false
        pos: false
        def `_handle_complete_reply`:
            complete: false
            parent_header: false
            msg_id: false
            content: false
            metadata: false
            _jupyter_types_experimental: false
            Jupyter API has changed, completions are unavailable.: false
            cursor_start: false
            type: false
            <unknown>: false
widgets/data/utils/pythoneditor/editor.py:
    class `PythonEditor`:
        e: false
        w: false
        n: false
        \n: false
        def `__init__`:
            darkMode: false
            '#111111': false
            '#ffffff': false
            '#444444': false
            '#000000': false
            '#ffee00': false
        def `_initActions`:
            Toggle comment line: false
            Ctrl+/: false
            Scroll up: false
            Ctrl+Up: false
            go-up: false
            Scroll down: false
            Ctrl+Down: false
            go-down: false
            Select and scroll Up: false
            Ctrl+Shift+Up: false
            Select and scroll Down: false
            Ctrl+Shift+Down: false
            Increase indentation: false
            Tab: false
            format-indent-more: false
            Decrease indentation: false
            Shift+Tab: false
            format-indent-less: false
            Autoindent line: false
            Ctrl+I: false
            Indent with 1 space: false
            Ctrl+Shift+Space: false
            Unindent with 1 space: false
            Ctrl+Shift+Backspace: false
            Undo: false
            edit-undo: false
            Redo: false
            edit-redo: false
            Move line up: false
            Alt+Up: false
            Move line down: false
            Alt+Down: false
            Delete line: false
            Alt+Del: false
            edit-delete: false
            Cut line: false
            Alt+X: false
            edit-cut: false
            Copy line: false
            Alt+C: false
            edit-copy: false
            Paste line: false
            Alt+V: false
            edit-paste: false
            Duplicate line: false
            Alt+D: false
        def `_onToggleCommentLine`:
            def `isHashCommentSelected`:
                '#': false
            '# ': false
        def `selectedText`:
            \u2029: false
            \n: false
        def `eol`:
            \r: false
            \n: false
            \r\n: false
            Invalid EOL value: false
        def `replaceText`:
            Invalid start position %d: false
            Invalid end position %d: false
        def `_setSolidEdgeGeometry`:
            '9': false
        def `keyPressEvent`:
            def `backspaceOverwrite`:
                ' ': false
            darwin: false
        def `_updateTabStopWidth`:
            ' ': false
        def `lines`:
            Invalid new value of "lines" attribute: false
            \n: false
        def `textForSaving`:
            \n: false
        def `_get_token_at`:
            tokens: false
            syntax_stack: false
        def `mapToAbsPosition`:
            Invalid line index %d: false
            Invalid column index %d: false
        def `mapToLineCol`:
            Invalid absolute position %d: false
        def `insert_completion`:
            start: false
            end: false
            text: false
        def `keyReleaseEvent`:
            _: false
            .: false
            'from ': false
            'import ': false
        def `_chooseVisibleWhitespace`:
            \t: false
            ' ': false
        def `_drawIndentMarkersAndEdge`:
            def `drawWhiteSpace`:
                ' ': false
            def `effectiveEdgePos`:
                \t: false
        def `insertFromMimeData`:
            ', ': false
            '''': false
            '''\"''\"''': false
        def `get_current_word_and_position`:
            def `is_special_character`:
                ([^\d\W]\w*): false
            ([^\d\W]\w*): false
    class `LineNumberArea`:
        def `__init__`:
            line_numbers: false
        def `__calculateWidth`:
            '9': false
        def `__allocateBits`:
            A margin cannot request negative number of bits: false
        def `setBlockValue`:
            The margin ': false
            ''' did not allocate any bits for the values': false
            ''' must be a positive integer': false
            ''' value exceeds the allocated bit range': false
        def `getBlockValue`:
            The margin ': false
            ''' did not allocate any bits for the values': false
widgets/data/utils/pythoneditor/indenter.py:
    class `Indenter`:
        def `text`:
            \t: false
            ' ': false
        def `autoIndentBlock`:
            \n: false
        def `onChangeSelectedBlocksIndent`:
            def `indentBlock`:
                ' ': false
            def `spacesCount`:
                ' ': false
            def `unIndentBlock`:
                \t: false
        def `onShortcutIndentAfterCursor`:
            def `insertIndent`:
                \t: false
                ' ': false
    class `IndentAlgBase`:
        def `computeIndent`:
            \n: false
        def `_makeIndentFromWidth`:
            \t: false
            ' ': false
        def `_makeIndentAsColumn`:
            \t: false
        def `findBracketBackward`:
            (: false
            ): false
            '[': false
            ']': false
            '{': false
            '}': false
            Invalid bracket "%s": false
            Not found: false
        def `findAnyBracketBackward`:
            (): false
            '[]': false
            '{}': false
            Not found: false
    class `IndentAlgPython`:
        def `_computeSmartIndent`:
            )]}: false
            ',': false
            continue: false
            break: false
            pass: false
            raise: false
            return: false
            'raise ': false
            'return ': false
            ':': false
            '{[': false
widgets/data/utils/pythoneditor/lines.py:
    class `Lines`:
        def `_checkAndConvertIndex`:
            Invalid block index: false
        def `__setitem__`:
            Attempt to replace %d lines with %d lines: false
        def `insert`:
            Invalid block index: false
widgets/data/utils/pythoneditor/rectangularselection.py:
    class `RectangularSelection`:
        text/rectangular-selection: false
        def `_visibleCharPositionGenerator`:
            \t: false
        def `_visibleToRealColumn`:
            \t: false
        def `cursors`:
            Rectangular selection area is too big: false
        def `copy`:
            \n: false
            utf8: false
        def `_indentUpTo`:
            \t: false
            ' ': false
        def `paste`:
            utf8: false
widgets/data/utils/pythoneditor/vim.py:
    a: false
    z: false
    Key_: false
    _: false
    def `isChar`:
        ' ': false
    normal: false
    insert: false
    replace character: false
    '#33cc33': false
    '#ff9900': false
    '#ff3300': false
    class `Vim`:
        def `extraSelections`:
            '#ffcc22': false
            '#000000': false
    class `Insert`:
        '#ff9900': false
        def `text`:
            insert: false
    class `ReplaceChar`:
        '#ee7777': false
        def `text`:
            replace char: false
    class `Replace`:
        '#ee7777': false
        def `text`:
            replace: false
    class `BaseCommandMode`:
        gg: false
        def `_moveCursor`:
            gg: false
            'Not expected motion ': false
    class `BaseVisual`:
        '#6699ff': false
        def `_processChar`:
            gg: false
            \n: false
        def `cmdJoinLines`:
            ' ': false
        def `cmdInternalPaste`:
            \n: false
    class `Visual`:
        visual: false
    class `VisualLines`:
        visual lines: false
    class `Normal`:
        '#33cc33': false
        normal: false
        def `_processChar`:
            gg: false
        def `cmdJoinLines`:
            ' ': false
        def `cmdInternalPaste`:
            \n: false
        def `cmdCompositeDelete`:
            gg: false
widgets/data/utils/pythoneditor/tests/base.py:
    class `SimpleWidget`:
        Simple widget: false
widgets/data/utils/pythoneditor/tests/run_all.py:
    __main__: false
    .: false
    test_*: false
    Suite created: false
    Run done: false
    OK: false
    Failed: false
widgets/data/utils/pythoneditor/tests/test_indenter/indenttest.py:
    ..: false
    tests: false
    class `IndentTest`:
        def `setUp`:
            INDENT_WIDTH: false
        def `setOrigin`:
            \n: false
        def `verifyExpected`:
            \n: false
        def `writeCursorPosition`:
            (%d,%d): false
        def `writeln`:
            \n: false
widgets/evaluate/__init__.py:
    Evaluate: null
    Evaluate classification/regression performance.: null
    '#C3F3F3': null
    icons/Category-Evaluate.svg: null
widgets/evaluate/owcalibrationplot.py:
    metric_definition: null
    name: null
    functions: null
    short_names: null
    explanation: null
    Calibration curve: null
    Classification accuracy: null
    F1: null
    Sensitivity and specificity: null
    sens: null
    spec: null
    '<p><b>Sensitivity</b> (falling) is the proportion of correctly ': null
    detected positive instances (TP&nbsp;/&nbsp;P).</p>: null
    '<p><b>Specificity</b> (rising) is the proportion of detected ': null
    negative instances (TN&nbsp;/&nbsp;N).</p>: null
    Precision and recall: null
    prec: null
    recall: null
    '<p><b>Precision</b> (rising) is the fraction of retrieved instances ': null
    that are relevant, TP&nbsp;/&nbsp;(TP&nbsp;+&nbsp;FP).</p>: null
    '<p><b>Recall</b> (falling) is the proportion of discovered relevant ': null
    instances, TP&nbsp;/&nbsp;P.</p>: null
    Pos and neg predictive value: null
    PPV: null
    TPV: null
    '<p><b>Positive predictive value</b> (rising) is the proportion of ': null
    correct positives, TP&nbsp;/&nbsp;(TP&nbsp;+&nbsp;FP).</p>: null
    '<p><b>Negative predictive value</b> is the proportion of correct ': null
    negatives, TN&nbsp;/&nbsp;(TN&nbsp;+&nbsp;FN).</p>: null
    True and false positive rate: null
    TPR: null
    FPR: null
    '<p><b>True and false positive rate</b> are proportions of detected ': null
    and omitted positive instances</p>: null
    class `ParameterSetter`:
        def `axis_items`:
            item: null
    class `OWCalibrationPlot`:
        Calibration Plot: null
        Calibration plot based on evaluation of classifiers.: null
        icons/CalibrationPlot.svg: null
        class `Inputs`:
            Evaluation Results: null
        class `Outputs`:
            Calibrated Model: null
        class `Error`:
            'Calibration plot requires a categorical ': null
            target variable.: null
            Empty result on input. Nothing to display.: null
            Remove test data instances with unknown classes.: null
            All data instances belong to target class.: null
            No data instances belong to target class.: null
        class `Warning`:
            Test folds where all data belongs to (non)-target are not shown.: null
            Instance for which the model couldn't compute probabilities are: null
            skipped.: null
            No valid data for model(s) {}: null
        class `Information`:
            'Can''t output a model: {}': null
        plot: null
        def `__init__`:
            Settings: null
            target_index: null
            'Target:': null
            display_rug: null
            Show rug: null
            fold_curves: null
            Curves for individual folds: null
            selected_classifiers: null
            classifier_names: null
            Classifier: null
            Metrics: null
            score: null
            output_calibration: null
            Sigmoid calibration: null
            Isotonic calibration: null
            Output model calibration: null
            Info: null
            auto_commit: null
            bottom: null
            left: null
        def `_set_explanation`:
            bottom: null
            Predicted probability: null
            Threshold probability to classify as positive: null
            left: null
        def `_initialize`:
            learner_names: null
            '#{}': null
        def `_rug`:
            pen: null
            pairs: null
        def `_prob_curve`:
            +: null
        def `_setup_plot`:
            ', ': null
            k: null
        def `get_info_text`:
            def `elided`:
                '...': null
            ? "<table>\n                            <tr>\n                       \
                \         <th align='right'>Threshold: p=</th>\n                 \
                \               <td colspan='4'>{self.threshold:.2f}<br/></td>\n \
                \                           </tr>"
            : null
            ? "<table>\n                            <tr>\n                       \
                \         <th align='right'>Threshold:</th>\n                    \
                \            <td colspan='4'>p = {self.threshold:.2f}<br/>\n     \
                \                           </td>\n                              \
                \  <tr/>\n                            </tr>"
            : null
            ? "<tr>\n                                <th></th>\n                 \
                \               {\"<td></td>\".join(f\"<td align='right'>{n}</td>\"\
                \n                                  for n in short_names)}\n     \
                \                       </tr>"
            : null
            <tr><th align='right'>{elided(name)}:</th>: null
            <td>/</td>: null
            <td>{curve[ind]:.3f}</td>: null
            </tr>: null
            <table>: null
        def `commit`:
            each training data sample produces a different model: null
            'test results do not contain stored models - try testing ': null
            on separate data or on training data: null
            select a single model - the widget can output only one: null
            cannot calibrate non-binary classes: null
            \n - {problem}: null
        def `send_report`:
            Target class: null
            Output model calibration: null
            Sigmoid calibration: null
            Isotonic calibration: null
    __main__: null
widgets/evaluate/owconfusionmatrix.py:
    class `BorderedItemDelegate`:
        def `paint`:
            t: null
            r: null
            b: null
            l: null
    class `OWConfusionMatrix`:
        Confusion Matrix: null
        'Display a confusion matrix constructed from ': null
        the results of classifier evaluations.: null
        icons/ConfusionMatrix.svg: null
        class `Inputs`:
            Evaluation Results: null
        class `Outputs`:
            Selected Data: null
        Number of instances: null
        Proportion of predicted: null
        Proportion of actual: null
        Sum of probabilities: null
        Number of correctly and incorrectly classified instances: null
        'Number of instances, distributed across columns ': null
        according to predicted probabilities: null
        'Clicking on cells or in headers outputs the corresponding ': null
        data instances: null
        click_cell: null
        class `Error`:
            Confusion Matrix cannot show regression results.: null
            Evaluation Results input contains invalid values: null
            Empty result on input. Nothing to display.: null
        def `__init__`:
            selected_learner: null
            learners: null
            Learners: null
            Output: null
            append_predictions: null
            Predictions: null
            append_probabilities: null
            Probabilities: null
            autocommit: null
            selected_quantity: null
            'Show: ': null
            Select Correct: null
            Select Misclassified: null
            Clear Selection: null
        def `_init_table`:
            Predicted: null
            Actual: null
            br: null
            ' ': null
        def `set_results`:
            N-ARY SUMMATION: null
            learner_names: null
            'Learner #{i + 1}': null
        def `_prepare_data`:
            '{}({})': null
            p({value}): null
        def `_update`:
            '{}': null
            '{:2.1f} %': null
            '{:2.1f}': null
            NA: null
            trbl: null
            'actual: {}\npredicted: {}': null
            t: null
            l: null
        def `send_report`:
            Confusion matrix for {} (showing {}): null
        def `migrate_settings`:
            selected_learner: null
    __main__: null
    iris: null
widgets/evaluate/owliftcurve.py:
    CurveData: null
    contacted: null
    respondents: null
    thresholds: null
    PointsAndHull: null
    points: null
    hull: null
    class `ParameterSetter`:
        Wide line: null
        Thin Line: null
        Default Line: null
        Solid line: null
        Dash line: null
        def `axis_items`:
            item: null
    class `OWLiftCurve`:
        Lift Curve: null
        'Construct and display a lift curve ': null
        from the evaluation of classifiers.: null
        icons/LiftCurve.svg: null
        lift: null
        cumulative gain: null
        class `Inputs`:
            Evaluation Results: null
        class `Warning`:
            Some curves are undefined; check models and data: null
        class `Error`:
            No defined curves; check models and data: null
        plot: null
        Lift: null
        TP Rate: null
        def `__init__`:
            Curve: null
            target_index: null
            'Target: ': null
            curve_type: null
            Lift Curve: null
            Cumulative Gains: null
            selected_classifiers: null
            classifier_names: null
            Models: null
            display_convex_hull: null
            Show convex hull: null
            Settings: null
            bottom: null
            P Rate: null
            left: null
        def `_initialize`:
            learner_names: null
            '#{i}': null
        def `_set_left_label`:
            left: null
        def `send_report`:
            Target class: null
    def `cumulative_gains`:
        array dimensions don't match: null
        mergesort: null
    __main__: null
widgets/evaluate/owpredictions.py:
    PredictorSlot: null
    predictor: null
    name: null
    results: null
    (None): null
    Difference: null
    Absolute difference: null
    Relative: null
    Absolute relative: null
    Don't show columns with errors: null
    Show difference between predicted and actual value: null
    Show absolute difference between predicted and actual value: null
    Show relative difference between predicted and actual value: null
    Show absolute value of relative difference between predicted and actual value: null
    class `OWPredictions`:
        Predictions: null
        icons/Predictions.svg: null
        Display predictions of models for an input dataset.: null
        class `Inputs`:
            Data: null
            Predictors: null
        class `Outputs`:
            Predictions: null
            Evaluation Results: null
        class `Warning`:
            Empty dataset: null
            Some model(s) predict a different target (see more ...)\n{}: null
            'Instances with missing targets ': null
            are ignored while scoring.: null
        class `Error`:
            Some predictor(s) failed (see more ...)\n{}: null
            Some scorer(s) failed (see more ...)\n{}: null
        (None): null
        Classes in data: null
        Classes known to the model: null
        Classes in data and model: null
        Don't show probabilities: null
        Show probabilities for classes in the data: null
        Show probabilities for classes known to the model,\n: null
        including those that don't appear in this data: null
        Show probabilities for classes in data that are also\n: null
        known to the model: null
        (Average over classes): null
        def `__init__`:
            Show probabilities for: null
            shown_probs: null
            show_probability_errors: null
            Show classification errors: null
            Show 1 - probability assigned to the correct class: null
            'Shown regression error: ': null
            show_reg_errors: null
            See tooltips for individual options: null
            Restore Original Order: null
            Show rows in the original order: null
            show_scores: null
            Show perfomance scores: null
            'Target class:': null
            target_class: null
        def `_call_predictors`:
            '{predictor.name}: {err}': null
        def `_update_scores`:
            N/A: null
            NA: null
            '{score:.3f}': null
        def `_update_score_table_visibility`:
            \n: null
        def `_set_errors`:
            \n: null
            '- {p.predictor.name}: {p.results}': null
            '- {pred.name} predicts ''{pred.domain.class_var.name}''': null
        def `_get_details`:
            Data:<br>: null
            <hr>: null
            'Model: {number} model{s}': null
            ' ({n_predictors - n_valid} failed)': null
            <ul>: null
            <li>{name}</li>: null
            </ul>: null
            Model:<br>No model on input.: null
        def `_update_prediction_delegate`:
            ignore: null
            .*All-NaN.*: null
        def `_add_classification_out_columns`:
            '{name} ({value})': null
        def `send_report`:
            \n: null
            <br>: null
            '<br>Showing probabilities for ': null
            all classes known to the model: null
            all classes that appear in the data: null
            'all classes that appear in the data ': null
            and are known to the model: null
            '''{self.class_var.values[class_idx]}''': null
            Info: null
            Data & Predictions: null
            Scores: null
            Target class: null
    class `ClassificationItemDelegate`:
        def `__init__`:
            ' : ': null
            '{{dist[{i}]:.2f}}': null
            '-': null
            '{probs} → {{value!s}}': null
            '{value!s}': null
            p({', '.join(tooltip_probabilities)}): null
    class `ErrorDelegate`:
        def `sizeHint`:
            X: null
    class `ClassificationErrorDelegate`:
        def `displayText`:
            '?': null
            '{value:.3f}': null
    class `RegressionItemDelegate`:
        def `__init__`:
            '{{value:{(target_format or ''%.2f'')[1:]}}}': null
    class `RegressionErrorDelegate`:
        def `displayText`:
            '?': null
            -∞: null
            ∞: null
    class `PredictionsModel`:
        def `headerData`:
            error: null
        def `errorColumn`:
            ignore: null
    def `tool_tip`:
        '{value:!s} {dist:!s}': null
    __main__: null
    iris.tab: null
    To err is human: null
widgets/evaluate/owrocanalysis.py:
    ROCPoints: null
    fpr: null
    tpr: null
    thresholds: null
    ROCCurve: null
    points: null
    hull: null
    ROCAveragedVert: null
    tpr_std: null
    ROCAveragedThresh: null
    fpr_std: null
    ROCData: null
    merged: null
    folds: null
    avg_vertical: null
    avg_threshold: null
    PlotCurve: null
    curve: null
    curve_item: null
    hull_item: null
    def `plot_curve`:
        +: null
    PlotAvgCurve: null
    confint_item: null
    def `plot_avg_curve`:
        +: null
    Some: null
    val: null
    PlotCurves: null
    merge: null
    class `OWROCAnalysis`:
        ROC Analysis: null
        'Display the Receiver Operating Characteristics curve ': null
        based on the evaluation of classifiers.: null
        icons/ROCAnalysis.svg: null
        class `Inputs`:
            Evaluation Results: null
        plot: null
        def `__init__`:
            Plot: null
            target_index: null
            Target: null
            Classifiers: null
            selected_classifiers: null
            classifier_names: null
            Curves: null
            roc_averaging: null
            Merge Predictions from Folds: null
            Mean TP Rate: null
            Mean TP and FP at Threshold: null
            Show Individual Curves: null
            display_convex_curve: null
            Show convex ROC curves: null
            display_convex_hull: null
            Show ROC convex hull: null
            Analysis: null
            display_def_threshold: null
            Default threshold (0.5) point: null
            display_perf_line: null
            Show performance line: null
            fp_cost: null
            'FP Cost:': null
            fn_cost: null
            'FN Cost:': null
            target_prior: null
            ' %': null
            Auto: null
            'Prior probability:': null
            bottom: null
            FP Rate (1-Specificity): null
            left: null
            TP Rate (Sensitivity): null
        def `_initialize`:
            learner_names: null
            '#{}': null
        def `_set_target_prior`:
            'color: gray;': null
        def `_setup_plot`:
            def `merge_averaging`:
                '{:.3f}': null
            Some ROC curves are undefined: null
            All ROC curves are undefined: null
        def `_update_axes_ticks`:
            def `enumticks`:
                '{x:.2f}': null
            bottom: null
            left: null
        def `_on_mouse_moved`:
            Thresholds:\n: null
            \n: null
            ({:s}) {:.3f}: null
        def `_on_target_prior_changed`:
            'color: black;': null
        def `send_report`:
            Target class: null
            Costs: null
            FP = {}, FN = {}: null
            Target probability: null
            '{} %': null
    def `interp`:
        xp and fp must have the same shape: null
        right: null
    def `roc_curve_vertical_average`:
        No curves: null
    def `roc_curve_threshold_average`:
        No curves: null
        left: null
    RocPoint: null
    threshold: null
    def `_create_results`:
        heart_disease: null
        '1100111001001000': null
    __main__: null
widgets/evaluate/owtestandscore.py:
    class `InputLearner`:
        Try[Orange.evaluation.Results]: null
        Try[float]: null
    class `Try`:
        class `Success`:
            __value: null
            def `__repr__`:
                '{}({!r})': null
        class `Fail`:
            __exception: null
            def `__repr__`:
                '{}({!r})': null
    class `State`:
        Waiting: null
        Running: null
        Done: null
        Cancelled: null
    class `OWTestAndScore`:
        Test and Score: null
        Cross-validation accuracy estimation.: null
        icons/TestLearners1.svg: null
        Cross Validation: null
        CV: null
        Orange.widgets.evaluate.owtestlearners.OWTestLearners: null
        class `Inputs`:
            Data: null
            Test Data: null
            Learner: null
            Preprocessor: null
        class `Outputs`:
            Predictions: null
            Evaluation Results: null
        Click on the table header to select shown columns: null
        click_header: null
        (None, show average over classes): null
        class `Error`:
            Test dataset is empty.: null
            Test data input requires a target variable.: null
            Number of folds exceeds the data size: null
            'Test and train datasets ': null
            have different target variables.: null
            Not enough memory.: null
            Test data may be incompatible with train data.: null
            '{}': null
        class `Warning`:
            Instances with unknown target values were removed from{}data.: null
            Missing separate test data input.: null
            Some scores could not be computed.: null
            'Test data is present but unused. ': null
            Select 'Test on test data' to use it.: null
            'Can''t run stratified {}-fold cross validation; ': null
            the least common class has only {} instances.: null
        class `Information`:
            Train data has been sampled: null
            Test data has been sampled: null
            Test data has been transformed to match the train data.: null
            Stratification is ignored for regression: null
            Stratification is ignored when there are: null
            ' multiple target variables.': null
        def `__init__`:
            resampling: null
            Cross validation: null
            n_folds: null
            'Number of folds: ': null
            cv_stratified: null
            Stratified: null
            Cross validation by feature: null
            fold_feature: null
            Random sampling: null
            n_repeats: null
            'Repeat train/test: ': null
            sample_size: null
            'Training set size: ': null
            '{} %': null
            shuffle_stratified: null
            Leave one out: null
            Test on train data: null
            Test on test data: null
            class_selection: null
            Evaluation results for target: null
            comparison_criterion: null
            'Compare models by:': null
            use_rope: null
            'Negligible diff.: ': null
            rope: null
            '<small>Table shows probabilities that the score for the model in ': null
            'the row is higher than that of the model in the column. ': null
            'Small numbers show the probability that the difference is ': null
            negligible.</small>: null
        def `set_train_data`:
            Train dataset is empty.: null
            Train data input requires a target variable.: null
            Target variable has no values.: null
            Target variable has only one value.: null
            Data has no features to learn from.: null
        def `_which_missing_data`:
            ' ': null
            ' train ': null
            ' test ': null
        def `update_stats_model`:
            '{:.3f}': null
            '{} (error)': null
            '{name} failed with error:\n': null
            '{exc.__class__.__name__}: {exc!s}': null
            \n: null
        def `_scores_by_folds`:
            weighted: null
        def `_fill_table`:
            '{p0:.3f}<br/><small>{rope:.3f}</small>': null
            p({row_name} > {col_name}) = {p0:.3f}\n: null
            p({row_name} = {col_name}) = {rope:.3f}: null
            '{p1:.3f}<br/><small>{rope:.3f}</small>': null
            p({col_name} > {row_name}) = {p1:.3f}\n: null
            p({col_name} = {row_name}) = {rope:.3f}: null
            '{p0:.3f}': null
            p({row_name} > {col_name}) = {p0:.3f}: null
            '{p1:.3f}': null
            p({col_name} > {row_name}) = {p1:.3f}: null
        def `_set_cells_na`:
            NA: null
            comparison cannot be computed: null
        def `send_report`:
            'Stratified ': null
            Sampling type: null
            '{}{}-fold Cross validation': null
            Leave one out: null
            '{}Shuffle split, {} random samples with {}% data ': null
            No sampling, test on training data: null
            No sampling, test on testing data: null
            Target class: null
            (): null
            Settings: null
            Scores: null
        def `migrate_settings`:
            resampling: null
            context_settings: null
            classes: null
        def `__update`:
            self.resampling %s: null
        def `__submit`:
            Running: null
        def `__task_complete`:
            Future[Results]: null
            'testing error (in __task_complete):': null
            \n: null
    def `results_add_by_model`:
        def `is_empty`:
            models: null
            row_indices: null
        probabilities: null
    def `results_one_vs_rest`:
        I({}=={}): null
        'False': null
        'True': null
    __main__: null
    iris: null
widgets/evaluate/utils.py:
    def `check_results_adequacy`:
        invalid_results: null
        Results do not include information on test data.: null
        Categorical target variable is required.: null
        Empty result on input. Nothing to display.: null
        Results contain invalid values.: null
    def `results_for_preview`:
        heart_disease: null
        l2: null
        l1: null
        LR l2: null
        LR l1: null
        SVM: null
        Nu SVM: null
    AUC: null
    CA: null
    F1: null
    Precision: null
    Recall: null
    MSE: null
    RMSE: null
    MAE: null
    R2: null
    def `learner_name`:
        name: null
    def `usable_scorers`:
        abstract: null
        'Passing Variable to usable_scorers is deprecated, and using Domain ': null
        'is preferred. In light of this change, all Scorers should implement ': null
        the is_compatible method.: null
    def `scorer_caller`:
        def `thunked`:
            ignore: null
            ((F-score|Precision)) is ill-defined.*: null
            weighted: null
    class `ScoreTable`:
        class `ItemDelegate`:
            def `displayText`:
                '{value:.3f}': null
        def `__init__`:
            C-Index: null
            Method: null
        def `update_header`:
            Model: null
            Train time [s]: null
            Test time [s]: null
widgets/evaluate/tests/base.py:
    class `EvaluateTest`:
        def `test_many_evaluation_results`:
            iris: null
            Evaluation Results: null
widgets/model/__init__.py:
    Model: null
    Prediction.: null
    '#FAC1D9': null
    icons/Category-Model.svg: null
widgets/model/owadaboost.py:
    class `OWAdaBoost`:
        AdaBoost: null
        'An ensemble meta-algorithm that combines weak learners ': null
        'and adapts to the ''hardness'' of each training sample. ': null
        icons/AdaBoost.svg: null
        Orange.widgets.classify.owadaboost.OWAdaBoostClassification: null
        Orange.widgets.regression.owadaboostregression.OWAdaBoostRegression: null
        boost: null
        class `Inputs`:
            Learner: null
        SAMME: null
        SAMME.R: null
        Linear: null
        Square: null
        Exponential: null
        class `Error`:
            The base learner does not support weights.: null
        def `add_main_layout`:
            Parameters: null
            'Base estimator: ': null
            n_estimators: null
            'Number of estimators:': null
            learning_rate: null
            'Learning rate:': null
            random_seed: null
            'Fixed seed for random generator:': null
            use_random_seed: null
            Boosting method: null
            algorithm_index: null
            'Classification algorithm:': null
            loss_index: null
            'Regression loss function:': null
        def `set_base_learner`:
            'Base estimator: INVALID': null
            'Base estimator: %s': null
        def `get_learner_parameters`:
            Base estimator: null
            Number of estimators: null
            Algorithm (classification): null
            Loss (regression): null
    __main__: null
    iris: null
widgets/model/owcalibratedlearner.py:
    class `OWCalibratedLearner`:
        Calibrated Learner: null
        'Wraps another learner with probability calibration and ': null
        decision threshold optimization: null
        icons/CalibratedLearner.svg: null
        calibration: null
        threshold: null
        Sigmoid calibration: null
        Isotonic calibration: null
        No calibration: null
        Sigmoid: null
        Isotonic: null
        Optimize classification accuracy: null
        Optimize F1 score: null
        No threshold optimization: null
        CA: null
        F1: null
        class `Inputs`:
            Base Learner: null
        def `add_main_layout`:
            calibration: null
            Probability calibration: null
            threshold: null
            Decision threshold optimization: null
        def `_set_default_name`:
            ' + ': null
        def `get_learner_parameters`:
            Calibrate probabilities: null
            Threshold optimization: null
    __main__: null
    heart_disease: null
widgets/model/owconstant.py:
    class `OWConstant`:
        Constant: null
        'Predict the most frequent class or mean value ': null
        from the training set.: null
        icons/Constant.svg: null
        Orange.widgets.classify.owmajority.OWMajority: null
        Orange.widgets.regression.owmean.OWMean: null
        majority: null
        mean: null
    __main__: null
    iris: null
widgets/model/owcurvefit.py:
    isclose: null
    inf: null
    nan: null
    arccos: null
    arccosh: null
    arcsin: null
    arcsinh: null
    arctan: null
    arctan2: null
    arctanh: null
    ceil: null
    copysign: null
    cos: null
    cosh: null
    degrees: null
    e: null
    exp: null
    expm1: null
    fabs: null
    floor: null
    fmod: null
    gcd: null
    hypot: null
    isfinite: null
    isinf: null
    isnan: null
    ldexp: null
    log: null
    log10: null
    log1p: null
    log2: null
    pi: null
    power: null
    radians: null
    remainder: null
    sin: null
    sinh: null
    sqrt: null
    tan: null
    tanh: null
    trunc: null
    round: null
    abs: null
    any: null
    all: null
    class `Parameter`:
        def `__repr__`:
            'Parameter(name={self.name}, initial={self.initial}, ': null
            'use_lower={self.use_lower}, lower={self.lower}, ': null
            use_upper={self.use_upper}, upper={self.upper}): null
    class `ParametersWidget`:
        def `_setup_gui`:
            Name: null
            Initial value: null
            Lower bound: null
            Upper bound: null
            +: null
        def `_add_row`:
            p{row_id + 1}: null
            ×: null
            minimum: null
            maximum: null
    class `OWCurveFit`:
        Curve Fit: null
        Fit a function to data.: null
        icons/CurveFit.svg: null
        function: null
        class `Outputs`:
            Coefficients: null
        class `Warning`:
            Duplicated parameter name.: null
            'Unused parameter ''{}'' in ': null
            '''Parameters'' declaration.': null
            Provide data on the input.: null
        class `Error`:
            Invalid expression.: null
            Missing a fitting parameter.\n: null
            Use 'Feature Constructor' widget instead.: null
            Unknown parameter '{}'.\n: null
            Declare the parameter in 'Parameters' box: null
            'Some parameters and features have the same ': null
            name '{}'.: null
        Select Feature: null
        Select Parameter: null
        Select Function: null
        def `add_main_layout`:
            Parameters: null
            Expression: null
            expression: null
            Expression...: null
            _feature: null
            _parameter: null
            _function: null
        def `__on_function_added`:
            arctan2: null
            copysign: null
            fmod: null
            gcd: null
            hypot: null
            isclose: null
            ldexp: null
            power: null
            remainder: null
            (,): null
            (): null
        def `get_learner_parameters`:
            Expression: null
        def `check_data`:
            Data has no continuous features.: null
        def `__validate_expression`:
            eval: null
    __main__: null
    housing: null
widgets/model/owgradientboosting.py:
    class `LearnerItemModel`:
        Extreme Gradient Boosting (xgboost): null
        xgboost: null
        Extreme Gradient Boosting Random Forest (xgboost): null
        Gradient Boosting (catboost): null
        catboost: null
        def `_add_data`:
            '{name}': null
            '{lib} is not installed': null
    class `BaseEditor`:
        def `_add_main_layout`:
            callback: null
            alignment: null
            controlWidth: null
            Basic Properties: null
            n_estimators: null
            'Number of trees:': null
            learning_rate: null
            'Learning rate: ': null
            random_state: null
            Replicable training: null
            Growth Control: null
            max_depth: null
            'Limit depth of individual trees: ': null
            Subsampling: null
        def `get_arguments`:
            n_estimators: null
            learning_rate: null
            random_state: null
            max_depth: null
        def `get_learner_parameters`:
            Method: null
            Number of trees: null
            Learning rate: null
            Replicable training: null
            'Yes': null
            'No': null
            Maximum tree depth: null
    class `RegEditor`:
        def `_add_main_layout`:
            'Regularization:': null
            lambda_index: null
        def `_set_lambda_label`:
            'Lambda: {}': null
        def `get_arguments`:
            reg_lambda: null
        def `get_learner_parameters`:
            Regularization strength: null
    class `GBLearnerEditor`:
        def `_add_main_layout`:
            subsample: null
            'Fraction of training instances: ': null
            min_samples_split: null
            'Do not split subsets smaller than: ': null
        def `get_arguments`:
            subsample: null
            min_samples_split: null
        def `get_learner_parameters`:
            Fraction of training instances: null
            Stop splitting nodes with maximum instances: null
    class `CatGBLearnerEditor`:
        def `_add_main_layout`:
            colsample_bylevel: null
            'Fraction of features for each tree: ': null
        def `get_arguments`:
            colsample_bylevel: null
        def `get_learner_parameters`:
            Fraction of features for each tree: null
    class `XGBBaseEditor`:
        def `_add_main_layout`:
            callback: null
            alignment: null
            controlWidth: null
            subsample: null
            'Fraction of training instances: ': null
            colsample_bytree: null
            'Fraction of features for each tree: ': null
            colsample_bylevel: null
            'Fraction of features for each level: ': null
            colsample_bynode: null
            'Fraction of features for each split: ': null
        def `get_arguments`:
            subsample: null
            colsample_bytree: null
            colsample_bylevel: null
            colsample_bynode: null
        def `get_learner_parameters`:
            Fraction of training instances: null
            Fraction of features for each tree: null
            Fraction of features for each level: null
            Fraction of features for each split: null
    class `OWGradientBoosting`:
        Gradient Boosting: null
        Predict using gradient boosting on decision trees.: null
        icons/GradientBoosting.svg: null
        catboost: null
        gradient: null
        boost: null
        tree: null
        forest: null
        xgb: null
        gb: null
        extreme: null
        def `add_main_layout`:
            Method: null
            method_index: null
    __main__: null
    iris: null
widgets/model/owknn.py:
    class `OWKNNLearner`:
        kNN: null
        Predict according to the nearest training instances.: null
        icons/KNN.svg: null
        Orange.widgets.classify.owknn.OWKNNLearner: null
        Orange.widgets.regression.owknnregression.OWKNNRegression: null
        k nearest: null
        knearest: null
        neighbor: null
        neighbour: null
        uniform: null
        distance: null
        euclidean: null
        manhattan: null
        chebyshev: null
        mahalanobis: null
        def `add_main_layout`:
            Neighbors: null
            n_neighbors: null
            'Number of neighbors:': null
            metric_index: null
            'Metric:': null
            weight_index: null
            'Weight:': null
        def `get_learner_parameters`:
            Number of neighbours: null
            Metric: null
            Weight: null
    __main__: null
    iris: null
widgets/model/owlinearregression.py:
    class `OWLinearRegression`:
        Linear Regression: null
        'A linear regression algorithm with optional L1 (LASSO), ': null
        L2 (ridge) or L1L2 (elastic net) regularization.: null
        icons/LinearRegression.svg: null
        Orange.widgets.regression.owlinearregression.OWLinearRegression: null
        ridge: null
        lasso: null
        elastic net: null
        class `Outputs`:
            Coefficients: null
        No regularization: null
        Ridge regression (L2): null
        Lasso regression (L1): null
        Elastic net regression: null
        def `add_main_layout`:
            Parameters: null
            fit_intercept: null
            Fit intercept (unchecking it fixes it to zero): null
            Regularization: null
            reg_type: null
            'Regularization strength:': null
            alpha_index: null
            'Elastic net mixing:': null
            L1: null
            l2_ratio: null
            L2: null
        def `_set_alpha_label`:
            'Alpha: {}': null
        def `_set_l2_ratio_label`:
            '{:.{}f} : {:.{}f}': null
        def `update_model`:
            coef: null
            name: null
            intercept: null
            coefficients: null
        def `get_learner_parameters`:
            No Regularization: null
            Ridge Regression (L2) with α={}: null
            Lasso Regression (L1) with α={}: null
            Elastic Net Regression with α={}: null
            ' and L1:L2 ratio of {}:{}': null
            Regularization: null
            Fit intercept: null
            'No': null
            'Yes': null
    __main__: null
    housing: null
widgets/model/owloadmodel.py:
    class `OWLoadModel`:
        Load Model: null
        Load a model from an input file.: null
        Orange.widgets.classify.owloadclassifier.OWLoadClassifier: null
        icons/LoadModel.svg: null
        file: null
        open: null
        model: null
        class `Outputs`:
            Model: null
        class `Error`:
            An error occured while reading '{}': null
        ;;: null
        def `__init__`:
            File: null
            '...': null
            Reload: null
        def `browse_file`:
            Open Distance File: null
        def `open_file`:
            rb: null
    class `OWLoadModelDropHandler`:
        def `canDropFile`:
            .pkcls: null
        def `parametersFromFile`:
            recent_paths: null
    __main__: null
widgets/model/owlogisticregression.py:
    class `OWLogisticRegression`:
        Logistic Regression: null
        'The logistic regression classification algorithm with ': null
        LASSO (L1) or ridge (L2) regularization.: null
        icons/LogisticRegression.svg: null
        Orange.widgets.classify.owlogisticregression.OWLogisticRegression: null
        class `Outputs`:
            Coefficients: null
        Lasso (L1): null
        Ridge (L2): null
        None: null
        l1: null
        l2: null
        none: null
        class `Warning`:
            Weighting by class may decrease performance.: null
        def `add_main_layout`:
            penalty_type: null
            'Regularization type: ': null
            'Strength:': null
            Weak: null
            margin-top:6px: null
            C_index: null
            Strong: null
            class_weight: null
            Balance class distribution: null
            Weigh classes inversely proportional to their frequencies.: null
        def `set_c`:
            none: null
            C={}: null
            C={:.3f}: null
            N/A: null
        def `create_learner`:
            balanced: null
            none: null
        def `get_learner_parameters`:
            Regularization: null
            '{}, C={}, class weights={}': null
    def `create_coef_table`:
        name: null
        intercept: null
        coefficients: null
    __main__: null
    zoo: null
widgets/model/ownaivebayes.py:
    class `OWNaiveBayes`:
        Naive Bayes: null
        'A fast and simple probabilistic classifier based on ': null
        Bayes' theorem with the assumption of feature independence.: null
        icons/NaiveBayes.svg: null
        Orange.widgets.classify.ownaivebayes.OWNaiveBayes: null
    __main__: null
    iris: null
widgets/model/owneuralnetwork.py:
    class `Task`:
        def `setFuture`:
            future is already set: null
    class `OWNNLearner`:
        Neural Network: null
        'A multi-layer perceptron (MLP) algorithm with ': null
        backpropagation.: null
        icons/NN.svg: null
        mlp: null
        identity: null
        logistic: null
        tanh: null
        relu: null
        Identity: null
        Logistic: null
        ReLu: null
        lbfgs: null
        sgd: null
        adam: null
        L-BFGS-B: null
        SGD: null
        Adam: null
        100,: null
        class `Warning`:
            'ANN without hidden layers is equivalent to logistic ': null
            'regression with worse fitting.\nWe recommend using ': null
            logistic regression.: null
        def `add_main_layout`:
            'Neurons in hidden layers:': null
            hidden_layers_input: null
            'A list of integers defining neurons. Length of list ': null
            defines the number of layers. E.g. 4, 2, 2, 3.: null
            e.g. 10,: null
            'Activation:': null
            activation_index: null
            'Solver:': null
            solver_index: null
            alpha_index: null
            'Maximal number of iterations:': null
            max_iterations: null
            'Max iterations:': null
            replicable: null
            Replicable training: null
        def `set_alpha`:
            'Regularization, α={}:': null
        def `setup_layout`:
            Cancel: null
        def `get_learner_parameters`:
            Hidden layers: null
            ', ': null
            Activation: null
            Solver: null
            Alpha: null
            Max iterations: null
            Replicable training: null
        def `get_hidden_layers`:
            \d+: null
        def `__update`:
            max_iter: null
        def `migrate_settings`:
            alpha: null
            alpha_index: null
    __main__: null
    iris: null
widgets/model/owrandomforest.py:
    class `OWRandomForest`:
        Random Forest: null
        Predict using an ensemble of decision trees.: null
        icons/RandomForest.svg: null
        Orange.widgets.classify.owrandomforest.OWRandomForest: null
        Orange.widgets.regression.owrandomforestregression.OWRandomForestRegression: null
        class `Error`:
            Insufficient number of attributes ({}): null
        class `Warning`:
            Weighting by class may decrease performance.: null
        def `add_main_layout`:
            Basic Properties: null
            n_estimators: null
            'Number of trees: ': null
            max_features: null
            'Number of attributes considered at each split: ': null
            use_max_features: null
            use_random_state: null
            Replicable training: null
            class_weight: null
            Balance class distribution: null
            Weigh classes inversely proportional to their frequencies.: null
            Growth Control: null
            max_depth: null
            'Limit depth of individual trees: ': null
            use_max_depth: null
            min_samples_split: null
            'Do not split subsets smaller than: ': null
            use_min_samples_split: null
        def `create_learner`:
            n_estimators: null
            max_features: null
            random_state: null
            max_depth: null
            min_samples_split: null
            class_weight: null
            balanced: null
        def `get_learner_parameters`:
            Number of trees: null
            Maximal number of considered features: null
            unlimited: null
            Replicable training: null
            'No': null
            'Yes': null
            Maximal tree depth: null
            Stop splitting nodes with maximum instances: null
            Class weights: null
    __main__: null
    iris: null
widgets/model/owrules.py:
    class `CustomRuleClassifier`:
        def `__init__`:
            Rule ordering: null
            Covering algorithm: null
        def `predict`:
            ordered: null
            exclusive: null
            unordered: null
            weighted: null
    class `CustomRuleLearner`:
        Custom rule inducer: null
        def `__init__`:
            Rule ordering: null
            Covering algorithm: null
            exclusive: null
            weighted: null
            Gamma: null
            Beam width: null
            Evaluation measure: null
            entropy: null
            laplace: null
            wracc: null
            Minimum rule coverage: null
            Maximum rule length: null
            Default alpha: null
            Parent alpha: null
        def `fit_storage`:
            ordered: null
            weighted: null
            unordered: null
    class `OWRuleLearner`:
        CN2 Rule Induction: null
        Induce rules from data using CN2 algorithm.: null
        icons/CN2RuleInduction.svg: null
        Orange.widgets.classify.owrules.OWRuleLearner: null
        ordered: null
        unordered: null
        exclusive: null
        weighted: null
        entropy: null
        laplace: null
        wracc: null
        CN2 rule inducer: null
        def `add_main_layout`:
            Rule ordering: null
            rule_ordering: null
            Ordered: null
            Unordered: null
            Covering algorithm: null
            covering_algorithm: null
            Exclusive: null
            Weighted: null
            gamma: null
            'γ:': null
            weighted: null
            Rule search: null
            evaluation_measure: null
            'Evaluation measure:': null
            Entropy: null
            Laplace accuracy: null
            WRAcc: null
            beam_width: null
            'Beam width:': null
            Rule filtering: null
            min_covered_examples: null
            'Minimum rule coverage:': null
            max_rule_length: null
            'Maximum rule length:': null
            default_alpha: null
            'Statistical significance (default α):': null
            checked_default_alpha: null
            parent_alpha: null
            'Relative significance (parent α):': null
            checked_parent_alpha: null
        def `settings_changed`:
            weighted: null
        def `get_learner_parameters`:
            Rule ordering: null
            Covering algorithm: null
            Gamma: null
            Evaluation measure: null
            Beam width: null
            Minimum rule coverage: null
            Maximum rule length: null
            Default alpha: null
            Parent alpha: null
    __main__: null
    iris: null
widgets/model/owsavemodel.py:
    class `OWSaveModel`:
        Save Model: null
        Save a trained model to an output file.: null
        icons/SaveModel.svg: null
        Orange.widgets.classify.owsaveclassifier.OWSaveClassifier: null
        class `Inputs`:
            Model: null
        Pickled model (*.pkcls): null
        def `do_save`:
            wb: null
    __main__: null
widgets/model/owsgd.py:
    class `OWSGD`:
        Stochastic Gradient Descent: null
        'Minimize an objective function using a stochastic ': null
        approximation of gradient descent.: null
        icons/SGD.svg: null
        Orange.widgets.regression.owsgdregression.OWSGDRegression: null
        sgd: null
        class `Outputs`:
            Coefficients: null
        Squared Loss: null
        squared_error: null
        Huber: null
        huber: null
        ε insensitive: null
        epsilon_insensitive: null
        Squared ε insensitive: null
        squared_epsilon_insensitive: null
        Hinge: null
        hinge: null
        Logistic regression: null
        log: null
        Modified Huber: null
        modified_huber: null
        Squared Hinge: null
        squared_hinge: null
        Perceptron: null
        perceptron: null
        None: null
        none: null
        Lasso (L1): null
        l1: null
        Ridge (L2): null
        l2: null
        Elastic Net: null
        elasticnet: null
        Constant: null
        constant: null
        Optimal: null
        optimal: null
        Inverse scaling: null
        invscaling: null
        SGD: null
        def `_add_algorithm_to_layout`:
            Loss functions: null
            cls_loss_function_index: null
            cls_epsilon: null
            'ε: ': null
            'Classification: ': null
            reg_loss_function_index: null
            reg_epsilon: null
            'Regression: ': null
        def `_add_regularization_to_layout`:
            Regularization: null
            penalty_index: null
            l1_ratio: null
            'Mixing: ': null
            alpha: null
            'Strength (α): ': null
        def `_add_learning_params_to_layout`:
            Optimization: null
            learning_rate_index: null
            'Learning rate: ': null
            eta0: null
            'Initial learning rate (η<sub>0</sub>): ': null
            power_t: null
            'Inverse scaling exponent (t): ': null
            max_iter: null
            'Number of iterations: ': null
            tol: null
            'Tolerance (stopping criterion): ': null
            tol_enabled: null
            shuffle: null
            Shuffle data after each iteration: null
            random_state: null
            'Fixed seed for random shuffling: ': null
            use_random_state: null
        def `_on_cls_loss_change`:
            huber: null
            epsilon_insensitive: null
            squared_epsilon_insensitive: null
        def `_on_reg_loss_change`:
            huber: null
            epsilon_insensitive: null
            squared_epsilon_insensitive: null
        def `_on_regularization_change`:
            l1: null
            l2: null
            elasticnet: null
        def `_on_learning_rate_change`:
            constant: null
            invscaling: null
        def `create_learner`:
            random_state: null
        def `get_learner_parameters`:
            Classification loss function: null
            huber: null
            epsilon_insensitive: null
            squared_epsilon_insensitive: null
            Epsilon (ε) for classification: null
            Regression loss function: null
            Epsilon (ε) for regression: null
            Regularization: null
            l1: null
            l2: null
            elasticnet: null
            Regularization strength (α): null
            Elastic Net mixing parameter (L1 ratio): null
            Learning rate: null
            constant: null
            invscaling: null
            Initial learning rate (η<sub>0</sub>): null
            Inverse scaling exponent (t): null
            Shuffle data after each iteration: null
            Random seed for shuffling: null
        def `update_model`:
            coef: null
            name: null
            intercept: null
            coefficients: null
        def `migrate_settings`:
            max_iter: null
            n_iter: null
            tol_enabled: null
    __main__: null
    iris: null
widgets/model/owstack.py:
    class `OWStackedLearner`:
        Stacking: null
        Stack multiple models.: null
        icons/Stacking.svg: null
        Stack: null
        class `Inputs`:
            Learners: null
            Aggregate: null
        def `get_learner_parameters`:
            Base learners: null
            Aggregator: null
            default: null
    __main__: null
    iris: null
widgets/model/owsvm.py:
    class `OWSVM`:
        SVM: null
        'Support Vector Machines map inputs to higher-dimensional ': null
        feature spaces.: null
        icons/SVM.svg: null
        Orange.widgets.classify.owsvmclassification.OWSVMClassification: null
        Orange.widgets.regression.owsvmregression.OWSVMRegression: null
        support vector machines: null
        class `Outputs`:
            Support Vectors: null
            Support vectors: null
        class `Warning`:
            Input data is sparse, default preprocessing is to scale it.: null
        auto: null
        Linear: null
        x⋅y: null
        Polynomial: null
        (g x⋅y + c)<sup>d</sup>: null
        RBF: null
        exp(-g|x-y|²): null
        Sigmoid: null
        tanh(g x⋅y + c): null
        def `_add_type_box`:
            svm_type: null
            SVM Type: null
            SVM: null
            C: null
            epsilon: null
            'Cost (C):': null
            'Regression loss epsilon (ε):': null
            ν-SVM: null
            nu_C: null
            nu: null
            'Regression cost (C):': null
            'Complexity bound (ν):': null
        def `_add_kernel_box`:
            Kernel: null
            kernel_type: null
            'Kernel: %(kernel_eq)s': null
            gamma: null
            ' g: ': null
            coef0: null
            ' c: ': null
            degree: null
            ' d: ': null
        def `_add_optimization_box`:
            Optimization Parameters: null
            tol: null
            'Numerical tolerance: ': null
            max_iter: null
            'Iteration limit: ': null
            limit_iter: null
        def `create_learner`:
            linear: null
            poly: null
            rbf: null
            sigmoid: null
            kernel: null
            degree: null
            gamma: null
            coef0: null
            probability: null
            tol: null
            max_iter: null
            preprocessors: null
        def `get_learner_parameters`:
            SVM type: null
            SVM, C={}, ε={}: null
            ν-SVM, ν={}, C={}: null
            Numerical tolerance: null
            '{:.6}': null
            Iteration limt: null
            unlimited: null
        def `_report_kernel_parameters`:
            Kernel: null
            Linear: null
            Polynomial, ({g:.4} x⋅y + {c:.4})<sup>{d}</sup>: null
            RBF, exp(-{:.4}|x-y|²): null
            Sigmoid, tanh({g:.4} x⋅y + {c:.4}): null
    __main__: null
    iris: null
widgets/model/owtree.py:
    class `OWTreeLearner`:
        Tree: Drevo
        A tree algorithm with forward pruning.: Gradnja drevesa z rezanjem.
        icons/Tree.svg: false
        Orange.widgets.classify.owclassificationtree.OWClassificationTree: false
        Orange.widgets.regression.owregressiontree.OWRegressionTree: false
        Orange.widgets.classify.owclassificationtree.OWTreeLearner: false
        Orange.widgets.regression.owregressiontree.OWTreeLearner: false
        Classification Tree: Klasifikacijsko drevo
        'Min. number of instances in leaves: ': 'Min. število primerov v listu: '
        limit_min_leaf: false
        min_leaf: false
        'Do not split subsets smaller than: ': 'Ne deli podmnožic manjših od: '
        limit_min_internal: false
        min_internal: false
        'Limit the maximal tree depth to: ': 'Omeji globino drevesa na: '
        limit_depth: false
        max_depth: false
        'Stop when majority reaches [%]: ': 'Ustavi delitev, ko delež večinskega razreda
            doseže [%]: '
        limit_majority: false
        sufficient_majority: false
        def `add_main_layout`:
            Parameters: Parametri
            binary_trees: false
            Induce binary tree: Sestavi binarno drevo
        def `get_learner_parameters`:
            Pruning: Rezanje
            ', ': true
            at least {number} instance{s} in leaves: null
            at least {number} instance{s} in internal nodes: null
            maximum depth {}: dovoljena globina {}
            None: Brez
            Splitting: Delitev
            'Stop splitting when majority reaches %d%% ': Ustavi, ko delež večinskega
                razreda doseže %d%%
            (classification only): (samo za klasifikacijo)
            Binary trees: Dvojiško drevo
            'No': Ne
            'Yes': Da
    __main__: false
    iris: false
widgets/report/owreport.py:
    OWReport: null
    HAVE_REPORT: null
    __main__: null
    iris: null
widgets/report/report.py:
    DataReport: null
    describe_data: null
    describe_data_brief: null
    describe_domain: null
    describe_domain_brief: null
    def `describe_domain`:
        def `clip_attrs`:
            ' (total: {{}} {})': null
        Features: null
        features: null
        Meta attributes: null
        meta attributes: null
        Target: null
        targets variables: null
    def `describe_data`:
        Data instances: null
    def `describe_domain_brief`:
        Features: null
        None: null
        Meta attributes: null
        Target: null
        Class '{}': null
        Numeric variable '{}': null
        Targets: null
    def `describe_data_brief`:
        Data instances: Število primerov
widgets/report/tests/__init__.py:
    def `suite`:
        test*.py: null
    __main__: null
    suite: null
widgets/tests/__init__.py:
    def `load_tests`:
        _in_load_tests: null
        test*.py: null
widgets/tests/base.py:
    class `BaseParameterMapping`:
        def `__init__`:
            both: null
        def `__str__`:
            both: null
            '%s (%s)': null
    class `ParameterMapping`:
        def `_default_values`:
            '{} is not supported': null
        def `_default_get_value`:
            '{} is not supported': null
        def `_default_set_value`:
            '{} is not supported': null
    class `WidgetLearnerTestMixin`:
        def `init`:
            testing_dataset_cls: null
            testing_dataset_reg: null
            Model: null
            Classifier: null
            Predictor: null
        def `test_has_unconditional_apply`:
            unconditional_apply: null
        def `test_input_data`:
            Data: null
        def `test_input_data_disconnect`:
            Data: null
        def `test_input_data_learner_adequacy`:
            Data: null
        def `test_input_preprocessor`:
            Preprocessor: null
            Preprocessor not added to widget preprocessors: null
            Preprocessors were not passed to the learner: null
        def `test_input_preprocessors`:
            Preprocessor: null
            '`PreprocessorList` was not added to preprocessors': null
        def `test_input_preprocessor_disconnect`:
            Preprocessor: null
            Preprocessors not removed on disconnect.: null
        def `test_output_learner`:
            Learner: null
            Does not initialize the learner output: null
            Does not send a new learner instance on `Apply`.: null
        def `test_output_model`:
            Data: null
        def `test_output_learner_name`:
            Learner Name: null
            Learner: null
        def `test_output_model_name`:
            Model Name: null
            Data: null
        def `test_output_model_picklable`:
            Data: null
        def `_get_param_value`:
            both: null
        def `test_parameters_default`:
            Data: null
        def `test_parameters`:
            Data: null
            Mismatching setting for parameter '%s': null
            Learner: null
        def `test_params_trigger_settings_changed`:
            Data: null
            apply(%s): null
        def `_should_check_parameter`:
            classification: null
            regression: null
            both: null
    class `WidgetOutputsTestMixin`:
        def `init`:
            iris: null
        def `test_outputs`:
            Selected Data: null
        def `_select_data`:
            Subclasses should implement select_data: null
    class `ProjectionWidgetTestMixin`:
        def `init`:
            iris: null
        def `test_setup_graph`:
            Did not finish in the specified {timeout}ms timeout: null
        def `test_attr_label_metas`:
            zoo: null
        def `test_plot_once`:
            heart_disease: null
        def `test_subset_data_color`:
            Did not finish in the specified {timeout}ms timeout: null
            '#46befa': null
            brush: null
            '#000000': null
        def `test_dragging_tooltip`:
            heart_disease: null
        def `test_sparse_data`:
            iris: null
        def `test_saved_selection`:
            Did not finish in the specified {timeout}ms timeout: null
        def `test_hidden_effective_variables`:
            c1: null
            hidden: null
            c2: null
            cls: null
            a: null
            b: null
        def `test_visual_settings`:
            Helvetica: null
            Fonts: null
            Font family: null
            Title: null
            Font size: null
            Italic: null
            Label: null
            Categorical legend: null
            Numerical legend: null
            Annotations: null
            Foo: null
    class `AnchorProjectionWidgetTestMixin`:
        def `test_embedding_missing_values`:
            heart_disease: null
        def `test_sparse_data`:
            iris: null
        def `test_visual_settings`:
            Helvetica: null
            Fonts: null
            Anchor: null
            Font size: null
            Italic: null
    class `datasets`:
        def `path`:
            datasets: null
        def `missing_data_1`:
            missing_data_1.tab: null
        def `missing_data_2`:
            missing_data_2.tab: null
        def `missing_data_3`:
            missing_data_3.tab: null
        def `data_one_column_vals`:
            a: null
            b: null
            c: null
            y: null
            n: null
            ynyn: null
        def `datasets`:
            testing_dataset_cls: null
            testing_dataset_reg: null
    def `open_widget_classes`:
        __init_subclass__: null
widgets/tests/utils.py:
    def `possible_duplicate_table`:
        iris: null
widgets/unsupervised/__init__.py:
    Unsupervised: null
    Unsupervised learning.: null
    '#CAE1EF': null
    icons/Category-Unsupervised.svg: null
widgets/unsupervised/owcorrespondence.py:
    class `OWCorrespondenceAnalysis`:
        Correspondence Analysis: null
        Correspondence analysis for categorical multivariate data.: null
        icons/CorrespondenceAnalysis.svg: null
        class `Inputs`:
            Data: null
        class `Outputs`:
            Coordinates: null
        plot.plotItem: null
        class `Error`:
            Empty dataset: null
            No categorical data: null
        def `__init__`:
            Variables: null
            Axes: null
            component_x: null
            'X:': null
            component_y: null
            'Y:': null
            Contribution to Inertia: null
            \n: null
            auto_commit: null
        def `set_data`:
            ignore: null
            combo box 'component_[xy]' .*: null
        def `commit`:
            Component {i + 1}: null
            Variable: null
            Value: null
        def `_update_CA`:
            ignore: null
            combo box 'component_[xy]' .*: null
        def `update_XY`:
            '{}': null
        def `_setup_plot`:
            def `get_minmax`:
                inf: null
                -inf: null
            bottom: null
            Component {} ({:.1f}%): null
            left: null
        def `_update_info`:
            \n\n: null
            'Axis 1: {:.2f}\n': null
            'Axis 2: {:.2f}': null
        def `send_report`:
            Data instances: null
            Selected variable: null
            Selected variables: null
            '{} and {}': null
            ', ': null
    def `correspondence`:
        ignore: null
    CA: null
    U: null
    D: null
    V: null
    row_factors: null
    col_factors: null
    row_sums: null
    column_sums: null
    __main__: null
    titanic: null
widgets/unsupervised/owdbscan.py:
    class `OWDBSCAN`:
        DBSCAN: null
        Density-based spatial clustering.: null
        icons/DBSCAN.svg: null
        class `Inputs`:
            Data: null
        class `Error`:
            'Not enough unique data instances. ': null
            At least two are required.: null
        Euclidean: null
        euclidean: null
        Manhattan: null
        cityblock: null
        Cosine: null
        cosine: null
        def `__init__`:
            Parameters: null
            min_samples: null
            Core point neighbors: null
            eps: null
            Neighborhood distance: null
            Distance Metric: null
            metric_idx: null
            normalize: null
            Normalize features: null
            auto_commit: null
            Data items sorted by score: null
            Distance to the k-th nearest neighbour: null
        def `_plot_graph`:
            red: null
        def `send_data`:
            Cluster: null
            C%d: null
            DBSCAN Core: null
            '0': null
            '1': null
    __main__: null
    iris.tab: null
widgets/unsupervised/owdistancefile.py:
    class `OWDistanceFile`:
        Distance File: null
        orange.widgets.unsupervised.distancefile: null
        Read distances from a file.: null
        icons/DistanceFile.svg: null
        load: null
        read: null
        open: null
        class `Outputs`:
            Distances: null
        def `__init__`:
            Distance File: null
            '...': null
            Reload: null
            Info: null
            No data loaded.: null
            ' ': null
            Browse documentation datasets: null
        def `browse_file`:
            File: null
            Cannot find the directory with documentation datasets: null
            ~/: null
            Open Distance File: null
            (*.dst): null
        def `open_file`:
            .: null
            Loading '{}' from the current directory.: null
            (none): null
            No data loaded: null
            Invalid file format: null
            Data was not loaded due to an error.: null
            '{} points(s), ': null
            unlabelled: null
            labelled: null
        def `send_report`:
            No data was loaded.: null
            File name: null
    class `OWDistanceFileDropHandler`:
        def `parametersFromFile`:
            recent_paths: null
        def `canDropFile`:
            .dst: null
    __main__: null
widgets/unsupervised/owdistancemap.py:
    class `DistanceMapItem`:
        def `hoverMoveEvent`:
            '{}, {}: {:.3f}': null
    class `OWDistanceMap`:
        Distance Map: null
        Visualize a distance matrix.: null
        icons/DistanceMap.svg: null
        class `Inputs`:
            Distances: null
        class `Outputs`:
            Selected Data: null
            Features: null
        grid_widget: null
        def `__init__`:
            sorting: null
            Element Sorting: null
            None: null
            Clustering: null
            Clustering with ordered leaves: null
            Colors: null
            annotation_idx: null
            Annotations: null
            Enumeration: null
            autocommit: null
        def `set_distances`:
            Empty distance matrix.: null
            'Cluster ordering was disabled due to the input ': null
            matrix being to big: null
            'Clustering was disabled due to the input ': null
        def `set_items`:
            None: null
            Enumeration: null
            Attribute names: null
            Name: null
        def `_update_labels`:
            Attribute names: null
        def `send_report`:
            Sorting: null
            Annotations: null
    __main__: null
    iris: null
widgets/unsupervised/owdistancematrix.py:
    class `OWDistanceMatrix`:
        Distance Matrix: null
        View distance matrix.: null
        icons/DistanceMatrix.svg: null
        class `Inputs`:
            Distances: null
        class `Outputs`:
            Distances: null
            Selected Data: null
            Table: null
        def `__init__`:
            annotation_idx: null
            'Labels: ': null
            None: null
            Enumeration: null
            auto_commit: null
        def `set_distances`:
            None: null
            Enumerate: null
            Attribute names: null
            Name: null
        def `_update_labels`:
            Attribute names: null
        def `send_report`:
            def `_rgb`:
                rgb({}, {}, {}): null
            <table style="border-collapse:collapse">: null
            <tr><td></td>: null
            '<td style="background-color: {}">{}</td>': null
            </tr>: null
            <tr>: null
            '<td style="background-color: {};': null
            border-top:1px solid {}; border-left:1px solid {};">: null
            '{:.3f}</td>': null
            </table>: null
            <table>: null
            '<td style="background-color: {}">{:.3f}</td>': null
    __main__: null
    iris: null
widgets/unsupervised/owdistances.py:
    Euclidean: "evklidska"
    Manhattan: "manhattanska"
    Cosine: "kosinusna"
    Jaccard: "Jaccardova"
    Spearman: "Spearmanova"
    Absolute Spearman: "absolutna Spearmanova"
    Pearson: "Pearsonova"
    Absolute Pearson: "absolutna Pearsonova"
    Hamming: "Hammingova"
    Mahalanobis: "Mahalanobisova"
    Bhattacharyya: "Bhattacharyyeva"
    class `DistanceRunner`:
        def `run`:
            Calculating...: "Računam ..."
            axis: false
            impute: false
            callback: false
            normalize: false
    class `OWDistances`:
        Distances: "Razdalje"
        Compute a matrix of pairwise distances.: "Izračunaj matriko razdalj."
        icons/Distance.svg: false
        class `Inputs`:
            Data: false
        class `Outputs`:
            Distances: false
        class `Error`:
            No numeric features: "Ni številskih spremenljivk"
            No binary features: "Ni binarnih spremenljivk"
            '{} requires dense data.': "{} zahteva goste podatke."
            Not enough memory: "Ni dovolj pomnilnika"
            Problem in calculation:\n{}: 'Težava pri izračunu:\n{}'
            Mahalanobis handles up to 1000 {}.: 'Mahalanobisova razdalja zmore do 1000 {}.'
        class `Warning`:
            Ignoring categorical features: "Kategoričnih spremenljivk ne upoštevam"
            Ignoring non-binary features: "Ne-binarnih spremenljivk ne upoštevam"
            Missing values were imputed: "Manjkajoče vrednosti so bile nadomeščene"
        def `__init__`:
            axis: false
            Rows: "Vrsticami"
            Columns: "Stolpci"
            Distances between: "Razdalje med"
            Distance Metric: "Razdalja"
            metric_idx: false
            normalized_dist: false
            Normalized: "Normalizirano"
            All dimensions are (implicitly) scaled to a common: "Vse spremenljivke so preslikane na enak razpon, "
            scale to normalize the influence across the domain.: "s čimer se izenači njihov vpliv na izračunano razdaljo."
            autocommit: false
        def `compute_distances`:
            def `_fix_discrete`:
                fallback: false
            def `_check_tractability`:
                rows: "vrstic"
                columns: "stolpcev"
        def `send_report`:
            Distances Between: "Razdalje med"
            Rows: "vrsticami"
            Columns: "stolpci"
            Metric: "Razdalja"
        def `migrate_settings`:
            normalized_dist: false
            metric_idx: false
    __main__: false
    iris: false
widgets/unsupervised/owdistancetransformation.py:
    class `OWDistanceTransformation`:
        Distance Transformation: null
        Transform distances according to selected criteria.: null
        icons/DistancesTransformation.svg: null
        class `Inputs`:
            Distances: null
        class `Outputs`:
            Distances: null
        No normalization: null
        To interval [0, 1]: null
        To interval [-1, 1]: null
        'Sigmoid function: 1/(1+exp(-X))': null
        No inversion: null
        -X: null
        1 - X: null
        max(X) - X: null
        1/X: null
        def `__init__`:
            normalization_method: null
            Normalization: null
            inversion_method: null
            Inversion: null
            autocommit: null
        def `send_report`:
            inversion ({}): null
            normalization ({}): null
            Model parameters: null
            Transformation: null
            ', ': null
            None: null
    __main__: null
    iris: null
widgets/unsupervised/owhierarchicalclustering.py:
    OWHierarchicalClustering: false
    Single: Minimalna
    # najnižja
    Average: Povprečna
    Weighted: Utežena
    # kak lep prevod. Obtežena je grše, ampak morda tudi pravilno? 
    Complete: Maksimalna
    Ward: Wardova
    class `SaveStateSettingsHandler`:
        def `initialize`:
            __session_state_data: false
        def `pack_data`:
            __session_state_data: false
    class `OWHierarchicalClustering`:
        Hierarchical Clustering: Hierarhično razvrščanje
        'Display a dendrogram of a hierarchical clustering ': 'Prikaži dendrogram
            hierarhičnega razvrščanja v skupine, '
        constructed from the input distance matrix.: zgrajenega iz matrike razdalj.
        icons/HierarchicalClustering.svg: false
        class `Inputs`:
            Distances: false
        class `Outputs`:
            Selected Data: false
        Enumeration: Številčenje
        Name: Ime
        Enumerate: Številčenje
        scene: false
        None: Brez
        class `Error`:
            Some distances are infinite: Nekatere razdalje so neskončne.
        def `__init__`:
            linkage: false
            Linkage: Razdalja med gručami
            Annotations: Oznake
            annotation: false
            pruning: false
            Pruning: Rezanje
            None: Brez
            max_depth: false
            'Max depth:': Največja globina
            # zaradi te največje globine se mi zdi vredno tudi druge maksimalne vrednosti prevajati kot najvišje vrednosti
            selection_method: false
            Selection: Izbor
            Manual: Ročno
            'Height ratio:': 'Razmerje višine:'
            cut_ratio: false
            '%': true
            'Top N:': 'Prvih N:'
            top_n: false
            zoom_factor: false
            Zoom: Povečava
            Zoom in: Povečaj
            #približaj?
            Zoom out: Pomanjšaj
            #oddalji? 
            Reset zoom: Ponastavi zoom
            autocommit: false
            top: false
            bottom: false
        def `set_distances`:
            Empty distance matrix: Prazna matrika razdalj
        def `_set_items`:
            Enumeration: Številčenje
            Name: Ime
        def `_update_labels`:
            None: Brez
            Enumeration: Številčenje
            Name: Ime
            ', ': true
        def `commit`:
            items: false
            Cluster: Gruča
            C{i + 1}: true
            Other: Drugo
            cluster: Gruča
        def `save_state`:
            version: false
            selection_state: false
        def `set_restore_state`:
            selection_state: false
        def `send_report`:
            manual: ročno
            at {:.1f} of height: pri {:.1f} višine
            top {} clusters: prvih {} gruč
            Linkage: Razdalja med gručami
            Annotation: Oznake
            Prunning: Rezanje
            '{} levels': '{} nivojev'
            Selection: Izbor
    __main__: false
    iris: false
widgets/unsupervised/owkmeans.py:
    class `ClusterTableModel`:
        def `data`:
            '{:.3f}': null
            NA: null
    class `OWKMeans`:
        k-Means: null
        'k-Means clustering algorithm with silhouette-based ': null
        quality estimation.: null
        icons/KMeans.svg: null
        kmeans: null
        clustering: null
        class `Inputs`:
            Data: null
        class `Outputs`:
            Annotated Data: null
            Centroids: null
        class `Error`:
            'Clustering failed\nError: {}': null
            Too few ({}) unique data instances for {} clusters: null
            Data is missing features.: null
        class `Warning`:
            Silhouette scores are not computed for >{} samples: null
            Too few ({}) unique data instances for {} clusters: null
            Sparse data cannot be normalized: null
        Initialize with KMeans++: null
        k-means++: null
        Random initialization: null
        random: null
        def `migrate_settings`:
            auto_apply: null
            auto_commit: null
        def `__init__`:
            optimize_k: null
            Number of Clusters: null
            'Fixed:': null
            k: null
            From: null
            k_from: null
            to: null
            k_to: null
            Preprocessing: null
            normalize: null
            Normalize columns: null
            Initialization: null
            smart_init: null
            'Re-runs: ': null
            n_init: null
            'Maximum iterations: ': null
            max_iterations: null
            Silhouette Scores: null
            auto_commit: null
        def `send_data`:
            Cluster: null
            C%d: null
            Silhouette: null
            centroids: null
            '{self.data.name} centroids': null
        def `send_report`:
            Number of clusters: null
            Optimization: null
            '{}, {} re-runs limited to {} steps': null
            Data: null
            Silhouette scores for different numbers of clusters: null
    __main__: null
    heart_disease: null
widgets/unsupervised/owlouvainclustering.py:
    Euclidean: null
    l2: null
    Manhattan: null
    l1: null
    Cosine: null
    cosine: null
    class `OWLouvainClustering`:
        Louvain Clustering: null
        Detects communities in a network of nearest neighbors.: null
        icons/LouvainClustering.svg: null
        class `Inputs`:
            Data: null
        class `Outputs`:
            Network: null
        class `Information`:
            Press commit to recompute clusters and send new data: null
        class `Error`:
            No features in data: null
        def `__init__`:
            Info: null
            No data on input.: null
            Preprocessing: null
            normalize: null
            Normalize data: null
            apply_pca: null
            Apply PCA preprocessing: null
            pca_components: null
            'PCA Components: ': null
            Graph parameters: null
            metric_idx: null
            Distance metric: null
            k_neighbors: null
            k neighbors: null
            resolution: null
            Resolution: null
            '%.1f': null
            'The resolution parameter affects the number of clusters to find. ': null
            'Smaller values tend to produce more clusters and larger values ': null
            retrieve less clusters.: null
            auto_commit: null
        def `commit`:
            Running...: null
        def `__set_partial_results`:
            pca_projection: null
            graph: null
            partition: null
        def `__set_results`:
            '%d clusters found.': null
        def `_send_data`:
            Cluster: null
            C%d: null
        def `set_data`:
            Clustering not yet run.: null
        def `clear`:
            No data on input.: null
        def `send_report`:
            ', {number} component{s}': null
            Normalize data: null
            PCA preprocessing: null
            Metric: null
            k neighbors: null
            Resolution: null
        def `migrate_settings`:
            context_settings: null
            apply_pca: null
            k_neighbors: null
            metric_idx: null
            normalize: null
            pca_components: null
            resolution: null
    def `run_on_data`:
        Computing PCA...: null
        pca_projection: null
        Building graph...: null
        graph: null
        Detecting communities...: null
        partition: null
    def `run_on_graph`:
        Detecting communities...: null
        partition: null
    __main__: null
    iris: null
widgets/unsupervised/owmanifoldlearning.py:
    class `ManifoldParametersEditor`:
        def `_create_spin_parameter`:
            '0': null
        def `_create_combo_parameter`:
            _values: null
            _index: null
        def `__combo_parameter_update`:
            _index: null
            _values: null
        def `_create_radio_parameter`:
            _values: null
            _index: null
        def `__radio_parameter_update`:
            _index: null
            _values: null
    class `TSNEParametersEditor`:
        euclidean: null
        manhattan: null
        chebyshev: null
        jaccard: null
        pca: null
        PCA: null
        random: null
        Random: null
        def `__init__`:
            metric: null
            'Metric:': null
            perplexity: null
            'Perplexity:': null
            early_exaggeration: null
            'Early exaggeration:': null
            learning_rate: null
            'Learning rate:': null
            n_iter: null
            'Max iterations:': null
            initialization: null
            'Initialization:': null
    class `MDSParametersEditor`:
        PCA: null
        PCA (Torgerson): null
        random: null
        Random: null
        def `__init__`:
            max_iter: null
            'Max iterations:': null
            init_type: null
            'Initialization:': null
        def `get_parameters`:
            n_init: null
    class `IsomapParametersEditor`:
        def `__init__`:
            n_neighbors: null
            'Neighbors:': null
    class `LocallyLinearEmbeddingParametersEditor`:
        standard: null
        Standard: null
        modified: null
        Modified: null
        hessian: null
        Hessian eigenmap: null
        ltsa: null
        Local: null
        def `__init__`:
            method: null
            'Method:': null
            n_neighbors: null
            'Neighbors:': null
            max_iter: null
            'Max iterations:': null
    class `SpectralEmbeddingParametersEditor`:
        nearest_neighbors: null
        Nearest neighbors: null
        rbf: null
        RBF kernel: null
        def `__init__`:
            affinity: null
            'Affinity:': null
    class `OWManifoldLearning`:
        Manifold Learning: null
        Nonlinear dimensionality reduction.: null
        icons/Manifold.svg: null
        class `Inputs`:
            Data: null
        class `Outputs`:
            Transformed Data: null
            Transformed data: null
        class `Error`:
            'For chosen method and components, ': null
            neighbors must be greater than {}: null
            '{}': null
            Sparse data is not supported.: null
            Out of memory: null
        class `Warning`:
            Disconnected graph, embedding may not work: null
        def `migrate_settings`:
            tsne_editor: null
            init_index: null
            initialization_index: null
            metric_index: null
        def `__init__`:
            Method: null
            manifold_method_index: null
            Output: null
            n_components: null
            'Components:': 'število komponent:'
            '0': null
        def `commit`:
            def `_handle_disconnected_graph_warning`:
                Graph is not fully connected: null
            C{}: null
            'for method=''hessian'', n_neighbors ': null
            must be greater than [n_components: null
            ' * (n_components + 3) / 2]': null
            '{}': null
        def `send_report`:
            Method: null
            Method parameters: null
            Data: null
    __main__: null
    brown-selected: null
widgets/unsupervised/owmds.py:
    def `stress`:
        euclidean: null
    def `run_mds`:
        Running...: null
        precomputed: null
        eps: null
    class `OWMDSGraph`:
        def `update_pairs`:
            pairs: null
    class `OWMDS`:
        MDS: null
        'Two-dimensional data projection by multidimensional ': null
        scaling constructed from a distance matrix.: null
        icons/MDS.svg: null
        multidimensional scaling: null
        multi dimensional scaling: null
        class `Inputs`:
            Distances: null
        Every iteration: null
        Every 5 steps: null
        Every 10 steps: null
        Every 25 steps: null
        Every 50 steps: null
        None: null
        mds-x: null
        mds-y: null
        class `Error`:
            Input data needs at least 2 rows: null
            Input matrix must be at least 2x2: null
            Data has no attributes: null
            Data and distances dimensions do not match.: null
            Out of memory: null
            Error during optimization\n{}: null
        def `__init__`:
            Stress: null
        def `_add_controls`:
            'Show similar pairs:': null
            connected_pairs: null
        def `_add_controls_optimization`:
            Optimize: null
            PCA: null
            Randomize: null
            Jitter: null
            refresh_rate: null
            'Refresh: ': null
            Start: null
        def `_initialize`:
            labels: null
        def `init_attr_values`:
            labels: null
        def `_toggle_run`:
            Resume: null
        def `_run`:
            Stop: null
            PCA: null
            random: null
        def `on_done`:
            Start: null
        def `on_exception`:
            Start: null
        def `do_initialization`:
            Start: null
        def `get_size_data`:
            Stress: null
        def `migrate_settings`:
            label_only_selected: null
            symbol_opacity: null
            alpha_value: null
            symbol_size: null
            point_width: null
            jitter: null
            jitter_size: null
            graph: null
            auto_commit: null
            autocommit: null
            connected_pairs: null
        def `migrate_context`:
            color_value: null
            attr_color: null
            shape_value: null
            attr_shape: null
            size_value: null
            attr_size: null
            label_value: null
            attr_label: null
            Stress: null
            graph: null
    __main__: null
    iris: null
widgets/unsupervised/owpca.py:
    component variance: null
    cumulative variance: null
    class `OWPCA`:
        PCA: null
        Principal component analysis with a scree-diagram.: null
        icons/PCA.svg: null
        principal component analysis: null
        linear transformation: null
        class `Inputs`:
            Data: null
        class `Outputs`:
            Transformed Data: null
            Transformed data: null
            Data: null
            Components: null
            PCA: null
        plot.plotItem: null
        class `Warning`:
            'All components of the PCA are trivial (explain 0 variance). ': null
            Input data is constant (or near constant).: null
        class `Error`:
            At least 1 feature is required: null
            At least 1 data instance is required: null
        def `__init__`:
            Components Selection: null
            ncomponents: null
            All: null
            variance_covered: null
            '%': null
            'Components:': null
            'Explained variance:': null
            Options: null
            normalize: null
            Normalize variables: null
            maxp: null
            Show only first: null
            auto_commit: null
            Principal Components: null
            Proportion of variance: null
        def `set_data`:
            Data has been sampled: null
        def `_update_axis`:
            bottom: null
        def `commit`:
            variance: null
            components: null
            PC{}: null
        def `send_report`:
            Normalize data: null
            Selected components: null
            Explained variance: null
            '{:.3f} %': null
        def `migrate_settings`:
            variance_covered: null
            ncomponents: null
            decomposition_idx: null
            batch_size: null
            address: null
            auto_update: null
    __main__: null
    housing: null
widgets/unsupervised/owsavedistances.py:
    class `OWSaveDistances`:
        Save Distance Matrix: null
        Save distance matrix to an output file.: null
        icons/SaveDistances.svg: null
        distance matrix: null
        save: null
        Distance File (*.dst): null
        class `Warning`:
            Associated data was not saved.: null
            Data associated with {} was not saved.: null
        class `Inputs`:
            Distances: null
        def `do_save`:
            columns: null
            rows: null
        def `send_report`:
            'Input:': null
            none: null
            File name: null
            not set: null
        def `_description`:
            ' and ': null
            row: null
            column: null
            ; {labels} labels: null
            '{len(dist)}-dimensional matrix{labels}': null
    __main__: null
    iris: null
widgets/unsupervised/owsom.py:
    class `OWSOM`:
        Self-Organizing Map: null
        Computation of self-organizing map.: null
        icons/SOM.svg: null
        SOM: null
        class `Inputs`:
            Data: null
        class `Outputs`:
            Selected Data: null
        view: null
        OptControls: null
        shape: null
        auto_dim: null
        spin_x: null
        spin_y: null
        initialization: null
        start: null
        class `Warning`:
            SOM ignores categorical variables.: null
            Some data instances have undefined value of '{}'.: null
            '''{}'' has no defined values.': null
            '{} data instance{} with undefined value(s) {} not shown.': null
            Data contains a single numeric column.: null
        class `Error`:
            Data contains no numeric columns.: null
            All rows contain at least one undefined value.: null
        def `__init__`:
            SOM: null
            Hexagonal grid: null
            Square grid: null
            auto_dimension: null
            Set dimensions automatically: null
            ×: null
            initialization: null
            Initialize with PCA: null
            Random initialization: null
            Replicable random: null
            Restart: null
            Color: null
            attr_color: null
            (Same color): null
            pie_charts: null
            Show pie charts: null
            size_by_instances: null
            Size by number of instances: null
        def `set_data`:
            def `set_warnings`:
                is: null
                s: null
                are: null
        def `enable_controls`:
            Start: null
            Stop: null
        def `_draw_same_color`:
            '{n} instances': null
        def `_get_color_column`:
            ignore: null
        def `_tooltip`:
            (N/A): null
            \N{NON-BREAKING HYPHEN}: null
            '<table style="white-space: nowrap">': null
            ? "\n            <tr>\n                <td>\n                    <font\
                \ color={color.name()}>■</font>\n                    <b>{escape(val).replace(\"\
                -\", nbhp)}</b>:\n                </td>\n                <td>\n  \
                \                  {n} ({n / tot * 100:.1f}&nbsp;%)\n            \
                \    </td>\n            </tr>\n            "
            : null
            </table>: null
        def `update_output`:
            Group: null
        def `_bin_names`:
            < {labels[0]}: null
            '{x} - {y}': null
            ≥ {labels[-1]}: null
        def `send_report`:
            Self-organizing map colored by '{self.attr_color.name}': null
    __main__: null
    iris: null
widgets/unsupervised/owtsne.py:
    def `prepare_tsne_obj`:
        approx: null
        fft: null
        exact: null
        bh: null
    class `TSNERunner`:
        def `compute_pca`:
            Computing PCA...: null
            pca_projection: null
        def `compute_initialization`:
            Preparing initialization...: null
            initialization: null
        def `compute_affinities`:
            Finding nearest neighbors...: null
            affinities: null
        def `compute_tsne`:
            Running optimization...: null
            tsne_embedding: null
            def `run_optimization`:
                tsne_embedding: null
        def `run`:
            pca: null
            init: null
            aff: null
            tsne: null
    class `invalidated`:
        def `__str__`:
            '%s(%s)': null
            ', ': null
            '=': null
            pca_projection: null
            affinities: null
            tsne_embedding: null
    class `OWtSNE`:
        t-SNE: null
        Two-dimensional data projection with t-SNE.: null
        icons/TSNE.svg: null
        tsne: null
        t-SNE-x: null
        t-SNE-y: null
        class `Information`:
            'The parameter settings have been changed. Press ': null
            \"Start\" to rerun with the new settings.: null
        class `Error`:
            Input data needs at least 2 rows: null
            Input data needs at least 2 attributes: null
            Input data is constant: null
            No projection due to no valid data: null
        def `_add_controls_start_box`:
            Optimize: null
            perplexity: null
            'Perplexity:': null
            multiscale: null
            Preserve global structure: null
            exaggeration: null
            'Exaggeration:': null
            pca_components: null
            'PCA components:': null
            normalize: null
            Normalize data: null
            Start: null
        def `_stop_running_task`:
            Start: null
        def `check_data`:
            ignore: null
            Degrees of freedom .*: null
        def `_toggle_run`:
            Resume: null
        def `enable_controls`:
            Data normalization is not supported on sparse matrices.: null
        def `run`:
            Stop: null
        def `on_partial_result`:
            pca_projection: null
            initialization: null
            affinities: null
            tsne_embedding: null
            Unrecognized partial result called with `%s`: null
        def `on_done`:
            Start: null
        def `clear`:
            Start: null
        def `migrate_settings`:
            selection_indices: null
            selection: null
            max_iter: null
        def `migrate_context`:
            attr_color: null
            graph: null
            attr_size: null
            attr_shape: null
            attr_label: null
    __main__: null
    iris: null
widgets/utils/PDFExporter.py:
    PDFExporter: null
widgets/utils/SVGExporter.py:
    SVGExporter: null
widgets/utils/__init__.py:
    def `to_html`:
        <=: null
        ≤: null
        '>=': null
        ≥: null
        <: null
        '&lt;': null
        '>': null
        '&gt;': null
        =\\=: null
        ≠: null
    def `dumpObjectTree`:
        '{indent}{type} "{name}"': null
        ' ': null
    def `qname`:
        '{0.__module__}.{0.__qualname__}': null
    _T1: null
    _E: null
    _A: null
    _B: null
    def `instance_tooltip`:
        def `show_part`:
            '{} = {}': null
            '... and {} others': null
            <b>{}</b>:<br/>: null
            <br/>: null
        Class: null
        Classes: null
        Meta: null
        Metas: null
        Feature: null
        Features: null
        <br/>: null
widgets/utils/annotated_data.py:
    Data: null
    Selected: null
    def `create_annotated_table`:
        'No': null
        'Yes': null
    def `create_groups_table`:
        G{}: null
        Unselected: null
widgets/utils/buttons.py:
    VariableTextPushButton: null
    SimpleButton: null
    FixedSizeButton: null
    def `tooltip_with_shortcut`:
        <span>{}</span>: null
        <kbd>{}</kbd>: null
        '&nbsp;&nbsp;': null
widgets/utils/classdensity.py:
    def `compute_density`:
        C_CONTIGUOUS: null
widgets/utils/colorbrewer.py:
    Module 'colorbrewer' is obsolete and will be removed.\n: null
    Use palettes from 'Orange.widget.utils.colorpalettes'.: null
    diverging: null
    RdYlGn: null
    PRGn: null
    RdBu: null
    RdGy: null
    RdYlBu: null
    PiYG: null
    PuOr: null
    BrBG: null
    spectral: null
    Spectral: null
    qualitative: null
    Pastel2: null
    Pastel1: null
    Dark2: null
    Accent: null
    Paired: null
    Set1: null
    Set2: null
    Set3: null
    sequential: null
    Reds: null
    YlOrRd: null
    RdPu: null
    YlOrBr: null
    Greens: null
    YlGnBu: null
    GnBu: null
    BuPu: null
    Greys: null
    Oranges: null
    OrRd: null
    BuGn: null
    PuBu: null
    PuRd: null
    Blues: null
    PuBuGn: null
    YlGn: null
    Purples: null
    pastels: null
    Custom: null
widgets/utils/colorgradientselection.py:
    class `ColorGradientSelection`:
        def `__init__`:
            gradient-combo-box: null
            Centered at: null
            threshold-low-slider: null
            Low gradient threshold: null
            'Applying a low threshold will squeeze the ': null
            gradient from the lower end: null
            High gradient threshold: null
            'Applying a high threshold will squeeze the ': null
            gradient from the higher end: null
            'Low:': null
            'High:': null
widgets/utils/colorpalette.py:
    Module colorpalette is obsolete; use colorpalettes: null
    class `ColorPaletteDlg`:
        def `__init__`:
            Color Palette: null
            selectedSchemaIndex: null
            Saved Profiles: null
            OK: null
            Cancel: null
        def `acceptChanges`:
            Default: null
            Question: null
            The color schema has changed. Save?: null
        def `createColorButton`:
            butt: null
        def `createContinuousPalette`:
            def `_set`:
                cont{}{}: null
            Left: null
            View: null
            Right: null
            passThroughBlack: null
            passThroughBlackCheckbox: null
            cont: null
            Pass through black: null
        def `createExtendedContinuousPalette`:
            def `_set`:
                exCont{}{}: null
            Left: null
            View: null
            Right: null
            passThroughColors: null
            passThroughColorsCheckbox: null
            exCont: null
            Use pass-through colors: null
            Pass-through colors: null
            passThroughColor: null
            Checkbox: null
            Use color: null
            color: null
            colorCount: null
        def `createDiscretePalette`:
            def `_set`:
                disc{}{}: null
            View: null
            EditButt: null
            Edit palette: null
            Edit the order and colors of the palette: null
            LoadButt: null
            Load palette: null
            Load a predefined color palette: null
        def `editPalette`:
            def `_set`:
                disc{}{}: null
            disc: null
            EditButt: null
            View: null
        def `loadPalette`:
            disc: null
            LoadButt: null
            View: null
        def `getColor`:
            butt: null
        def `getContinuousPalette`:
            cont: null
            Left: null
            Right: null
            passThroughBlack: null
        def `getExtendedContinuousPalette`:
            exCont: null
            Left: null
            Right: null
            passThroughColors: null
            color: null
            colorCount: null
            passThroughColor: null
        def `getDiscretePalette`:
            disc: null
            View: null
        def `getCurrentState`:
            butt: null
            cont: null
            Left: null
            Right: null
            passThroughBlack: null
            disc: null
            View: null
            exCont: null
            passThroughColors: null
            color: null
            passThroughColor: null
            colorCount: null
        def `setColorSchemas`:
            Default: null
            Save current palette as...: null
        def `setCurrentState`:
            butt: null
            cont: null
            Left: null
            Right: null
            passThroughBlack: null
            passThroughBlackCheckbox: null
            View: null
            disc: null
            exCont: null
            passThroughColors: null
            passThroughColorsCheckbox: null
            passThroughColor: null
            Checkbox: null
            color: null
            colorCount: null
        def `paletteSelected`:
            Name the current color settings.\n: null
            Pressing 'Cancel' will cancel your changes and close the dialog.: null
            Name Your Color Settings: null
            default: null
            The 'Default' settings cannot be changed.: null
            'Enter a different name:': null
    class `ColorPalleteListing`:
        def `__init__`:
            Color Palette List: null
            Information: null
            '<p align="center">This dialog shows a list of predefined ': null
            'color palettes <br>from colorbrewer.org that can be used ': null
            in Orange.<br/>You can select a palette by clicking on it.</p>: null
            Default Palette: null
            Default color palette: null
            Qualitative: null
            Spectral: null
            Diverging: null
            Sequential: null
            Pastels: null
            ' Palettes': null
    class `PaletteEditor`:
        def `__init__`:
            Palette Editor: null
            Information: null
            <p align="center">You can reorder colors in the list using the: null
            <br/>buttons on the right or by dragging and dropping the items.: null
            '<br/>To change a specific color double click the item in the ': null
            list.</p>: null
            Move selected colors up: null
            Move selected colors down: null
            icons/Dlg_up3.png: null
            icons/Dlg_down3.png: null
            Color %d: null
    class `ContinuousPaletteGenerator`:
        def `__init__`:
            '#000000': null
    class `ColorPaletteGenerator`:
        def `set_number_of_colors`:
            Not enough colors: null
    class `ColorButton`:
        def `mousePressEvent`:
            colorSchemaChange: null
    def `main`:
        continuousPalette: null
        Continuous Palette: null
        discPalette: null
        Discrete Palette: null
        otherColors: null
        Colors: null
        Canvas: null
        Grid: null
    __main__: null
widgets/utils/colorpalettes.py:
    Palette: null
    IndexedPalette: null
    DiscretePalette: null
    LimitedDiscretePalette: null
    DiscretePalettes: null
    DefaultDiscretePalette: null
    DefaultDiscretePaletteName: null
    HuePalette: null
    DefaultRGBColors: null
    Dark2Colors: null
    Glasbey: null
    ContinuousPalette: null
    ContinuousPalettes: null
    BinnedContinuousPalette: null
    DefaultContinuousPalette: null
    DefaultContinuousPaletteName: null
    ColorIcon: null
    get_default_curve_colors: null
    patch_variable_colors: null
    NAN_COLOR: null
    class `Palette`:
        PaletteFlags: null
        Palette.Flags: null
        def `__init__`:
            _: null
    class `DiscretePalette`:
        def `from_colors`:
            Custom: null
    class `LimitedDiscretePalette`:
        def `__init__`:
            'LimitedDiscretePalette: argument ''force_hsv'' is deprecated; ': null
            use 'force_glasbey' instead: null
            custom: null
    class `HuePalette`:
        def `__init__`:
            custom: null
    class `ContinuousPalette`:
        def `from_colors`:
            Custom: null
    class `BinnedContinuousPalette`:
        def `from_palette`:
            can't create palette from '{type(palette).__name__}': null
    Default: null
    Dark: null
    default: null
    dark: null
    glasbey: null
    linear_bgyw_20_98_c66: null
    Blue-Green-Yellow: null
    linear_bmy_10_95_c78: null
    Blue-Magenta-Yellow: null
    linear_grey_10_95_c0: null
    Dim gray: null
    linear_inferno: null
    Inferno: null
    linear_viridis: null
    Viridis: null
    diverging_bwr_40_95_c42: null
    Coolwarm: null
    diverging_gkr_60_10_c40: null
    Green-Red: null
    diverging_protanopic_deuteranopic_bwy_60_95_c32: null
    Diverging protanopic: null
    Color-blind friendly: null
    diverging_tritanopic_cwr_75_98_c20: null
    Diverging tritanopic: null
    linear_protanopic_deuteranopic_kbw_5_98_c40: null
    Linear protanopic: null
    linear_tritanopic_krjcw_5_95_c24: null
    Linear tritanopic: null
    isoluminant_cgo_80_c38: null
    Isoluminant: null
    Other: null
    rainbow_bgyr_35_85_c73: null
    Rainbow: null
    def `patch_variable_colors`:
        def `set_colors`:
            palette: null
        def `continuous_set_colors`:
            colors: null
        def `set_palette`:
            palette: null
            colors: null
        def `continuous_get_colors`:
            'ContinuousVariable.color is deprecated; ': null
            use ContinuousVariable.palette: null
            colors: null
            palette: null
        def `continuous_get_palette`:
            palette: null
            colors: null
        def `discrete_get_colors`:
            def `retrieve_colors`:
                palette: null
                colors: null
        def `discrete_set_colors`:
            colors: null
        def `discrete_get_palette`:
            palette: null
            colors: null
widgets/utils/combobox.py:
    ComboBoxSearch: null
    ComboBox: null
    ItemStyledComboBox: null
    class `ItemStyledComboBox`:
        def `initStyleOption`:
            QStyleOptionComboBox: null
widgets/utils/concurrent.py:
    FutureWatcher: null
    FutureSetWatcher: null
    methodinvoke: null
    TaskState: null
    ConcurrentMixin: null
    ConcurrentWidgetMixin: null
    PyOwned: null
    class `_TaskDepotThread`:
        def `__new__`:
            Already exists: null
    class `_TaskRunnable`:
        def `run`:
            transfer: null
    class `FutureRunnable`:
        def `run`:
            Exception in worker thread.: null
    class `ThreadExecutor`:
        def `__init__`:
            Invalid `threadPool` type '{}': null
        def `submit`:
            'Cannot schedule new futures after ': null
            shutdown.: null
            Use `submit_task` to run `Task`s: null
        def `submit_task`:
            '`submit_task` will be deprecated': null
            'Cannot schedule new futures after ': null
            shutdown.: null
        def `__make_task_runnable`:
            'Can only submit Tasks from it''s own ': null
            thread.: null
            Can not submit Tasks with a parent.: null
    class `Task`:
        def `__init__`:
            '`Task` has been deprecated': null
        def `_execute`:
            Exception in Task: null
    class `ConcurrentMixin`:
        def `start`:
            '`task` must be callable!': null
        def `_on_task_done`:
            'Starting new task from ': null
            '{''on_done'' if ex is None else ''on_exception''} is forbidden': null
widgets/utils/datacaching.py:
    def `getCached`:
        __data_cache: null
    def `setCached`:
        __data_cache: null
    def `delCached`:
        __data_cache: null
widgets/utils/dendrogram.py:
    DendrogramWidget: null
    Point: null
    x: null
    y: null
    Element: null
    anchor: null
    path: null
    class `DendrogramWidget`:
        def `_create_label`:
            C{i + 1}: null
widgets/utils/domaineditor.py:
    class `VarTableModel`:
        feature: null
        target: null
        meta: null
        skip: null
        categorical: null
        numeric: null
        text: null
        datetime: null
        def `headerData`:
            Name: null
            Type: null
            Role: null
            Values: null
    class `VarTypeDelegate`:
        def `setEditorData`:
            numeric: null
            datetime: null
    class `DomainEditor`:
        def `_is_missing`:
            nan: null
        def `parse_domain`:
            def `discrete_value_display`:
                ', ': null
                ', ...': null
widgets/utils/encodings.py:
    utf-8: false
    utf-16: false
    utf-32: false
    iso8859-1: false
    shift_jis: false
    iso2022_jp: false
    gb18030: false
    euc_kr: false
    Unicode (UTF-8): false
    Unicode (UTF-16): false
    utf-16-le: false
    Unicode (UTF-16LE): false
    utf-16-be: false
    Unicode (UTF-16BE): false
    Unicode (UTF-32): false
    utf-32-le: false
    Unicode (UTF-32LE): false
    utf-32-be: false
    Unicode (UTF-32BE): false
    utf-7: false
    Unicode (UTF-7): false
    ascii: false
    English (US-ASCII): false
    Western Europe (ISO Latin 1): false
    iso8859-15: false
    Western Europe (ISO-8859-15): false
    cp1252: false
    Western Europe (Windows-1252): false
    mac_roman: false
    Western Europe (Mac OS Roman): false
    iso8859-2: false
    Central and Eastern Europe (ISO Latin 2): false
    cp1250: false
    Central and Eastern Europe (Windows-1250): false
    mac_latin2: false
    Central and Eastern Europe (Mac Latin-2): false
    iso8859-3: false
    Esperanto, Maltese (ISO Latin 3): false
    iso8859-4: false
    Baltic Languages (ISO Latin 4): false
    cp1257: false
    Baltic Languages (Windows-1257): false
    iso8859-13: false
    Baltic Languages (ISO-8859-13): false
    iso8859-16: false
    South-Eastern Europe (ISO-8859-16): false
    iso8859-5: false
    Cyrillic (ISO-8859-5): false
    cp1251: false
    Cyrillic (Windows-1251): false
    mac_cyrillic: false
    Cyrillic (Mac OS Cyrillic): false
    koi8-r: false
    Cyrillic (KOI8-R): false
    koi8-u: false
    Cyrillic (KOI8-U): false
    iso8859-14: false
    Celtic Languages (ISO-8859-14): false
    iso8859-10: false
    Nordic Languages (ISO-8859-10): false
    mac_iceland: false
    Icelandic (Mac Iceland): false
    iso8859-7: false
    Greek (ISO-8859-7): false
    cp1253: false
    Greek (Windows-1253): false
    mac_greek: false
    Greek (Mac Greek): false
    iso8859-8: false
    Hebrew (ISO-8859-8): false
    cp1255: false
    Hebrew (Windows-1255): false
    iso8859-6: false
    Arabic (ISO-8859-6): false
    cp1256: false
    Arabic (Windows-1256): false
    iso8859-9: false
    Turkish (ISO-8859-9): false
    cp1254: false
    Turkish (Windows-1254): false
    mac_turkish: false
    Turkish (Mac Turkish): false
    iso8859-11: false
    Thai (ISO-8859-11): false
    Japanese (ISO-2022-JP): false
    iso2022_jp_1: false
    Japanese (ISO-2022-JP-1): false
    iso2022_jp_2: false
    Japanese (ISO-2022-JP-2): false
    iso2022_jp_2004: false
    Japanese (ISO-2022-JP-2004): false
    iso2022_jp_3: false
    Japanese (ISO-2022-JP-3): false
    Japanese (Shift JIS): false
    shift_jis_2004: false
    Japanese (Shift JIS 2004): false
    euc_jp: false
    Japanese (EUC-JP): false
    iso2022_kr: false
    Korean (ISO-2022-KR): false
    Korean (EUC-KR): false
    gb2312: false
    Simplified Chinese (GB 2312): false
    gbk: false
    Chinese (GBK): false
    Chinese (GB 18030): false
    big5: false
    Traditional Chinese (BIG5): false
    big5hkscs: false
    Traditional Chinese (BIG5-HKSC): false
    cp1258: false
    Vietnamese (Windows-1258): false
    koi8-t: false
    Tajik (KOI8-T): false
    class `SelectEncodingsWidget`:
        def `__init__`:
            -top-heading-text: false
            Select all: Izberi vse
    '#selected-text-encodings': false
    def `encodings_model`:
        '; ': false
    def `main`:
        Select encodings visible in text encoding menus: Izberi kodiranja, ki bodo na voljo v menuju
    __main__: false
widgets/utils/filedialogs.py:
    open_filename_dialog_save: null
    open_filename_dialog: null
    RecentPath: null
    RecentPathsWidgetMixin: null
    RecentPathsWComboMixin: null
    stored_recent_paths_prepend: null
    def `dialog_formats`:
        All readable files ({});;: null
        '*': null
        ' *': null
        ;;: null
        '{} (*{})': null
    def `get_stored_default_recent_paths`:
        recent_paths: null
widgets/utils/graphicslayoutitem.py:
    SimpleLayoutItem: null
    scaled: null
    class `SimpleLayoutItem`:
        __anchorThis: null
        __anchorItem: null
        item: null
        __resizeContents: null
        __aspectMode: null
        __transform: null
        __scale: null
        def `__init__`:
            sizePolicy: null
widgets/utils/graphicsscene.py:
    GraphicsScene: null
    graphicsscene_help_event: null
widgets/utils/graphicstextlist.py:
    TextListWidget: null
    class `_FuncArray`:
        func: null
        length: null
    class `TextListWidget`:
        def `__init__`:
            sizePolicy: null
widgets/utils/graphicsview.py:
    GraphicsWidgetView: null
    class `GraphicsWidgetView`:
        def `__init__`:
            Zoom in: null
            zoom-in-action: null
            Zoom out: null
            zoom-out-action: null
            Actual Size: null
            zoom-reset-action: null
            Zoom to fit: null
            zoom-to-fit-action: null
            setShortcutVisibleInContextMenu: null
    def `main`:
        def `context`:
            Aspect mode: null
            Ignore: null
            Keep: null
            Keep by expanding: null
    __main__: null
widgets/utils/headerview.py:
    class `HeaderView`:
        def `__init__`:
            QHeaderView: null
        def `initStyleOptionForIndex`:
            textElideMode: null
widgets/utils/image.py:
    def `qimage_from_array`:
        Wrong number of channels (need 3 or 4, got {c}: null
widgets/utils/itemdelegates.py:
    class `FixedFormatNumericColumnDelegate`:
        def `displayText`:
            f: null
        def `template`:
            X: null
            .: null
            '-': null
        def `sizeHint`:
            X: null
widgets/utils/itemmodels.py:
    PyListModel: null
    VariableListModel: null
    PyListModelTooltip: null
    DomainModel: null
    AbstractSortTableModel: null
    PyTableModel: null
    TableModel: null
    ModelActionsWidget: null
    ListSingleSelectionModel: null
    def `_as_contiguous_range`:
        Non-contiguous range.: null
    class `AbstractSortTableModel`:
        def `mapFromTableRows`:
            Orange.widgets.utils.itemmodels.AbstractSortTableModel.mapFromSourceRows: null
        def `mapToTableRows`:
            Orange.widgets.utils.itemmodels.AbstractSortTableModel.mapToSourceRows: null
    class `PyTableModel`:
        def `data`:
            '{:.{}{}}': null
            f: null
            e: null
        def `_check_sort_order`:
            Can't modify PyTableModel when it's sorted: null
    class `VariableListModel`:
        application/x-Orange-VariableList: null
        def `data`:
            None: null
        def `variable_labels_tooltip`:
            '%s = %s': null
            <br/>Variable Labels:<br/>: null
            <br/>: null
        def `discrete_variable_tooltip`:
            '<b>%s</b><br/>Categorical with %i values: ': null
            ', ': null
            '%r': null
        def `time_variable_toltip`:
            <b>%s</b><br/>Time: null
        def `continuous_variable_toltip`:
            <b>%s</b><br/>Numeric: null
        def `string_variable_tooltip`:
            <b>%s</b><br/>Text: null
    class `DomainModel`:
        def `prevent_modification`:
            def `e`:
                '{} can be modified only by calling ''set_domain''': null
    <: null
    '&lt;': null
    '>': null
    '&gt;': null
    class `TableModel`:
        Column: null
        var: null
        role: null
        background: null
        format: null
        Basket: null
        vars: null
        density: null
        def `__init__`:
            def `format_sparse`:
                ', ': null
                '{}={}': null
            def `format_sparse_bool`:
                ', ': null
            def `make_basket_formater`:
                sparse_x: null
                sparse_y: null
                sparse_metas: null
            len(sourcedata) > 2 ** 31 - 1: null
        def `columnSortKeyData`:
            Orange.widgets.utils.itemmodels.TableModel.sortColumnData: null
        def `headerData`:
            '{...}': null
        def `_tooltip`:
            <b>%s</b>: null
            <br/>: null
            '%s = %s': null
widgets/utils/listfilter.py:
    class `VariablesListItemView`:
        def `acceptsDropEvent`:
            _items: null
    class `VariableFilterProxyModel`:
        def `filter_accepts_variable`:
            ' ': null
            '%s=%s': null
    def `variables_filter`:
        def `update_completer_model`:
            '%s=%s': null
        def `update_completer_prefix`:
            ' ': null
        Filter the list of available variables.: null
        Filter: null
widgets/utils/matplotlib_export.py:
    scatterplot_code: null
    scene_code: null
widgets/utils/messages.py:
    UnboundMsg: null
    MessageGroup: null
    MessagesMixin: null
    WidgetMessagesMixin: null
widgets/utils/overlay.py:
    OverlayWidget: null
    MessageWidget: null
    MessageOverlayWidget: null
widgets/utils/owbasesql.py:
    class `OWBaseSql`:
        class `Outputs`:
            Data: Podatki
        class `Error`:
            '{}': true
        def `_setup_gui`:
            Server: Strežnik
            '{}:{}': true
            Database[/Schema]: Baza[/Shema]
            Database or optionally Database/Schema: Baza ali, opcijsko, Baza/Shema
            '{}/{}': true
            Username: Uporabniško ime
            Password: Geslo
            Connect: Poveži
        def `_credential_manager`:
            'SQL Table: {}:{}': true
        def `_parse_host_port`:
            ':': false
        def `_check_db_settings`:
            /: false
        def `on_connection_success`:
            Host: Strežnik
            Port: Vrata
            Database: Baza
            User name: Uporabniško ime
        def `on_connection_error`:
            \n: true
        def `send_report`:
            No database connection.: Ni povezave z bazo.
            Database: Baza
            Data: Podatki
widgets/utils/owlearnerwidget.py:
    class `OWBaseLearnerMeta`:
        def `__new__`:
            def `abstract_widget`:
                name: null
            def `copy_outputs`:
                Outputs: null
            LEARNER: null
            '''{}'' must declare attribute LEARNER': null
    class `OWBaseLearner`:
        class `Error`:
            '{}': null
            Fitting failed.\n{}: null
            Sparse data is not supported.: null
            Out of memory.: null
        class `Warning`:
            Press Apply to submit changes.: null
        class `Information`:
            Ignoring default preprocessing.\n: null
            'Default preprocessing, such as scaling, one-hot encoding and ': null
            'treatment of missing data, has been replaced with user-specified ': null
            'preprocessors. Problems may occur if these are inadequate ': null
            for the given data.: null
        class `Inputs`:
            Data: null
            Preprocessor: null
        class `Outputs`:
            Learner: null
            Model: null
            Classifier: null
            Predictor: null
        def `__init__`:
            unconditional_apply: null
        def `set_data`:
            Data contains multiple target variables.\n: null
            Select a single one with the Select Columns widget.: null
            Data has no target variable.\n: null
            Select one with the Select Columns widget.: null
        def `handleNewSignals`:
            use_default_preprocessors: null
            preprocessors: null
        def `check_data`:
            incompatibility_reason: null
            check_learner_adequacy: null
            'check_learner_adequacy is deprecated and will be removed ': null
            'in upcoming releases. Learners should instead implement ': null
            the incompatibility_reason method.: null
            Dataset is empty.: null
            Data contains a single target value.: null
            Data has no features to learn from.: null
        def `send_report`:
            Name: null
            Model parameters: null
            Data: null
        def `setup_layout`:
            Classification: null
            Regression: null
        def `add_learner_name_widget`:
            learner_name: null
            Name: null
            The name will identify this model in other widgets: null
        def `get_widget_description`:
            outputs: null
            inputs: null
widgets/utils/pathutils.py:
    class `PathItem`:
        def `from_dict`:
            PathItem: null
            type: null
            AbsPath: null
            path: null
            VarPath: null
            name: null
            relpath: null
            '{type_}: unknown type': null
        AbsPath: null
        VarPath: null
    class `AbsPath`:
        AbsPath: null
        path: null
        def `__new__`:
            nt: null
            /: null
        def `as_dict`:
            type: null
            AbsPath: null
            path: null
    class `VarPath`:
        VarPath: null
        name: null
        relpath: null
        def `__new__`:
            invalid relpath '{}': null
            nt: null
            /: null
        def `as_dict`:
            type: null
            VarPath: null
            name: null
            relpath: null
    def `prettyfypath`:
        ~/: null
        '~': null
widgets/utils/progressbar.py:
    ProgressBarMixin: null
    def `_warn_deprecated_arg`:
        '''processEvents'' argument is deprecated.\n': null
        'It does nothing and will be removed in the future (passing it ': null
        will raise a TypeError).: null
widgets/utils/saveplot.py:
    save_plot: null
widgets/utils/settings.py:
    _T: null
    def `QSettings_readArray`:
        def `normalize_spec`:
            len(spec) != 2: null
widgets/utils/signals.py:
    Input: null
    Output: null
    InputSignal: null
    OutputSignal: null
    Single: null
    Multiple: null
    Default: null
    NonDefault: null
    Explicit: null
    Dynamic: null
    WidgetSignalsMixin: null
    AttributeList: null
widgets/utils/slidergraph.py:
    class `SliderGraph`:
        def `__init__`:
            bottom: null
            left: null
        def `_update_horizontal_lines`:
            '{:.3f}': null
widgets/utils/spinbox.py:
    class `DoubleSpinBox`:
        def `__init__`:
            stepType: null
        def `textFromValue`:
            f: null
        def `__adaptiveDecimalStep`:
            '1.01': null
        stepType: null
        def `sizeHint`:
            X: null
            .: null
            ' ': null
            '-': null
widgets/utils/sql.py:
    Download (and sample if necessary) the SQL data first: null
    def `check_sql_input`:
        def `new_f`:
            download_sql_data: null
    def `check_sql_input_sequence`:
        def `new_f`:
            download_sql_data: null
widgets/utils/state_summary.py:
    def `format_variables_string`:
        —: null
        categorical: null
        numeric: null
        time: null
        string: null
        '{i} {j}': null
        '{sum(counts)} ({", ".join(var_string)})': null
        '{counts[0]} {attrs[0]}': null
    def `_plural`:
        s: null
    def `format_summary_details`:
        def `b`:
            <b>{s}</b>: null
        name: null
        untitled: null
        '{len(data):n} instance{_plural(len(data))}, ': null
        '{n_features} variable{_plural(n_features)}': null
        '{name}: ': null
        '\nFeatures: {features} {features_missing}': null
        '\nTarget: {targets}': null
        '\nMetas: {metas}': null
        '<b><u>{escape(name)}</u></b>: {basic}': null
        '{basic}': null
        'Features: {features} {features_missing}': null
        'Target: {targets}': null
        'Metas: {metas}': null
        <br/>: null
    def `missing_values`:
        ({value*100:.1f}% missing values): null
        (no missing values): null
    def `format_multiple_summaries`:
        input: null
        def `new_line`:
            \n: null
            <br>: null
        No data on {type_io}.: null
        '{name}:<br>{details}': null
        <hr>: null
    def `_name_of`:
        name: null
    def `_nobr`:
        <nobr>{s}</nobr>: null
    def `summarize_`:
        <br/>: null
        '{_name_of(preprocessor)} (empty)': null
        🄿: null
    '&#9924;': null
    🄼: null
    🄻: null
    🅂: null
widgets/utils/stdpaths.py:
    '{__name__} module is deprecated.': null
widgets/utils/stickygraphicsview.py:
    StickyGraphicsView: null
    class `_OverlayWidget`:
        def `__init__`:
            sticky-view-shadow: null
        def `changeEvent`:
            sticky-view-shadow: null
    class `StickyGraphicsView`:
        def `setupViewport`:
            sticky-header-view: null
            sticky-footer-view: null
            sticky-header-overlay-container: null
            sticky-footer-overlay-container: null
    def `main`:
        Zoom in: null
        Zoom out: null
        Reset: null
    __main__: null
widgets/utils/tableview.py:
    def `table_view_compact`:
        X: null
    class `TableView`:
        def `__init__`:
            horizontalScrollMode: null
            verticalScrollMode: null
    def `table_selection_to_mime_data`:
        excel: null
        utf-8: null
        excel-tab: null
        text/csv: null
        text/tab-separated-values: null
        text/plain: null
    def `lines_to_csv_string`:
        excel: null
widgets/utils/textimport.py:
    ColumnType: null
    RowSpec: null
    CSVOptionsWidget: null
    CSVImportWidget: null
    _A: null
    _B: null
    class `Dialect`:
        def `__init__`:
            \r\n: null
        def `__repr__`:
            ', ': null
            '{!r}': null
            Dialect(: null
            ): null
    class `ColumnType`:
        Skip: null
        Auto: null
        Numeric: null
        Categorical: null
        Text: null
        Time: null
    class `LineEdit`:
        def `sizeHint`:
            X: null
    class `CSVOptionsWidget`:
        Tab: Tabulator
        \t: false
        Comma: Vejica
        ',': false
        Semicolon: Podpičje
        ;: false
        Space: Presledek
        ' ': false
        def `__init__`:
            ',': true
            '|': true
            \": true
            selectedEncoding: false
            utf-8: false
            encoding-combo-box: false
            Select file text encoding: Kodiranje datoteke
            delimiter-combo-box: false
            Select cell delimiter character.: Ločilo med celicami tabele
            Other: Drugo
            .: true
            custom-delimiter-edit: false
            quote-edit-combo-box: false
            '''': true
            Encoding: "Kodiranje: "
            Cell delimiter: "Ločilo med celicami: "
            Quote character: "Narekovaj (za označevanje celic): "
        def `setSelectedEncoding`:
            separator: false
        def `encoding`:
            latin-1: latin-2
        def `__show_encodings_widget`:
            -encoding-selection-tool-window: false
            Customize Encodings List: Izberi oblike kodiranja
        def `__set_visible_codecs`:
            ascii: null
            Customize Encodings List...: Izberi oblike kodiranja...
    class `CSVImportWidget`:
        def `__init__`:
            X: true
            grouping-separator-combo-box: false
            Thousands group separator: Ločilo med tisočicami
            None: Brez
            No separator: Ni ločila
            .: false
            ',': false
            Space: Presledek
            ' ': false
            '''': false
            (\.|,| |')?: false
            decimal-separator-combo-box: false
            Decimal separator: Ločilo za decimalni del
            (\.|,): false
            'Grouping:': 'Skupine: '
            'Decimal:': "Decimalni del: "
            'Number separators:': 'Ločila med števkami: '
            column-type-edit-combo-box: false
            Auto: (prepoznaj)
            'The type will be determined automatically based ': 'Tip bo prepoznan samodejno '
            on column contents.: glede na vsebino
            Numeric: Številka
            Categorical: Kategorije
            Text: Besedilo
            Datetime: Datum/Ura
            separator: false
            Ignore: Izpusti
            The column will not be loaded: Stolpca ni mogoče naložiti
            Column type: Vrsta podatka
            -error-overlay: false
            -error-text-label: false
        def `numbersFormat`:
            group: false
            decimal: false
        def `__decimal_sep_activated`:
            .: false
            ',': false
        def `__group_sep_activated`:
            .: false
            ',': false
        def `__resetPreview`:
            surrogateescape: false
        def `__vheader_context_menu`:
            Skip: Izpusti
            Header: Glava
        def `__run_type_columns_menu`:
            separator: false
        def `__setColumnType`:
            group: false
            decimal: false
    def `is_surrogate_escaped`:
        \udc80: false
        \udcff: false
    class `PreviewItemDelegate`:
        def `initStyleOption`:
            '...': false
    def `icon_for_column_type`:
        N: false
        red: false
        C: nufalsell
        green: false
        S: false
        black: false
        T: false
        deepskyblue: false
    class `ColumnValidateItemDelegate`:
        def `validate`:
            NA: false
            Na: false
            na: false
            n/a: false
            N/A: false
            '?': false
            .: false
    def `number_parser`:
        .: false
    def `format_exception_csv`:
        'CSV parsing error: ': 'Napaka pri branju: '
    ? "\\\n ,A,B,C,D\n1,a,1,1,\n2,b,2,2,\n3,c,3,3,\n4,d,4,4,,\\\n"
    : false
    def `main`:
        rb: false
    __main__: false
widgets/utils/webview.py:
    WebviewWidget: null
widgets/utils/widgetpreview.py:
    WidgetPreview: null
widgets/utils/plot/owpalette.py:
    create_palette: null
    OWPalette: null
widgets/utils/plot/owplotgui.py:
    variables_selection: null
    OrientedWidget: null
    OWToolbar: null
    StateButtonContainer: null
    OWAction: null
    OWButton: null
    OWPlotGUI: null
    class `VariableSelectionModel`:
        def `mimeData`:
            'see properties: item_index': null
            item_index: null
        def `dropMimeData`:
            item_index: null
    class `VariablesDelegate`:
        def `paint`:
            ' Add ': null
            ' Remove ': null
    class `OWAction`:
        def `__init__`:
            ../../icons: null
            .png: null
    class `OWPlotGUI`:
        def `__init__`:
            (Same color): null
            (Same shape): null
            (Same size): null
            (No labels): null
        Zoom: null
        state: null
        Dlg_zoom: null
        Reset zoom: null
        Dlg_zoom_reset: null
        Pan: null
        Dlg_pan_hand: null
        Select: null
        Dlg_arrow: null
        Add to selection: null
        selection_behavior: null
        Dlg_select_add: null
        Remove from selection: null
        Dlg_select_remove: null
        Toggle selection: null
        Dlg_select_toggle: null
        Replace selection: null
        Send selection: null
        send_selection: null
        Dlg_send: null
        Clear selection: null
        clear_selection: null
        Dlg_clear: null
        ShufflePoints: null
        shuffle_points: null
        Dlg_sort: null
        Animate plot: null
        animate_plot: null
        update_animations: null
        Animate points: null
        animate_points: null
        Antialias plot: null
        antialias_plot: null
        update_antialiasing: null
        Antialias points: null
        antialias_points: null
        Antialias lines: null
        antialias_lines: null
        Disable effects for large datasets: null
        auto_adjust_performance: null
        update_performance: null
        def `antialiasing_check_box`:
            use_antialiasing: null
            Use antialiasing: null
            update_antialiasing: null
        def `jitter_size_slider`:
            'Jittering: ': null
            jitter_size: null
            jitter_sizes: null
        def `jitter_numeric_check_box`:
            jitter_continuous: null
            Jitter numeric values: null
            update_jittering: null
        def `show_legend_check_box`:
            show_legend: null
            Show legend: null
            update_legend_visibility: null
        def `tooltip_shows_all_check_box`:
            tooltip_shows_all: null
            Show all data on mouse hover: null
        def `class_density_check_box`:
            class_density: null
            Show color regions: null
        def `regression_line_check_box`:
            show_reg_line: null
            Show regression line: null
        def `label_only_selected_check_box`:
            label_only_selected: null
            Label only selection and subset: null
        def `filled_symbols_check_box`:
            show_filled_symbols: null
            Show filled symbols: null
            update_filled_symbols: null
        def `grid_lines_check_box`:
            show_grid: null
            Show gridlines: null
            update_grid_visibility: null
        def `animations_check_box`:
            use_animations: null
            Use animations: null
            update_animations: null
        def `point_size_slider`:
            'Symbol size: ': null
            point_width: null
            sizes_changed: null
        def `alpha_value_slider`:
            'Opacity: ': null
            alpha_value: null
            colors_changed: null
        def `color_value_combo`:
            'Color: ': null
            attr_color: null
            colors_changed: null
        def `shape_value_combo`:
            'Shape: ': null
            attr_shape: null
            shapes_changed: null
        def `size_value_combo`:
            'Size: ': null
            attr_size: null
            sizes_changed: null
        def `label_value_combo`:
            'Label: ': null
            attr_label: null
            labels_changed: null
        def `point_properties_box`:
            Attributes: null
        def `zoom_select_toolbar`:
            Zoom / Select: null
        def `theme_combo_box`:
            theme_name: null
            Theme: null
            Default: null
            Light: null
            Dark: null
        def `box_zoom_select`:
            Zoom/Select: null
widgets/utils/plot/owplotgui_obsolete.py:
    class `AddVariablesDialog`:
        def `__init__`:
            Hidden Axes: null
            Add: null
            Cancel: null
    class `VariablesSelection`:
        def `__call__`:
            sizePolicy: null
            selectionMode: null
            dragEnabled: null
            defaultDropAction: null
            dragDropOverwriteMode: null
            dragDropMode: null
            Displayed Axes: null
            Delete: null
            +: null
            Add new class label: null
            MINUS SIGN: null
            Remove selected class label: null
    class `OWAction`:
        def `__init__`:
            ../../icons: null
            .png: null
    class `OWPlotGUI`:
        def `__init__`:
            (Same color): null
            (Same shape): null
            (Same size): null
            (No labels): null
        Overlap: null
        Zoom: null
        state: null
        Dlg_zoom: null
        Reset zoom: null
        Dlg_zoom_reset: null
        Pan: null
        Dlg_pan_hand: null
        Select: null
        Dlg_arrow: null
        Add to selection: null
        selection_behavior: null
        Dlg_select_add: null
        Remove from selection: null
        Dlg_select_remove: null
        Toggle selection: null
        Dlg_select_toggle: null
        Replace selection: null
        Send selection: null
        send_selection: null
        Dlg_send: null
        Clear selection: null
        clear_selection: null
        Dlg_clear: null
        ShufflePoints: null
        shuffle_points: null
        Dlg_sort: null
        Animate plot: null
        animate_plot: null
        update_animations: null
        Animate points: null
        animate_points: null
        Antialias plot: null
        antialias_plot: null
        update_antialiasing: null
        Antialias points: null
        antialias_points: null
        Antialias lines: null
        antialias_lines: null
        Disable effects for large datasets: null
        auto_adjust_performance: null
        update_performance: null
        def `antialiasing_check_box`:
            use_antialiasing: null
            Use antialiasing: null
            update_antialiasing: null
        def `jitter_size_slider`:
            jitter_sizes: null
            jitter_size: null
            'Jittering: ': null
            None: null
            '%.1f %%': null
            '%d %%': null
        def `jitter_numeric_check_box`:
            jitter_continuous: null
            Jitter numeric values: null
        def `show_legend_check_box`:
            show_legend: null
            Show legend: null
            update_legend: null
        def `tooltip_shows_all_check_box`:
            tooltip_shows_all: null
            Show all data on mouse hover: null
            cb_tooltip_shows_all: null
        def `class_density_check_box`:
            class_density: null
            Show class density: null
        def `regression_line_check_box`:
            show_reg_line: null
            Show regression line: null
        def `label_only_selected_check_box`:
            label_only_selected: null
            Label only selected points: null
        def `filled_symbols_check_box`:
            show_filled_symbols: null
            Show filled symbols: null
            update_filled_symbols: null
        def `grid_lines_check_box`:
            show_grid: null
            Show gridlines: null
            update_grid: null
        def `animations_check_box`:
            use_animations: null
            Use animations: null
            update_animations: null
        def `point_size_slider`:
            point_width: null
            'Symbol size:   ': null
            update_point_size: null
        def `alpha_value_slider`:
            alpha_value: null
            'Opacity: ': null
            update_alpha_value: null
        def `color_value_combo`:
            attr_color: null
            'Color: ': null
            update_colors: null
        def `shape_value_combo`:
            attr_shape: null
            'Shape: ': null
            update_shapes: null
        def `size_value_combo`:
            attr_size: null
            'Size: ': null
            update_sizes: null
        def `label_value_combo`:
            attr_label: null
            'Label: ': null
            update_labels: null
        def `point_properties_box`:
            Points: null
        def `plot_properties_box`:
            Plot Properties: null
        def `zoom_select_toolbar`:
            Zoom / Select: null
        def `effects_box`:
            Visual effects: null
        def `theme_combo_box`:
            theme_name: null
            Theme: null
            Default: null
            Light: null
            Dark: null
widgets/utils/save/owsavebase.py:
    ~{os.sep}: null
    class `OWSaveBase`:
        class `Information`:
            Empty input; nothing was saved.: Ni podatkov.
        class `Error`:
            File name is not set.: Ime datoteke ni določeno.
            File format is unsupported.\n{}: Format datoteke ni podprt.\n{}
            '{}': false
        def `__init__`:
            auto_save: false
            Autosave when receiving new data: Samodejno shrani ob prejemu novih podatkov
            Save as {self.stored_name}: Shrani kot {self.stored_name}
            Save: Shrani
            Save as ...: Shrani kot ...
        def `last_dir`:
            basedir: false
            ..: false
        def `_abs_path_from_setting`:
            basedir: false
        def `workflowEnvChanged`:
            basedir: false
        def `save_file_as`:
            Save as {self.stored_name}: Shrani kot {self.stored_name}
        def `_replace_extension`:
            .: false
        def `_extension_from_filter`:
            .*\(\*?(\..*)\)$: false
        def `migrate_settings`:
            last_dir: false
            stored_path: false
            filename: false
            stored_name: false
        darwin: false
        win32: false
        def `get_save_filename`:
            Save File: Shrani datoteko
            ;;: false
widgets/utils/tests/concurrent_example.py:
    def `run`:
        Calculating...: null
    class `OWConcurrentWidget`:
        Projection: null
        def `_add_controls`:
            param: null
            'Parameter:': null
            Param A: null
            Param B: null
            Start: null
        def `_toggle_run`:
            Resume: null
        def `_run`:
            Stop: null
        def `on_done`:
            Start: null
    __main__: null
    iris: null
widgets/visualize/__init__.py:
    Visualize: null
    orange.widgets.visualize: null
    Widgets for data visualization.: null
    '#FFB7B1': null
    icons/Category-Visualize.svg: null
widgets/visualize/owbarplot.py:
    class `ParameterSetter`:
        Gridlines: null
        Show: null
        Bottom axis: null
        Group axis: null
        Vertical ticks: null
        def `update_setters`:
            def `update_bottom_axis`:
                bottom: null
        def `axis_items`:
            item: null
    class `BarPlotGraph`:
        def `__init__`:
            bottom: null
            left: null
        def `update_axes`:
            left: null
            bottom: null
        def `reset_view`:
            height: null
        def `select_by_rectangle`:
            x: null
            height: null
        def `__get_index_at`:
            height: null
        def `__select_bars`:
            height: null
    class `OWBarPlot`:
        Bar Plot: null
        Visualizes comparisons among categorical variables.: null
        icons/BarPlot.svg: null
        chart: null
        class `Inputs`:
            Data: null
            Data Subset: null
        class `Outputs`:
            Selected Data: null
        graph.plotItem: null
        class `Error`:
            Plotting requires a numeric feature.: null
        class `Information`:
            Data has too many instances. Only first {}: null
            ' are shown.': null
        Enumeration: null
        def `_add_controls`:
            selected_var: null
            'Values:': null
            None: null
            group_var: null
            'Group by:': null
            annot_var: null
            'Annotations:': null
            (Same color): null
            color_var: null
            'Color:': null
            auto_commit: null
        def `grouped_indices`:
            mergesort: null
        def `init_attr_values`:
            selected_var: null
            group_var: null
            annot_var: null
            color_var: null
        def `get_tooltip`:
            <br/>: null
            '{} = {}': null
            <b>{}</b><br/><br/>{}: null
    __main__: null
    iris: null
widgets/visualize/owboxplot.py:
    ContDataRange: false
    low: false
    high: false
    group_value: false
    DiscDataRange: false
    value: false
    class `BoxData`:
        def `__init__`:
            midpoint: false
    class `OWBoxPlot`:
        Box Plot: "Škatla z brki"
        Visualize the distribution of feature values in a box plot.: "Prikaži porazdelitev vrednosti spremenljivke v škatli z brki."
        icons/BoxPlot.svg: false
        whisker: "box"
        # kje lahko to vidim? Je to treba prevest ali je nekaj, kar obstaja drugje? Na primer v svetu Aleševe čarovnije? 
        class `Inputs`:
            Data: false
        class `Outputs`:
            Selected Data: false
        class `Warning`:
            Data contains no categorical or numeric variables: "Podatki ne vsebujejo kategoričnih ali številskih spremenljivk."
        median: false
        mean: false
        box_scene: false
        def `__init__`:
            Variable: "Spremenljivka"
            order_by_importance: false
            Order by relevance to subgroups: "Uredi glede na različnost po skupinah"
            # uredi glede na pripadnost skupni? Razvrsti po ustreznosti skupin??? 
            Order by 𝜒² or ANOVA over the subgroups: "Uredi glede na vrednost 𝜒² ali ANOVA med skupinami"
            None: "Brez"
            Subgroups: "Skupine"
            order_grouping_by_importance: false
            Order by relevance to variable: "Uredi glede na pomembnost spremenljivke"
            Order by 𝜒² or ANOVA over the variable values: "Uredi glede na vrednost 𝜒² ali ANOVA za vrednosti spremenljivke"
            Display: "Prikaz"
            show_annotations: false
            Annotate: "Oznake"
            # zakaj ne "označi"?
            compare: false
            No comparison: "Brez primerjanja"
            Compare medians: "Primerjaj srednje vrednosti"
            Compare means: "Primerjaj povprečja"
            stretched: false
            Stretch bars: "Raztegni črte"
            show_labels: false
            Show box labels: "Pokaži oznake črt"
            sort_freqs: false
            Sort by subgroup frequencies: "Uredi po pogostosti skupin"
        def `reset_attrs`:
            hidden: false
        def `reset_groups`:
            hidden: false
        def `compute_box_data`:
            missing '{self.group_var.name}': "(neznana vrednost)"
        def `_display_changed_disc`:
            '{}': false
        def `_compute_tests_cont`:
            'At least one group has just one instance, ': "Vsaj ena skupina ima zgolj en primer, "
            cannot compute significance: "zato ne morem izračunati pomembnosti."
            'Student''s t: {t:.3f} (p={p:.3f}, N={n})': "Studentov t-test: {t:.3f} (p={p:.3f}, N={n})"
            'ANOVA: {F:.3f} (p={p:.3f}, N={n})': true
        def `_compute_tests_disc`:
            'χ²: {chi:.2f} (p={p:.3f}, dof={dof})': true
        def `mean_label`:
            ' \u00b1 ': true
            '%.*f': true
            ': ': true
        def `draw_axis`:
            '?': true
        def `strudel`:
            missing '{attr.name}': "(neznana vrednost)"
            '{value}: {100 * freq / total:.2f}%': true
            '{value}: ({int(freq)})': true
        def `_show_posthoc`:
            median: false
            mean: false
        def `send_report`:
            'Box plot for attribute ''{self.attribute.name}'' ': "Škatla z brki za spremenljivko '{self.attribute.name}' "
            grouped by '{self.group_var.name}': "urejeno po '{self.group_var.name}'"
    __main__: false
    heart_disease.tab: false
widgets/visualize/owdistributions.py:
    class `ScatterPlotItem`:
        def `paint`:
            pxMode: false
            antialias: false
    class `AshCurve`:
        def `pdf`:
            same: false
    class `ElidedAxisNoUnits`:
        def `labelString`:
            ;: true
            '{k}: {v}': true
            <span style='{style}'>{self.labelText}</span>: false
    class `OWDistributions`:
        Distributions: Porazdelitve
        Display value distributions of a data feature in a graph.: Pokaži porazdelitev
            vrednosti spremenljivke.
            # v grafu je na y osi označba "frekvence" že prevedena, na x osi pa ostaja neprevedeno "age"
        icons/Distribution.svg: false
        histogram: true
        class `Inputs`:
            Data: Podatki
            Set the input dataset: Določi vhodne podatke
        class `Outputs`:
            Selected Data: Izbrani podatki
            Histogram Data: Podatki o porazdelitvi
        class `Error`:
            Variable '{}' does not have any defined values: Spremenljivke '{}' nima
                definiranih vrednosti.
            No data instances with '{}' and '{}' defined: Nobena vrstica nima znanih
                vrednosti za '{}' in '{}'.
        class `Warning`:
            Data instances with missing values are ignored: Podatki z neznanimi vrednostmi
                so izločeni.
        plot: false
        None: (brez)
        Normal: Normalna
        loc: false
        scale: false
        μ: true
        σ: true
        Beta: true
        a: false
        b: false
        α: true
        β: true
        -loc: false
        -scale: false
        Gamma: Gama
        Rayleigh: true
        Pareto: true
        Exponential: Eksponentna
        λ: true
        Kernel density: Jedra
        def `__init__`:
            var: false
            Variable: Spremenljivka
            sort_by_freq: false
            Sort categories by frequency: Uredi kategorije po velikosti
            Distribution: Porazdelitev
            fitted_distribution: false
            Fitted distribution: Prilagodi porazdelitev
            number_of_bins: false
            Bin width: Širina koša
            kde_smoothing: false
            Smoothing: Glajenje
            hide_bars: false
            Hide bars: Skrij stolpce
            Columns: Stolpci
            cvar: false
            Split by: Razdeli po
            (None): (Ne deli)
            stacked_columns: false
            Stack columns: Naloži stolpce
            show_probs: false
            Show probabilities: Pokaži verjetnosti
            cumulative_distr: false
            Show cumulative distribution: Pokaži kumulativno porazdelitev
        def `_setup_plots`:
            def `add_new_plot`:
                right: false
            bottom: false
            left: false
        def `_on_show_probabilities_changed`:
            Fitted probability: Prilagojena verjetnost
            Chosen distribution is used to compute Bayesian probabilities: Izbrana
                porazdelitev je uporabljena za izračun Bayesovkih verjenosti
            Fitted distribution: Prilagojena porazdelitev
        def `_set_axis_names`:
            bottom: false
            left: false
            Probability of '{self.cvar.name}' at given '{self.var.name}': Verjetnost
                '{self.cvar.name}' pri podani '{self.var.name}'
            Frequency: Frekvenca
        def `_disc_plot`:
            bottom: false
            <p style='white-space:pre;'>: true
            '<b>{escape(desc)}</b>: {int(freq)} ': true
            '({100 * freq / len(self.valid_data):.2f} %) ': true
        def `_disc_split_plot`:
            bottom: false
        def `_cont_plot`:
            <p style='white-space:pre;'>: true
            '<b>{escape(desc)}</b>: ': true
            '{freq} ({100 * freq / total:.2f} %)</p>': true
        def `_set_cont_ticks`:
            bottom: false
        def `_fit_approximation`:
            def `join_pars`:
                ', ': true
                '{sname}={strv(val)}': true
            def `str_params`:
                '-': true
                ' ({par})': true
        def `_set_curve_brushes`:
            pen: false
        def `_split_tooltip`:
            'white-space:pre; text-align: right;': true
            'style=''{cs} padding-left: 1em''': true
            style='{cs}': false
            '<table style=''border-collapse: collapse''>': true
            <tr><th {s}>{escape(valname)}:</th>: true
            <td {snp}><b>{int(tot_group)}</b></td>: true
            <td/>: true
            <td {s}><b>{100 * tot_group / total:.2f} %</b></td></tr>: true
            <tr><td/><td/><td {s}>(in group)</td><td {s}>(overall)</td>: true
            </tr>: true
            <tr>: true
            <th {s}>{value}:</th>: true
            <td {snp}><b>{int(freq)}</b></td>: true
            <td {s}>{100 * freq / div_group:.2f} %</td>: true
            <td {s}>{100 * freq / total:.2f} %</td>: true
            </table>: true
        def `_display_legend`:
            s: false
            ' ({desc})': true
        def `str_int`:
            '{var.name} < {sx1}': true
            '{var.name} = {sx0}': true
            '{var.name} ≥ {sx0}': true
            '{sx0} ≤ {var.name} < {sx1}': true
        def `show_selection`:
            <p style='white-space:pre;'>: true
            '<b>{escape(valname)}</b>: ': true
            '{inside} ({100 * inside / total:.2f} %)': true
        def `apply`:
            Bin: Koš
        def `_get_histogram_table`:
            Bin: Koš
            Count: Število
        def `_get_cont_baritem_indices`:
            ignore: false
        def `send_report`:
            Cummulative distribution of '{self.var.name}': Kumulativna porazdelitev
                '{self.var.name}'
            Distribution of '{self.var.name}': Porazdelitev '{self.var.name}'
            ' with columns split by ''{self.cvar.name}''': ' s stolpci, razdeljenimi
                po ''{self.cvar.name}'''
    __main__: false
    heart_disease.tab: false
widgets/visualize/owfreeviz.py:
    def `run_freeviz`:
        Calculating...: null
    class `InitType`:
        def `items`:
            Circular: null
            Random: null
    class `OWFreeViz`:
        FreeViz: null
        Displays FreeViz projection: null
        icons/Freeviz.svg: null
        viz: null
        class `Error`:
            Data must have a target variable.: null
            Data must have a single target variable.: null
            Target variable must have at least two unique values.: null
            Number of features exceeds the number of instances.: null
            Data is too large.: null
            All data columns are constant.: null
            At least two features are required.: null
        class `Warning`:
            Categorical features with more than: null
            ' two values are not shown.': null
        def `_add_controls`:
            'Hide radius:': null
            hide_radius: null
        def `__add_controls_start_box`:
            Optimize: null
            initialization: null
            'Initialization:': null
            Start: null
        def `_toggle_run`:
            Resume: null
        def `_run`:
            Stop: null
        def `on_done`:
            Start: null
        def `on_exception`:
            Start: null
        def `enable_controls`:
            Start: null
        def `migrate_settings`:
            radius: null
            graph: null
            hide_radius: null
        def `migrate_context`:
            attr_color: null
            graph: null
            attr_size: null
            attr_shape: null
            attr_label: null
    __main__: null
    zoo: null
widgets/visualize/owheatmap.py:
    def `split_domain`:
        N/A: null
    None: null
    No clustering: null
    Clustering: null
    Apply hierarchical clustering: null
    Clustering (opt. ordering): null
    'Apply hierarchical clustering with optimal leaf ': null
    ordering.: null
    Top: null
    Bottom: null
    Top and Bottom: null
    class `OWHeatMap`:
        Heat Map: null
        Plot a data matrix heatmap.: null
        icons/Heatmap.svg: null
        class `Inputs`:
            Data: null
        class `Outputs`:
            Selected Data: null
        scene: null
        class `Information`:
            Data has been sampled: null
            '{} categorical feature{} ignored': null
            '{}': null
            Showing this data may require a lot of memory: null
        class `Error`:
            No numeric features: null
            Not enough features for column clustering: null
            Not enough instances for clustering: null
            Not enough instances for k-means merging: null
            Not enough memory to show this data: null
        class `Warning`:
            Empty clusters were removed: null
        'For data with a meaningful mid-point, ': null
        choose one of diverging palettes.: null
        diverging_palette: null
        def `__init__`:
            Color: null
            Merge: null
            merge_kmeans: null
            Merge by k-means: null
            merge_kmeans_k: null
            'Clusters:': null
            Clustering: null
            row_clustering: null
            col_clustering: null
            'Rows:': null
            'Columns:': null
            Split By: null
            (None): null
            Split the heatmap vertically by a categorical column: null
            split_by_var: null
            Split the heatmap horizontally by column annotation: null
            split_columns_var: null
            Annotation && Legends: null
            legend: null
            Show legend: null
            averages: null
            Stripes with averages: null
            Row Annotations: null
            annotation_var: null
            annotation_color_var: null
            Text: null
            Column annotations: null
            column_annotation_color_var: null
            column_label_pos: null
            Position: null
            keep_aspect: null
            Keep aspect ratio: null
            Resize: null
            auto_commit: null
            Increase Font: null
            ctrl+>: null
            Decrease Font: null
            ctrl+<: null
            setShortcutVisibleInContextMenu: null
        def `set_dataset`:
            hidden: null
            s: null
        def `_make_parts`:
            N/A: null
        def `cluster_rows`:
            Parts: null
        def `cluster_columns`:
            Parts: null
        def `construct_heatmaps`:
            Parts: null
        def `construct_heatmaps_scene`:
            Parts: null
            _T: null
        def `__update_clustering_enable_state`:
            Parts: null
            'Row cluster ordering was disabled due to the ': null
            estimated runtime cost: null
            'Row clustering was was disabled due to the ': null
            'Column cluster ordering was disabled due to ': null
            'Column clustering was disabled due to the ': null
        def `update_annotations`:
            ', ': null
            ' ({} more)': null
        def `_on_view_context_menu`:
            Keep aspect ratio: null
        def `send_report`:
            'Columns:': null
            Clustering: null
            No sorting: null
            'Rows:': null
            'Split:': null
            Row annotation: null
        def `migrate_settings`:
            row_clustering: null
            col_clustering: null
            row_clustering_method: null
            col_clustering_method: null
    def `join_elided`:
        '...': null
    def `column_data_from_table`:
        f: null
    def `colorize`:
        N/A: null
    def `aggregate`:
        ', ': null
        ' ({} more)': null
    def `agg_join_str`:
        ' ({} more)': null
        ', ': null
    _T: null
    __main__: null
    brown-selected.tab: null
widgets/visualize/owlinearprojection.py:
    class `LinearProjectionVizRank`:
        Score Plots: null
        def `__init__`:
            n_attrs: null
            'Number of variables: ': null
        def `row_for_state`:
            ', ': null
        def `_n_attrs_changed`:
            Start: null
            Continue: null
    class `OWLinProjGraph`:
        def `update_anchors`:
            <b>{label}</b>: null
            '...': null
    Placement: null
    class `OWLinearProjection`:
        Linear Projection: null
        'A multi-axis projection of data onto ': null
        a two-dimensional plane.: null
        icons/LinearProjection.svg: null
        Circular Placement: null
        Linear Discriminant Analysis: null
        Principal Component Analysis: null
        class `Error`:
            Plotting requires numeric features: null
        def `_add_controls`:
            Features: null
            'Hide radius:': null
            hide_radius: null
        def `_add_controls_variables`:
            Suggest Features: null
        def `_add_controls_placement`:
            placement: null
        def `_add_buttons`:
            auto_commit: null
        def `_init_vizrank`:
            There is no data.: null
            Color variable has to be selected: null
            'Suggest Features does not work for Linear ': null
            'Discriminant Analysis Projection when ': null
            continuous color variable is selected.: null
            Not enough available continuous variables: null
            Not enough valid data instances: null
        def `init_projection`:
            eigen: null
        def `_get_send_report_caption`:
            Projection: null
            Color: null
            Label: null
            Shape: null
            Size: null
            Jittering: null
            '{} %': null
        def `migrate_settings`:
            point_width: null
            point_size: null
            jitter_size: null
            jitter_value: null
            alpha_value: null
            class_density: null
            graph: null
            radius: null
            hide_radius: null
            selection_indices: null
            selection: null
            placement: null
        def `migrate_context`:
            color_index: null
            attr_color: null
            shape_index: null
            attr_shape: null
            size_index: null
            attr_size: null
            graph: null
            attr_label: null
            selected_vars: null
    __main__: null
    iris: null
widgets/visualize/owlineplot.py:
    class `ParameterSetter`:
        Mean: null
        Lines: null
        Lines (missing value): null
        Selected lines: null
        Selected lines (missing value): null
        Range: null
        Selected range: null
        def `update_setters`:
            Dash line: null
        def `axis_items`:
            item: null
    class `LinePlotGraph`:
        def `__init__`:
            bottom: null
            left: null
        def `update_legend`:
            s: null
        def `reset`:
            bottom: null
    class `ProfileGroup`:
        def `update_profiles_color`:
            pen: null
        def `update_sel_profiles_color`:
            pen: null
    class `OWLinePlot`:
        Line Plot: null
        Visualization of data profiles (e.g., time series).: null
        icons/LinePlot.svg: null
        class `Inputs`:
            Data: null
            Data Subset: null
        class `Outputs`:
            Selected Data: null
        graph.plotItem: null
        class `Error`:
            Need at least one numeric feature.: null
        class `Warning`:
            No display option is selected.: null
        class `Information`:
            Data has too many features. Only first {}: null
            ' are shown.': null
        def `_add_controls`:
            Display: null
            show_profiles: null
            Lines: null
            Plot lines: null
            show_range: null
            Range: null
            Plot range between 10th and 90th percentile: null
            show_mean: null
            Mean: null
            Plot mean curve: null
            show_error: null
            Error bars: null
            Show standard deviation: null
            None: null
            group_var: null
            Group by: null
            auto_commit: null
        def `__show_profiles_changed`:
            profiles: null
        def `__show_range_changed`:
            range: null
        def `__show_mean_changed`:
            mean: null
        def `__show_error_changed`:
            error: null
        def `setup_plot`:
            bottom: null
        def `__get_visibility_flags`:
            show_profiles: null
            show_range: null
            show_mean: null
            show_error: null
        def `_update_visibility`:
            set_visible_{}: null
        def `send_report`:
            Group by: null
    __main__: null
    brown-selected: null
widgets/visualize/owmosaic.py:
    class `MosaicVizRank`:
        Mosaic Ranking: null
        def `__init__`:
            max_attrs: null
            'Number of variables:': null
            one: null
            two: null
            three: null
            four: null
            at most two: null
            at most three: null
            at most four: null
        def `max_attr_changed`:
            Start: null
            Continue: null
        def `check_preconditions`:
            no_attributes: null
            No variables to rank.: null
        def `compute_attr_order`:
            name: null
        def `compute_score`:
            '-': null
        def `row_for_state`:
            ', ': null
    class `OWMosaicDisplay`:
        Mosaic Display: null
        Display data in a mosaic plot.: null
        icons/MosaicDisplay.svg: null
        class `Inputs`:
            Data: null
            Data Subset: null
        class `Outputs`:
            Selected Data: null
        canvas: null
        class `Warning`:
            Data subset is incompatible with Data: null
            No valid data: null
            Selection of numeric features on SQL is not supported: null
        def `__init__`:
            (None): null
            variable{}: null
            Find Informative Mosaics: null
            Interior Coloring: null
            (Pearson residuals): null
            variable_color: null
            use_boxes: null
            Compare with total: null
        def `update_graph`:
            def `get_counts`:
                '-': null
            def `draw_data`:
                '-': null
                '{}&nbsp;&nbsp;&nbsp;&nbsp;{}: <b>{}</b><br/>': null
            def `add_rect`:
                <hr/>: null
                'Expected instances: %.1f<br>': null
                'Actual instances: %d<br>': null
                'Standardized (Pearson) residual: %.1f': null
                '-': null
                <br/>: null
                '<b>%s</b>: %d / %.1f%% (Expected %.1f / %.1f%%)': null
                '{}<hr>Instances: {}<br><br>{}': null
            def `create_legend`:
                <-8: null
                -8:-4: null
                -4:-2: null
                '-2:2': null
                '2:4': null
                '4:8': null
                '>8': null
                'Residuals:': null
            Feature {} has no values: null
        def `migrate_context`:
            (None): null
    def `get_conditional_distribution`:
        COUNT(*): null
        '?': null
        None: null
        '-': null
    __main__: null
    zoo: null
widgets/visualize/ownomogram.py:
    class `SortBy`:
        def `items`:
            Original order: "Originalni"
            Alphabetically: "Abecedni"
            Absolute importance: "Absolutna pomembnost"
            Positive influence: "Pozitivni vpliv"
            Negative influence: "Negativni vpliv"
    class `DotItem`:
        'ul {margin-top: 1px; margin-bottom: 1px;}': false
        ? "<html><head><style type=\"text/css\">{}</style>\n    </head><body><b>{}</b><hr/>{}</body></html>\n\
            \    "
        : false
    class `ProbabilitiesDotItem`:
        def `get_tooltip_text`:
            'Total: {} <br/>Probability: {:.0%}': 'Vsota: {} <br/>Verjetnost: {:.0}&nbsp;%'
    class `DiscreteMovableDotItem`:
        def `get_tooltip_text`:
            'Points: {}': 'Točke: {}'
            '{}: {:.0%}<br/>': false
        def `_get_tooltip_labels_with_percentages`:
            <: false
            '&lt;': false
    class `GraphicsColorAnimator`:
        def `__init__`:
            brushColor: false
    class `ContinuousItemMixin`:
        def `get_tooltip_text`:
            'Points: {}': 'Točke: {}'
            'Value: {}': 'Vrednost: {}'
    class `ProbabilitiesRulerItem`:
        def `__init__`:
            Total: "Vsota"
            ' ': false
    class `OWNomogram`:
        Nomogram: true
        ' Nomograms for Visualization of Naive Bayesian': "Nomogram za prikaz "
        ' and Logistic Regression Classifiers.': "naivnega Bayesovega modela in logistične regresije."
        icons/Nomogram.svg: false
        class `Inputs`:
            Classifier: Model
            Data: Podatki
        class `Outputs`:
            Features: Značilke
        scene: false
        class `Error`:
            'Nomogram accepts only Naive Bayes and ': "Nomogram sprejema zgolj naivni Bayesov "
            Logistic Regression classifiers.: "klasifikator in logistično regresijo."
        def `__init__`:
            "Target class: ": "Ciljni razred: "
            target_class_index: false
            normalize_probabilities: false
            Normalize probabilities: "Normiraj verjetnosti"
            "margin-bottom: 12px": false
            For multiclass data 1 vs. all probabilities do not: "Za večrazredne podatke 'eden proti vsem' se posamične napovedane verjetnosti"
            ' sum to 1 and therefore could be normalized.': " ne seštejejo v 1."
            scale: false
            'Order: ': "Vrstni red: "
            "Scale: ": "Lestvica: "
            Point scale: "Točkovna lestvica"
            Log odds ratios: "Razmerje logaritmov obetov"
            Displayed features: "Prikazane spremenljivke"
            display_index: false
            All features: Vse značilke
            'Best ranked:': "Prvih:"
            n_attributes: false
            ' ': false
            sort_index: false
            cont_feature_dim_index: false
            "Show: ": "Pokaži: "
            'Numeric features:': "Številske spremenljivke:"
            1D projection: "1D projekcija"
            2D curve: "2D krivulja"
            class `GraphicsView`:
                def `__init__`:
                    'QGraphicsView {background: white}': false
        def `_class_combo_changed`:
            ignore: false
        def `update_scene`:
            Points: "Točke"
            Probabilities (%): "Verjetnosti (%)"
        def `create_footer_nomogram`:
            '{}=''{}''': false
        def `reset_settings`:
            ignore: false
            combo box 'target_class_index' is empty: false
    __main__: false
    heart_disease: false
widgets/visualize/owpythagorastree.py:
    class `OWPythagorasTree`:
        Pythagorean Tree: null
        Pythagorean Tree visualization for tree like-structures.: null
        icons/PythagoreanTree.svg: null
        fractal: null
        class `Inputs`:
            Tree: null
        class `Outputs`:
            Selected Data: null
        scene: null
        corner: null
        offset: null
        def `__init__`:
            Normal: null
            Square root: null
            Logarithmic: null
            Tree Info: null
            Display Settings: null
            depth_limit: null
            Depth: null
            target_class_index: null
            Target class: null
            size_calc_idx: null
            Size: null
            size_log_scale: null
            Log scale factor: null
            Plot Properties: null
            tooltips_enabled: null
            Enable tooltips: null
            show_legend: null
            Show legend: null
            Redraw: null
        def `set_tree`:
            meta_target_class_index: null
            meta_size_calc_idx: null
            meta_depth_limit: null
        def `_update_info_box`:
            'Nodes: {}\nDepth: {}': null
        def `_update_log_scale_slider`:
            Logarithmic: null
        def `_clear_info_box`:
            No tree on input: null
        def `_update_target_class_combo`:
            Target class: null
            None: null
            Node color: null
        def `_classification_update_legend_colors`:
            other: null
            '#ffffff': null
    __main__: null
    iris: null
widgets/visualize/owpythagoreanforest.py:
    class `PythagoreanForestModel`:
        def `data`:
            tree: null
            scene: null
        def `update_tree_views`:
            tree: null
    class `PythagorasTreeDelegate`:
        def `paint`:
            '#ebebeb': null
    class `OWPythagoreanForest`:
        Pythagorean Forest: null
        Pythagorean forest for visualising random forests.: null
        icons/PythagoreanForest.svg: null
        fractal: null
        class `Inputs`:
            Random Forest: null
            Random forest: null
        class `Outputs`:
            Tree: null
        scene: null
        Normal: null
        Square root: null
        Logarithmic: null
        def `migrate_settings`:
            selected_tree_index: null
            zoom: null
        def `__init__`:
            Forest: null
            Display: null
            depth_limit: null
            Depth: null
            target_class_index: null
            Target class: null
            size_calc_idx: null
            Size: null
            zoom: null
            Zoom: null
        def `_update_info_box`:
            'Trees: {}': null
        def `_update_target_class_combo`:
            Target class: null
            None: null
            Node color: null
        def `_clear_info_box`:
            No forest on input.: null
    __main__: null
    iris: null
widgets/visualize/owradviz.py:
    class `RadvizVizRank`:
        Score Plots: null
        def `__init__`:
            n_attrs: null
            'Maximum number of variables: ': null
        def `_evaluate_projection`:
            ignore: null
        def `_n_attrs_changed`:
            Start: null
            Continue: null
        def `progressBarSet`:
            ' Evaluated {} permutations': null
        def `row_for_state`:
            '[{:0.6f}] ': null
            ', ': null
    class `OWRadvizGraph`:
        def `update_anchors`:
            <b>{label}</b>: null
            ' ': null
            \n: null
            '...': null
    class `OWRadviz`:
        Radviz: null
        Display Radviz projection: null
        icons/Radviz.svg: null
        viz: null
        class `Warning`:
            No projection for selected features: null
            Categorical variables with more than: null
            ' two values are not shown.': null
            Maximum number of selected variables reached.: null
        def `_add_controls`:
            Features: null
            Suggest features: null
        def `_add_buttons`:
            auto_commit: null
        def `_send_components_metas`:
            angle: null
        def `migrate_context`:
            attr_color: null
            graph: null
            attr_size: null
            attr_shape: null
            attr_label: null
            selected_vars: null
    __main__: null
    brown-selected: null
widgets/visualize/owruleviewer.py:
    class `OWRuleViewer`:
        CN2 Rule Viewer: null
        Review rules induced from data.: null
        icons/CN2RuleViewer.svg: null
        class `Inputs`:
            Data: null
            Classifier: null
        class `Outputs`:
            Selected Data: null
        def `__init__`:
            IF conditions: null
            THEN class: null
            Distribution: null
            Probabilities [%]: null
            Quality: null
            Length: null
            compact_view: null
            Compact view: null
            Restore original order: null
        def `set_classifier`:
            rule_list: null
        def `copy_to_clipboard`:
            \n: null
        def `send_report`:
            Data domain: null
            Rule induction algorithm: null
            Induced rules: null
    class `CustomRuleViewerTableModel`:
        ==: null
        '=': null
        '!=': null
        ≠: null
        <=: null
        ≤: null
        '>=': null
        ≥: null
        def `data`:
            def `_display_role`:
                ' AND ': null
                ' AND\n': null
                'TRUE': null
                →: null
                '=': null
                .1f: null
                ' : ': null
                '{:.{}{}}': null
                f: null
                e: null
            def `_tooltip_role`:
                ' AND ': null
                ' AND\n': null
                \n: null
                ': ': null
                '{:.1f}': null
                '%': null
    __main__: null
    iris: null
widgets/visualize/owscatterplot.py:
    class `ScatterPlotVizRank`:
        Score Plots: null
        def `check_preconditions`:
            color_required: null
            Color variable is not selected: null
    class `ParameterSetter`:
        def `axis_items`:
            item: null
        def `reg_line_label_items`:
            label: null
    class `OWScatterPlotGraph`:
        def `_regression_line`:
            r = {rvalue:.2f}: null
        def `_add_line`:
            label: null
        def `update_reg_line_label_colors`:
            label: null
        def `update_regression_line`:
            '#505050': null
    class `OWScatterPlot`:
        Scatter Plot: null
        'Interactive scatter plot visualization with ': null
        intelligent data visualization enhancements.: null
        icons/ScatterPlot.svg: null
        class `Inputs`:
            Features: null
        class `Outputs`:
            Features: null
        class `Warning`:
            'Plot cannot be displayed because ''{}'' or ''{}'' ': null
            is missing for all data points.: null
        class `Information`:
            Large SQL table; showing a sample.: null
            Points with missing '{}' or '{}' are not displayed: null
        def `_add_controls`:
            graph.orthonormal_regression: null
            Treat variables as independent: null
            If checked, fit line to group (minimize distance from points);\n: null
            otherwise fit y as a function of x (minimize vertical distances): null
        def `_add_controls_axis`:
            Axes: null
            attr_x: null
            'Axis x:': null
            attr_y: null
            'Axis y:': null
            Find Informative Projections: null
        def `_add_controls_sampling`:
            auto_sample: null
            Sample: null
            Sampling: null
        def `_vizrank_color_change`:
            No data on input: null
            Data is sparse: null
            Not enough features for ranking: null
            Color variable is not selected: null
            Color variable has no values: null
        def `_point_tooltip`:
            <br/>: null
            '{} = {}': null
            <b>{}</b><br/><br/>{}: null
        def `set_subset_data`:
            Data subset does not support large Sql tables: null
        def `get_axes`:
            bottom: null
            left: null
        def `get_widget_name_extension`:
            '{} vs {}': null
        def `_get_send_report_caption`:
            Color: null
            Label: null
            Shape: null
            Size: null
            Jittering: null
        def `migrate_settings`:
            selection: null
            selection_group: null
            auto_send_selection: null
            auto_commit: null
            graph: null
            jitter_continuous: null
        def `migrate_context`:
            attr_color: null
            graph: null
            attr_size: null
            attr_shape: null
            attr_label: null
            attr_x: null
            attr_y: null
    __main__: null
    iris: null
widgets/visualize/owscatterplotgraph.py:
    class `LegendItem`:
        def `addItem`:
            left: null
    class `ScatterPlotItem`:
        def `setCoordinates`:
            pen: null
            brush: null
            size: null
            symbol: null
            data: null
    def `_define_symbols`:
        '?': null
        +: null
        t: null
        x: null
    class `AxisItem`:
        def `tickStrings`:
            '%Y': null
            '%Y %b': null
            '%Y %b %d': null
            '%Hh': null
            '%d %Hh': null
            '%H:%M': null
            '%H:%M:%S': null
            '%S.%f': null
    class `ScatterBaseParameterSetter`:
        Categorical legend: null
        Numerical legend: null
    class `OWScatterPlotBase`:
        o x t + d star ?: null
        def `__init__`:
            left: null
            bottom: null
        def `_create_drag_tooltip`:
            '{}: Append to group': null
            Cmd: null
            darwin: null
            Ctrl: null
            'Shift: Add group': null
            'Alt: Remove': null
            <center>: null
            ', ': null
            </center>: null
            <b>{}</b>: null
        def `get_sizes`:
            ignore: null
        def `update_sizes`:
            impute_sizes: null
            size: null
        def `update_density`:
            pen: null
        def `get_shapes`:
            impute_shapes: null
        def `_update_color_legend`:
            o: null
widgets/visualize/owsieve.py:
    class `ChiSqStats`:
        def `__init__`:
            ignore: null
    class `SieveRank`:
        Sieve Rank: null
    class `OWSieveDiagram`:
        Sieve Diagram: null
        'Visualize the observed and expected frequencies ': null
        for a combination of values.: null
        icons/SieveDiagram.svg: null
        class `Inputs`:
            Data: null
            Features: null
        class `Outputs`:
            Selected Data: null
        canvas: null
        def `__init__`:
            attr_x: null
            \u2717: null
            attr_y: null
            Score Combinations: null
        def `migrate_context`:
            attrX: null
            attr_x: null
            attrY: null
            attr_y: null
        def `resolve_shown_attributes`:
            Features from the input signal are not present in the data: null
        def `update_graph`:
            def `text`:
                max_width: null
            def `fmt`:
                '{:.2f}': null
            def `make_tooltip`:
                def `_oper`:
                    ' = ': null
                    ' ': null
                    <≥: null
                    ' in ': null
                '<b>{attr}{eq}{val_name}</b>: {obs}/{n} ({p:.0f} %)': null
                ? "<b>combination of values: </b><br/>\n                   &nbsp;&nbsp;&nbsp;expected\
                    \ {exp} ({p_exp:.0f} %)<br/>\n                   &nbsp;&nbsp;&nbsp;observed\
                    \ {obs} ({p_obs:.0f} %)"
                : null
                '{xt}<br/>{yt}<hr/>{ct}': null
            Features {} and {} have no values: null
            Feature {} has no values: null
            χ²={:.2f}, p={:.3f}: null
            'N = ': null
        def `get_widget_name_extension`:
            '{} vs {}': null
    __main__: null
    zoo: null
widgets/visualize/owsilhouetteplot.py:
    class `NoGroupVariable`:
        Input does not have any suitable labels: null
    class `OWSilhouettePlot`:
        Silhouette Plot: null
        'Visually assess cluster quality and ': null
        the degree of cluster membership.: null
        icons/SilhouettePlot.svg: null
        class `Inputs`:
            Data: null
        class `Outputs`:
            Selected Data: null
        orangecontrib.prototypes.widgets.owsilhouetteplot.OWSilhouettePlot: null
        Orange.widgets.unsupervised.owsilhouetteplot.OWSilhouettePlot: null
        Euclidean: null
        Manhattan: null
        Cosine: null
        scene: null
        class `Error`:
            Need at least two non-empty clusters: null
            All clusters are singletons: null
            Not enough memory: null
            'Distances could not be computed: ''{}''': null
            '{}': null
        class `Warning`:
            '{} instance{s} omitted (missing cluster assignment)': null
            '{} instance{s} omitted (undefined distances)': null
            Ignoring categorical features: null
        def `__init__`:
            Distance: null
            distance_idx: null
            Grouping: null
            (None): null
            cluster_var: null
            group_by_cluster: null
            Show in groups: null
            Bars: null
            'Bar width:': null
            bar_size: null
            'Annotations:': null
            annotation_var: null
            (increase the width to show): null
            auto_commit: null
        def `_set_distances`:
            Input matrix does not have associated data: null
        def `_ensure_matrix`:
            invalid state: null
        def `_update`:
            precomputed: null
            s: null
        def `commit`:
            strictly increasing: null
            Silhouette ({}): null
        def `send_report`:
            'Silhouette plot ': null
            '({self.Distances[self.distance_idx][0]} distance), ': null
            clustered by '{self.cluster_var.name}': null
            ', annotated with ''{self.annotation_var.name}''': null
        def `migrate_context`:
            cluster_var_idx: null
            cluster_var: null
            annotation_var_idx: null
            annotation_var: null
    def `show_tool_tip`:
        QTipLabel: null
        <span>{etext}</span>: null
    class `SilhouettePlot`:
        def `setScores`:
            scores and labels must be 1 dimensional: null
            scores and labels must have the same shape: null
            rownames must have the same size as scores: null
            All indices in `labels` must be in `range(len(values))`: null
        def `__setup`:
            top: null
            ' ({np.mean(group.scores):.3f})': null
            bottom: null
    class `Line`:
        def `__init__`:
            sizePolicy: null
    class `BarPlotItem`:
        def `__init__`:
            '#3FCFCF': null
    __main__: null
    brown-selected: null
widgets/visualize/owtreeviewer.py:
    class `TreeNode`:
        def `rect`:
            _rect: false
        def `boundingRect`:
            attr: false
    class `OWTreeGraph`:
        Tree Viewer: Drevogled
        icons/TreeViewer.svg: false
        class `Inputs`:
            Tree: Drevo
            Classification Tree: false
            Regression Tree: false
        class `Outputs`:
            Selected Data: Izbrani podatki
            selected-data: false
            annotated-data: false
        Orange.widgets.classify.owclassificationtreegraph.OWClassificationTreeGraph: false
        Orange.widgets.classify.owregressiontreegraph.OWRegressionTreeGraph: false
        Default: Privzeto
        Number of instances: Število primerov
        Mean value: Srednja vrednost
        Variance: Varianca
        def `__init__`:
            'Target class: ': 'Ciljni razred: '
            show_intermediate: null
            Show details in non-leaves: null
        def `_update_node_info_attr_name`:
            <hr/>: null
        def `ctree`:
            No tree.: Ni drevesa.
            'Target class: ': 'Ciljni razred: '
            None: Brez
            'Color by: ': Obarvaj po
            '{} nodes, {} leaves': null
        def `node_tooltip`:
            '&nbsp;&nbsp;&nbsp;': null
            <p style='white-space:pre'>: null
            <br/>: null
            '{indent}– {to_html(str(rule))}': null
            <p><b>Selection</b></p><p>{rule}</p>: null
            '{nbp}<b>Distribution of</b> ''{name}''</p><p>': null
            '{indent}<span style=''color: {color_to_hex(color)}''>◼</span> ': null
            '{escape(value)}: {prop:g} ({prop / total * 100:.1f} %)': null
            </p>: null
            '{nbp}{class_var.name} = {mean:.3g} ± {var:.3g}<br/>': null
            ({self.tree_adapter.num_samples(node.node_inst)} instances)</p>: null
            '<p style=''white-space:pre''><b>Next split: </b>{split}</p>': null
            <hr/>: null
        def `send_report`:
            Tree size: Velikost drevesa
            Edge widths: Širina vej
            Fixed: Enaka
            Relative to root: Relativna glede na koren
            Relative to parent: Relativna glede na očeta
            # a je lahko relativna glede na starša? A je to vezano na kak drug koncept? 
            Target class: Ciljni razred
            Color by: Obarvaj po
        def `update_node_info`:
            '<p style="line-height: 120%; margin-bottom: 0">{text}</p>': null
        def `node_content_cls`:
            <b>{self.domain.class_vars[0].values[int(modus)]}</b><br/>: null
            100%, {total}/{total}: null
            '{100 * tabs:2.1f}%, {int(total * tabs)}/{total}': null
        def `node_content_reg`:
            <b>{mean:.1f}</b> ± {var:.1f}<br/>: null
            '{insts} instances': null
    __main__: false
    titanic: false
widgets/visualize/owtreeviewer2d.py:
    class `GraphNode`:
        def `__init__`:
            edges: false
    class `TextTreeNode`:
        def `backgroundBrush`:
            _background_brush: false
            defaultItemBrush: false
        QBrush: false
        Background brush: false
        def `setHtml`:
            <body>: false
            </body>: false
        def `rect`:
            _rect: false
        def `boundingRect`:
            _rect: false
    class `TreeGraphicsView`:
        resized: false
    class `OWTreeViewer2D`:
        scene: false
        def `__init__`:
            Tree: Drevo
            No tree.: Ni drevesa.
            Display: Prikaz
            'Zoom: ': 'Povečava: '
            zoom: false
            'Width: ': 'Širina: '
            max_node_width: false
            'Depth: ': 'Globina: '
            max_tree_depth: false
            Unlimited: Neomejena
            '{} levels': null
            'Edge width: ': 'Širina povezav: '
            line_width_method: false
            Fixed: Enaka
            Relative to root: Relativna glede na koren
            Relative to parent: Relativna glede na očeta
            # Relativna na starša
            ? "QToolTip { padding: 3px;\n                                        \
                \            border: 1px solid #C0C0C0;\n                        \
                \              }"
            : null
        def `send_report`:
            Tree: Drevo
            .svg: false
        def `node_tooltip`:
            tree node: vozlišče drevesa
widgets/visualize/owvenndiagram.py:
    _InputData: null
    key: null
    name: null
    table: null
    _ItemSet: null
    title: null
    items: null
    Instance identity: null
    Instance equality: null
    class `OWVennDiagram`:
        Venn Diagram: null
        'A graphical visualization of the overlap of data instances ': null
        from a collection of input datasets.: null
        icons/VennDiagram.svg: null
        class `Inputs`:
            Data: null
        class `Outputs`:
            Selected Data: null
        class `Error`:
            Data sets do not contain the same instances.: null
            Venn diagram accepts at most five datasets.: null
        class `Warning`:
            'Some variables have been renamed ': null
            to avoid duplicates.\n{}: null
        scene: null
        attributes: null
        metas: null
        class_vars: null
        X: null
        Y: null
        x: null
        y: null
        def `__init__`:
            rowwise: null
            Columns (features): null
            Rows (instances), matched by: null
            selected_feature: null
            'Instances are identical if originally coming from the ': null
            same row of the same table.\n: null
            'Instances can be check for equality only if described by ': null
            the same variables.: null
            output_duplicates: null
            Output duplicates: null
            autocommit: null
        def `_createDiagram`:
            '{} <i>(all: {})</i>': null
            '{}': null
            '{0}': null
            <h4>|{}| = {}</h4>: null
            <span>: null
            ', ': null
            </br>({len(area_items) - 32} items not shown): null
            </span>: null
        def `merge_data`:
            ', ': null
            attributes: null
            metas: null
            class_vars: null
        def `extract_columnwise`:
            '{var_name.name} ({idx})': null
            attributes: null
            Selected: null
            ', ': null
        def `create_from_columns`:
            attributes: null
        def `extract_rowwise`:
            '{} ({})': null
            ', ': null
        def `get_indices`:
            metas: null
        def `extract_rowwise_duplicates`:
            name: null
            attributes: null
            metas: null
            class_vars: null
        def `migrate_settings`:
            selected_feature: null
    def `disjoint_set_label`:
        INTERSECTION: null
        c: null
        def `label_for_index`:
            A: null
        <sup>: null
        </sup>: null
    class `VennDiagram`:
        <center><h4>{0}</h4>{1}</center>: null
        def `_on_editingStarted`:
            <br/>: null
    def `append_column`:
        X: null
        Y: null
        M: null
    def `main`:
        brown-selected: null
        test_rows: null
        M: null
        Test: null
        A: null
    __main__: null
widgets/visualize/owviolinplot.py:
    class `ParameterSetter`:
        Bottom axis: null
        Vertical tick text: null
        def `axis_items`:
            item: null
        def `bottom_axis`:
            bottom: null
    class `ViolinItem`:
        RugPlot: null
        support, density: null
    class `ViolinPlot`:
        def `__init__`:
            bottom: null
            left: null
        def `order_items`:
            bottom: null
            left: null
        def `_set_axes`:
            left: null
            bottom: null
        def `_clear_axes`:
            left: null
            bottom: null
    class `OWViolinPlot`:
        Violin Plot: null
        Visualize the distribution of feature: null
        ' values in a violin plot.': null
        icons/ViolinPlot.svg: null
        kernel: null
        density: null
        class `Inputs`:
            Data: null
        class `Outputs`:
            Selected Data: null
        class `Error`:
            Plotting requires a numeric feature.: null
            Plotting requires at least two instances.: null
        gaussian: null
        epanechnikov: null
        linear: null
        Normal: null
        Epanechnikov: null
        Linear: null
        Area: null
        Count: null
        Width: null
        graph.plotItem: null
        def `_add_controls`:
            None: null
            Variable: null
            order_by_importance: null
            Order by relevance to subgroups: null
            Order by 𝜒² or ANOVA over the subgroups: null
            Subgroups: null
            order_grouping_by_importance: null
            Order by relevance to variable: null
            Order by 𝜒² or ANOVA over the variable values: null
            Display: null
            show_box_plot: null
            Box plot: null
            show_strip_plot: null
            Strip plot: null
            show_rug_plot: null
            Rug plot: null
            order_violins: null
            Order subgroups: null
            show_grid: null
            Show grid: null
            orientation_index: null
            Horizontal: null
            Vertical: null
            'Orientation: ': null
            Density Estimation: null
            kernel_index: null
            'Kernel:': null
            scale_index: null
            'Scale:': null
        def `init_list_view`:
            hidden: null
    __main__: null
    heart_disease: null
widgets/visualize/pythagorastreeviewer.py:
    Square: null
    center: null
    length: null
    angle: null
    Point: null
    x: null
    y: null
    class `PythagorasTreeViewer`:
        def `__init__`:
            interactive: null
            target_class_index: null
            weight_adjustment: null
    class `SquareGraphicsItem`:
        def `__init__`:
            brush: null
            '#297A1F': null
            zvalue: null
    class `TreeNode`:
        def `_rules_str`:
            <br>: null
            <br><b>%s</b>: null
    class `DiscreteTreeNode`:
        def `tooltip`:
            <br>: null
            <p>: null
            '{}/{} samples ({:2.3f}%)': null
            <hr>: null
            'Split by ': null
            <br><br>: null
            </p>: null
    class `ContinuousTreeNode`:
        None: null
        Mean: null
        Standard deviation: null
        def `tooltip`:
            '<p>Mean: {:2.3f}': null
            '<br>Standard deviation: {:2.3f}': null
            <br>{} samples: null
            <hr>: null
            'Split by ': null
            <br><br>: null
            </p>: null
widgets/visualize/utils/__init__.py:
    class `VizRankDialog`:
        class `Information`:
            There is nothing to rank.: null
        def `__init__`:
            Filter ...: null
            Start: null
        def `initialize`:
            Start: null
        def `on_done`:
            Finished: null
        def `toggle`:
            Pause: null
            Continue: null
    def `run_vizrank`:
        Getting combinations...: null
        Getting scores...: null
    class `VizRankDialogAttrPair`:
        def `__init__`:
            xy_changed_manually: null
        def `row_for_state`:
            name: null
            ', ': null
    class `CanvasText`:
        def `elide`:
            '...': null
    class `ViewWithPress`:
        def `__init__`:
            handler: null
widgets/visualize/utils/component.py:
    class `AnchorParameterSetter`:
        Anchor: null
widgets/visualize/utils/customizableplot.py:
    def `available_font_families`:
        .: null
    class `Updater`:
        Font family: null
        Font size: null
        Italic: null
        Width: null
        Opacity: null
        Style: null
        Antialias: null
        Solid line: null
        Dash line: null
        Dot line: null
        Dash dot line: null
        Dash dot dot line: null
        def `update_axes_titles_font`:
            normal: null
            italic: null
            font-size: null
            '{font.pointSize()}pt': null
            font-family: null
            '{font.family()}': null
            font-style: null
            '{fstyle}': null
        def `update_axes_ticks_font`:
            tickFont: null
        def `update_legend_font`:
            size: null
        def `update_lines`:
            pen: null
        def `update_inf_lines`:
            label: null
    class `CommonParameterSetter`:
        Fonts: null
        Annotations: null
        Figure: null
        Font family: null
        Axis title: null
        Axis ticks: null
        Legend: null
        Label: null
        Line label: null
        x-axis title: null
        y-axis title: null
        Title: null
        Lines: null
        def `__init__`:
            bottom: null
            left: null
widgets/visualize/utils/heatmap.py:
    class `ColorMap`:
        def `replace`:
            ColorMap: null
    class `CategoricalColorMap`:
        def `replace`:
            CategoricalColorMap: null
            colortable: null
            names: null
    class `GradientColorMap`:
        def `adjust_levels`:
            low > high ({low} > {high}): null
        def `apply`:
            ignore: null
            unsafe: null
        def `replace`:
            GradientColorMap: null
            colortable: null
            thresholds: null
            center: null
            span: null
    def `normalized_indices`:
        RowItem: null
        ColumnItem: null
    class `HeatmapGridWidget`:
        class `Parts`:
            RowItem: null
            ColumnItem: null
        def `setHeatmaps`:
            Parts: null
            row-labels-right: null
            column-labels-top: null
            column-labels-bottom: null
            annotation-legend-container: null
            row-annotation-legend-container: null
            col-annotation-legend-container: null
        def `heatmapAtPos`:
            GraphicsHeatmapWidget: null
    class `GraphicsHeatmapWidget`:
        def `heatmapCellToolTip`:
            '{}, {}: {:g}': null
    class `_GradientLegendAxisItem`:
        def `boundingRect`:
            top: null
            bottom: null
            tickFont: null
            '0.0000000': null
    class `GradientLegendWidget`:
        def `__init__`:
            sizePolicy: null
            top: null
        def `__update`:
            '{:.6g}': null
    class `CategoricalColorLegend`:
        def `__init__`:
            sizePolicy: null
        def `_setup`:
            X: null
        def `_updateFont`:
            X: null
widgets/visualize/utils/lac.py:
    def `create_sql_contingency`:
        '%s IS NOT NULL': null
        COUNT(%s): null
        float: null
    def `lac`:
        Initializing: null
        Done: null
    def `get_bin_centers`:
        '[]()<>=≥': null
        '-': null
widgets/visualize/utils/owlegend.py:
    class `Anchorable`:
        topLeft: null
        topRight: null
        bottomLeft: null
        bottomRight: null
        def `__init__`:
            bottomRight: null
    class `ContinuousLegendItem`:
        def `_format_values`:
            '{:.3f}': null
    class `OWDiscreteLegend`:
        def `set_domain`:
            '[OWDiscreteLegend] The class var provided ': null
            was not discrete.: null
    class `OWContinuousLegend`:
        def `__init__`:
            range: null
        def `set_domain`:
            '[OWContinuousLegend] The class var provided ': null
            was not continuous.: null
widgets/visualize/utils/plotutils.py:
    class `TextItem`:
        setAnchor: null
    class `InteractiveViewBox`:
        def `mouseDragEvent`:
            mouseMode: null
    class `PaletteItemSample`:
        def `__init__`:
            '{{:.{}f}}': null
            '{} - {}': null
    class `StyledAxisItem`:
        def `__clear_labelStyle_color`:
            color: null
    class `AxisItem`:
        def `__init__`:
            rotateTicks: null
        def `setRotateTicks`:
            rotateTicks: null
        def `drawPicture`:
            bottom: null
            top: null
            rotateTicks: null
            tickFont: null
            tickTextOffset: null
    class `PlotWidget`:
        def `__init__`:
            axisItems: null
            left: null
            bottom: null
    class `PlotItem`:
        def `__init__`:
            axisItems: null
            left: null
            bottom: null
widgets/visualize/utils/scene.py:
    class `UpdateItemsOnSelectGraphicsScene`:
        def `__handle_selection`:
            selection_changed: null
widgets/visualize/utils/widget.py:
    class `OWProjectionWidgetBase`:
        class `Information`:
            Points with undefined '{}' are shown in smaller size: null
            Points with undefined '{}' are shown as crossed circles: null
        def `init_attr_values`:
            attr_color: null
            attr_shape: null
            attr_size: null
            attr_label: null
        def `get_column`:
            Other: null
        def `_point_tooltip`:
            def `show_part`:
                '{} = {}': null
                '... and {} others': null
                <b>{}</b>:<br/>: null
                <br/>: null
            Class: null
            Classes: null
            Meta: null
            Metas: null
            Feature: null
            Features: null
            <br/>: null
        def `get_tooltip`:
            <hr/>: null
            '{} instances<hr/>{}<hr/>...': null
    class `OWDataProjectionWidget`:
        class `Inputs`:
            Data: null
            Data Subset: null
        class `Outputs`:
            Selected Data: null
        class `Warning`:
            Too many labels to show (zoom in or label only selected): null
            'Subset data contains some instances that do not appear in ': null
            input data: null
            No subset data instances appear in input data: null
            Increase opacity if subset is difficult to see: null
        graph.plot_widget.plotItem: null
        proj-x: null
        proj-y: null
        def `_add_buttons`:
            auto_commit: null
        def `_get_selected_data`:
            Group: null
        def `_get_send_report_caption`:
            Color: null
            Label: null
            Shape: null
            Size: null
            Jittering: null
            '{} %': null
    class `OWAnchorProjectionWidget`:
        class `Outputs`:
            Components: null
        class `Error`:
            Sparse data is not supported: null
            No projection due to no valid data: null
            At least two data instances are required: null
            An error occurred while projecting data.\n{}: null
        def `send_components`:
            component: null
            components: null
    __main__: null
    class `OWProjectionWidgetWithName`:
        projection: null
    iris: null
widgets/visualize/utils/tree/rules.py:
    class `DiscreteRule`:
        def `merge_with`:
            Merged two discrete rules `%s` and `%s`: null
        def `description`:
            '{} {}': null
            '=': null
            ≠: null
        def `__str__`:
            '{} {} {}': null
            '=': null
            ≠: null
        def `__repr__`:
            DiscreteRule(attr_name='%s', equals=%s, value=%s): null
    class `ContinuousRule`:
        def `merge_with`:
            'Continuous rules can currently only be ': null
            merged with other continuous rules: null
        def `description`:
            '%s %.3f': null
            '>': null
            ≤: null
        def `__str__`:
            '%s %s %.3f': null
            '>': null
            ≤: null
        def `__repr__`:
            'ContinuousRule(attr_name=''%s'', greater=%s, value=%s, ': null
            inclusive=%s): null
    class `IntervalRule`:
        def `__init__`:
            'The left rule must be an instance of the `ContinuousRule` ': null
            class.: null
            'The right rule must be an instance of the `ContinuousRule` ': null
        def `description`:
            ∈ %s%.3f, %.3f%s: null
            '[': null
            (: null
            ']': null
            ): null
        def `__str__`:
            '%s ∈ %s%.3f, %.3f%s': null
            '[': null
            (: null
            ']': null
            ): null
        def `__repr__`:
            IntervalRule(attr_name='%s', left_rule=%s, right_rule=%s): null
widgets/visualize/utils/tree/skltreeadapter.py:
    class `SklTreeAdapter`:
        def `rules`:
            values: null
            _: null
